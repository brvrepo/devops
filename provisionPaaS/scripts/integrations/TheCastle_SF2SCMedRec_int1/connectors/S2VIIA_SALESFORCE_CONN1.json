{
  "connectionProperties": [
    {
      "attachment": {
        "attachmentName": "cri_newContactExtId_salesforce_enterprise_wsdl.wsdl",
        "content": "<definitions targetNamespace="urn:enterprise.soap.sforce.com"
             xmlns="http://schemas.xmlsoap.org/wsdl/"
             xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/"
             xmlns:xsd="http://www.w3.org/2001/XMLSchema"
             xmlns:tns="urn:enterprise.soap.sforce.com"
             xmlns:fns="urn:fault.enterprise.soap.sforce.com"
             xmlns:ens="urn:sobject.enterprise.soap.sforce.com">
    <types>

        <schema elementFormDefault="qualified" xmlns="http://www.w3.org/2001/XMLSchema" targetNamespace="urn:sobject.enterprise.soap.sforce.com">

            <import namespace="urn:enterprise.soap.sforce.com"/>


            <!-- Base sObject (abstract) -->
            <complexType name="sObject">
                <sequence>
                    <element name="fieldsToNull"       type="xsd:string" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
                    <element name="Id"                 type="tns:ID" nillable="true" />
                </sequence>
            </complexType>

            <complexType name="AggregateResult">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                            <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded" processContents="lax"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="AcceptedEventRelation">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Event" nillable="true" minOccurs="0" type="ens:Event"/>
                        <element name="EventId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Relation" nillable="true" minOccurs="0" type="ens:sObject"/>
                        <element name="RelationId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="RespondedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Response" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Type" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="Account">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AccountContactRoles" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="AccountNumber" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="AccountPartnersFrom" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="AccountPartnersTo" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="AccountSource" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ActivityHistories" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="AnnualRevenue" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="Assets" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="AttachedContentDocuments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Attachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="BillingAddress" nillable="true" minOccurs="0" type="tns:address"/>
                        <element name="BillingCity" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="BillingCountry" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="BillingGeocodeAccuracy" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="BillingLatitude" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="BillingLongitude" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="BillingPostalCode" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="BillingState" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="BillingStreet" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Cases" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ChildAccounts" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CombinedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Contacts" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Contracts" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Description" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="DuplicateRecordItems" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Emails" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Events" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Fax" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="FeedSubscriptionsForEntity" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Feeds" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Histories" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Industry" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="Jigsaw" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="JigsawCompanyId" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="LastActivityDate" nillable="true" minOccurs="0" type="xsd:date"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastReferencedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastViewedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LookedUpFromActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="MasterRecord" nillable="true" minOccurs="0" type="ens:Account"/>
                        <element name="MasterRecordId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Notes" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="NotesAndAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="NumberOfEmployees" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="OpenActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Opportunities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="OpportunityPartnersTo" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Owner" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="OwnerId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="Ownership" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Parent" nillable="true" minOccurs="0" type="ens:Account"/>
                        <element name="ParentId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="PartnersFrom" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="PartnersTo" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Phone" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="PhotoUrl" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ProcessInstances" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessSteps" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProvidedAssets" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Rating" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="RecordAssociatedGroups" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ServicedAssets" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Shares" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ShippingAddress" nillable="true" minOccurs="0" type="tns:address"/>
                        <element name="ShippingCity" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ShippingCountry" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ShippingGeocodeAccuracy" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ShippingLatitude" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="ShippingLongitude" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="ShippingPostalCode" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ShippingState" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ShippingStreet" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Sic" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SicDesc" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Site" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Tasks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="TickerSymbol" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TopicAssignments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Type" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        <element name="Website" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="origami1__Active__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="origami1__CustomerPriority__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="origami1__NumberofLocations__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="origami1__SLAExpirationDate__c" nillable="true" minOccurs="0" type="xsd:date"/>
                        <element name="origami1__SLASerialNumber__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="origami1__SLA__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="origami1__UpsellOpportunity__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="AccountContactRole">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="Account" nillable="true" minOccurs="0" type="ens:Account"/>
                        <element name="AccountId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="Contact" nillable="true" minOccurs="0" type="ens:Contact"/>
                        <element name="ContactId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsPrimary" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Role" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="AccountFeed">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="Body" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CommentCount" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:sObject"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="FeedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedComments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedLikes" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedSignals" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedTrackedChanges" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="InsertedBy" nillable="true" minOccurs="0" type="ens:sObject"/>
                        <element name="InsertedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsRichText" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LikeCount" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="LinkUrl" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Parent" nillable="true" minOccurs="0" type="ens:Account"/>
                        <element name="ParentId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="RelatedRecordId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Title" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Type" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="AccountHistory">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="Account" nillable="true" minOccurs="0" type="ens:Account"/>
                        <element name="AccountId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:sObject"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Field" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="NewValue" nillable="true" minOccurs="0" type="xsd:anyType"/>
                        <element name="OldValue" nillable="true" minOccurs="0" type="xsd:anyType"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="AccountPartner">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AccountFrom" nillable="true" minOccurs="0" type="ens:Account"/>
                        <element name="AccountFromId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="AccountTo" nillable="true" minOccurs="0" type="ens:Account"/>
                        <element name="AccountToId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsPrimary" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Opportunity" nillable="true" minOccurs="0" type="ens:Opportunity"/>
                        <element name="OpportunityId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ReversePartnerId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="Role" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="AccountShare">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="Account" nillable="true" minOccurs="0" type="ens:Account"/>
                        <element name="AccountAccessLevel" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="AccountId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CaseAccessLevel" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ContactAccessLevel" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="OpportunityAccessLevel" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="RowCause" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="UserOrGroup" nillable="true" minOccurs="0" type="ens:sObject"/>
                        <element name="UserOrGroupId" nillable="true" minOccurs="0" type="tns:ID"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="ActionLinkGroupTemplate">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="ActionLinkTemplates" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Category" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DeveloperName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ExecutionsAllowed" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="HoursUntilExpiration" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsPublished" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="Language" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="MasterLabel" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="NamespacePrefix" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="ActionLinkTemplate">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="ActionLinkGroupTemplate" nillable="true" minOccurs="0" type="ens:ActionLinkGroupTemplate"/>
                        <element name="ActionLinkGroupTemplateId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ActionUrl" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Headers" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsConfirmationRequired" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsGroupDefault" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="Label" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="LabelKey" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LinkType" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Method" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Position" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="RequestBody" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="UserAlias" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="UserVisibility" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="ActivityExtension">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="Base" nillable="true" minOccurs="0" type="ens:Event"/>
                        <element name="BaseId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="BaseType" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="EventActivityExtension" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsException" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="RecurrenceId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="ActivityHistory">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="Account" nillable="true" minOccurs="0" type="ens:Account"/>
                        <element name="AccountId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ActivityDate" nillable="true" minOccurs="0" type="xsd:date"/>
                        <element name="ActivitySubtype" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ActivityType" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="AlternateDetail" nillable="true" minOccurs="0" type="ens:EmailMessage"/>
                        <element name="AlternateDetailId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CallDisposition" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CallDurationInSeconds" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="CallObject" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CallType" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Description" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="DurationInMinutes" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="EndDateTime" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="IsAllDayEvent" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsClosed" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsHighPriority" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsReminderSet" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsTask" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsVisibleInSelfService" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Location" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Owner" nillable="true" minOccurs="0" type="ens:sObject"/>
                        <element name="OwnerId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="Priority" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ReminderDateTime" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="StartDateTime" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Status" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Subject" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="What" nillable="true" minOccurs="0" type="ens:sObject"/>
                        <element name="WhatId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="Who" nillable="true" minOccurs="0" type="ens:sObject"/>
                        <element name="WhoId" nillable="true" minOccurs="0" type="tns:ID"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="ActivityRecurrence">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="Attendees" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DurationMinutes" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="EndDateTime" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastProjectedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Location" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Parent" nillable="true" minOccurs="0" type="ens:ActivityRecurrence"/>
                        <element name="ParentId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="PatternVersion" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="RecurrenceFieldJson" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="RecurrencePatternText" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ReminderMinutes" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="StartDateTime" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Subject" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Summary" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="ActivityRecurrenceException">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="Attendees" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DurationMinutes" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="EndDateTime" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsExcluded" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Location" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Recurrence" nillable="true" minOccurs="0" type="ens:ActivityRecurrence"/>
                        <element name="RecurrenceFieldJson" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="RecurrenceId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ReminderMinutes" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="StartDateTime" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Subject" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Summary" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="AdditionalNumber">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CallCenterId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Description" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Phone" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="Announcement">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="ExpirationDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="FeedItem" nillable="true" minOccurs="0" type="ens:FeedItem"/>
                        <element name="FeedItemId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="IsArchived" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Parent" nillable="true" minOccurs="0" type="ens:CollaborationGroup"/>
                        <element name="ParentId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SendEmails" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="ApexClass">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="ApiVersion" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="Body" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="BodyCrc" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="IsValid" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LengthWithoutComments" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="NamespacePrefix" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SetupEntityAccessItems" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Status" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="ApexComponent">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="ApiVersion" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="ControllerKey" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ControllerType" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Description" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Markup" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="MasterLabel" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="NamespacePrefix" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="ApexEmailNotification">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Email" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="User" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="UserId" nillable="true" minOccurs="0" type="tns:ID"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="ApexLog">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="Application" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="DurationMilliseconds" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Location" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="LogLength" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="LogUser" nillable="true" minOccurs="0" type="ens:sObject"/>
                        <element name="LogUserId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="Operation" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Request" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="StartTime" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Status" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="ApexPage">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="ApiVersion" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="ControllerKey" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ControllerType" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Description" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsAvailableInTouch" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsConfirmationTokenRequired" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Markup" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="MasterLabel" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="NamespacePrefix" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SetupEntityAccessItems" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="ApexPageInfo">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="ApexPageId" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ApiVersion" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="Description" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="DurableId" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsAvailableInTouch" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsShowHeader" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="MasterLabel" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="NameSpacePrefix" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="ApexTestQueueItem">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="ApexClass" nillable="true" minOccurs="0" type="ens:ApexClass"/>
                        <element name="ApexClassId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="ExtendedStatus" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ParentJobId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="Status" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TestRunResultId" nillable="true" minOccurs="0" type="tns:ID"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="ApexTestResult">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="ApexClass" nillable="true" minOccurs="0" type="ens:ApexClass"/>
                        <element name="ApexClassId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ApexLog" nillable="true" minOccurs="0" type="ens:ApexLog"/>
                        <element name="ApexLogId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ApexTestResults" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ApexTestRunResult" nillable="true" minOccurs="0" type="ens:ApexTestRunResult"/>
                        <element name="ApexTestRunResultId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="AsyncApexJob" nillable="true" minOccurs="0" type="ens:AsyncApexJob"/>
                        <element name="AsyncApexJobId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="Message" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="MethodName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Outcome" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="QueueItem" nillable="true" minOccurs="0" type="ens:ApexTestQueueItem"/>
                        <element name="QueueItemId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="RunTime" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="StackTrace" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TestTimestamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="ApexTestResultLimits">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="ApexTestResult" nillable="true" minOccurs="0" type="ens:ApexTestResult"/>
                        <element name="ApexTestResultId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="AsyncCalls" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="Callouts" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="Cpu" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Dml" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="DmlRows" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="Email" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LimitContext" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="LimitExceptions" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="MobilePush" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="QueryRows" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="Soql" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="Sosl" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="ApexTestRunResult">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AsyncApexJob" nillable="true" minOccurs="0" type="ens:AsyncApexJob"/>
                        <element name="AsyncApexJobId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ClassesCompleted" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="ClassesEnqueued" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="EndTime" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="IsAllTests" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="JobName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="MethodsCompleted" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="MethodsEnqueued" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="MethodsFailed" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="Source" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="StartTime" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Status" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TestTime" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="User" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="UserId" nillable="true" minOccurs="0" type="tns:ID"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="ApexTestSuite">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="ApexClassIds" nillable="true" minOccurs="0" maxOccurs="unbounded" type="tns:ID"/>
                        <element name="ApexClassJunctions" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TestSuiteName" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="ApexTrigger">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="ApiVersion" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="Body" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="BodyCrc" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="IsValid" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LengthWithoutComments" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="NamespacePrefix" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Status" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TableEnumOrId" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="UsageAfterDelete" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="UsageAfterInsert" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="UsageAfterUndelete" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="UsageAfterUpdate" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="UsageBeforeDelete" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="UsageBeforeInsert" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="UsageBeforeUpdate" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="UsageIsBulk" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="AppMenuItem">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="ApplicationId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CanvasAccessMethod" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CanvasEnabled" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="CanvasOptions" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CanvasReferenceId" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CanvasSelectedLocations" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CanvasUrl" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Description" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IconUrl" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="InfoUrl" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsAccessible" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsRegisteredDeviceOnly" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsUsingAdminAuthorization" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsVisible" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="Label" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LogoUrl" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="MobileAppBinaryId" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="MobileAppInstallUrl" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="MobileAppInstalledDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="MobileAppInstalledVersion" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="MobileAppVer" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="MobileDeviceType" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="MobileMinOsVer" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="MobilePlatform" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="MobileStartUrl" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="NamespacePrefix" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SortOrder" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="StartUrl" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Type" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="UserSortOrder" nillable="true" minOccurs="0" type="xsd:int"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="Approval">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="ApproveComment" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Owner" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="OwnerId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="Parent" nillable="true" minOccurs="0" type="ens:Contract"/>
                        <element name="ParentId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="RequestComment" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Status" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="Asset">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="Account" nillable="true" minOccurs="0" type="ens:Account"/>
                        <element name="AccountId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ActivityHistories" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="AttachedContentDocuments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Attachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Cases" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ChildAssets" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CombinedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Contact" nillable="true" minOccurs="0" type="ens:Contact"/>
                        <element name="ContactId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Description" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Emails" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Events" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedSubscriptionsForEntity" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Feeds" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Histories" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="InstallDate" nillable="true" minOccurs="0" type="xsd:date"/>
                        <element name="IsCompetitorProduct" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastReferencedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastViewedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LookedUpFromActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Notes" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="NotesAndAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="OpenActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Parent" nillable="true" minOccurs="0" type="ens:Asset"/>
                        <element name="ParentId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="Price" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="PrimaryAssets" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessInstances" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessSteps" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Product2" nillable="true" minOccurs="0" type="ens:Product2"/>
                        <element name="Product2Id" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="PurchaseDate" nillable="true" minOccurs="0" type="xsd:date"/>
                        <element name="Quantity" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="RelatedAssets" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="RootAsset" nillable="true" minOccurs="0" type="ens:Asset"/>
                        <element name="RootAssetId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SerialNumber" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Status" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="StockKeepingUnit" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Tasks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="TopicAssignments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="UsageEndDate" nillable="true" minOccurs="0" type="xsd:date"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="AssetFeed">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="Body" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CommentCount" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:sObject"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="FeedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedComments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedLikes" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedSignals" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedTrackedChanges" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="InsertedBy" nillable="true" minOccurs="0" type="ens:sObject"/>
                        <element name="InsertedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsRichText" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LikeCount" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="LinkUrl" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Parent" nillable="true" minOccurs="0" type="ens:Asset"/>
                        <element name="ParentId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="RelatedRecordId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Title" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Type" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="AssetHistory">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="Asset" nillable="true" minOccurs="0" type="ens:Asset"/>
                        <element name="AssetId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:sObject"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Field" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="NewValue" nillable="true" minOccurs="0" type="xsd:anyType"/>
                        <element name="OldValue" nillable="true" minOccurs="0" type="xsd:anyType"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="AssetRelationship">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="ActivityHistories" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Asset" nillable="true" minOccurs="0" type="ens:Asset"/>
                        <element name="AssetId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="AssetRelationshipNumber" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="AttachedContentDocuments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CombinedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Emails" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Events" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedSubscriptionsForEntity" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Feeds" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FromDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Histories" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastReferencedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastViewedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LookedUpFromActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="OpenActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessInstances" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessSteps" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="RelatedAsset" nillable="true" minOccurs="0" type="ens:Asset"/>
                        <element name="RelatedAssetId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Tasks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ToDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="AssetRelationshipFeed">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="Body" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CommentCount" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:sObject"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="FeedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedComments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedLikes" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedSignals" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedTrackedChanges" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="InsertedBy" nillable="true" minOccurs="0" type="ens:sObject"/>
                        <element name="InsertedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsRichText" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LikeCount" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="LinkUrl" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Parent" nillable="true" minOccurs="0" type="ens:AssetRelationship"/>
                        <element name="ParentId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="RelatedRecordId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Title" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Type" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="AssetRelationshipHistory">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AssetRelationship" nillable="true" minOccurs="0" type="ens:AssetRelationship"/>
                        <element name="AssetRelationshipId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:sObject"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Field" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="NewValue" nillable="true" minOccurs="0" type="xsd:anyType"/>
                        <element name="OldValue" nillable="true" minOccurs="0" type="xsd:anyType"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="AssetTokenEvent">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="ActorTokenPayload" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Asset" nillable="true" minOccurs="0" type="ens:Asset"/>
                        <element name="AssetId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="AssetName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="AssetSerialNumber" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ConnectedApp" nillable="true" minOccurs="0" type="ens:ConnectedApplication"/>
                        <element name="ConnectedAppId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DeviceId" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="DeviceKey" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Expiration" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ReplayId" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="User" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="UserId" nillable="true" minOccurs="0" type="tns:ID"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="AssignmentRule">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="Active" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SobjectType" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="AsyncApexJob">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="ApexClass" nillable="true" minOccurs="0" type="ens:ApexClass"/>
                        <element name="ApexClassId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="AsyncApex" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CompletedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="ExtendedStatus" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="JobItemsProcessed" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="JobType" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="LastProcessed" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="LastProcessedOffset" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="MethodName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="NumberOfErrors" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="ParentJobId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="Status" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TotalJobItems" nillable="true" minOccurs="0" type="xsd:int"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="AttachedContentDocument">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="ContentDocument" nillable="true" minOccurs="0" type="ens:ContentDocument"/>
                        <element name="ContentDocumentId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ContentSize" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="ContentUrl" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="ExternalDataSourceName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ExternalDataSourceType" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="FileExtension" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="FileType" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LinkedEntity" nillable="true" minOccurs="0" type="ens:Contract"/>
                        <element name="LinkedEntityId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SharingOption" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Title" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="Attachment">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="Body" nillable="true" minOccurs="0" type="xsd:base64Binary"/>
                        <element name="BodyLength" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="ContentType" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:sObject"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Description" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsPrivate" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:sObject"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Owner" nillable="true" minOccurs="0" type="ens:sObject"/>
                        <element name="OwnerId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="Parent" nillable="true" minOccurs="0" type="ens:sObject"/>
                        <element name="ParentId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="AuraDefinition">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AuraDefinitionBundle" nillable="true" minOccurs="0" type="ens:AuraDefinitionBundle"/>
                        <element name="AuraDefinitionBundleId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DefType" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Format" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Source" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="AuraDefinitionBundle">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="ApiVersion" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Description" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="DeveloperName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="Language" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="MasterLabel" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="NamespacePrefix" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="AuraDefinitionBundleInfo">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="ApiVersion" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="AuraDefinitionBundleId" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Bundle" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="DeveloperName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="DurableId" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="NamespacePrefix" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="AuraDefinitionInfo">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AuraDefinitionBundleInfo" nillable="true" minOccurs="0" type="ens:AuraDefinitionBundleInfo"/>
                        <element name="AuraDefinitionBundleInfoId" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="AuraDefinitionId" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="DefType" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="DeveloperName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="DurableId" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Format" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="NamespacePrefix" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Source" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="AuthConfig">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AuthOptionsAuthProvider" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="AuthOptionsSaml" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="AuthOptionsUsernamePassword" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="AuthProvidersForConfig" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DeveloperName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsActive" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="Language" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="MasterLabel" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="NamespacePrefix" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Type" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Url" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="AuthConfigProviders">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AuthConfig" nillable="true" minOccurs="0" type="ens:AuthConfig"/>
                        <element name="AuthConfigId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="AuthProvider" nillable="true" minOccurs="0" type="ens:sObject"/>
                        <element name="AuthProviderId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="AuthProvider">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AuthorizeUrl" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ConsumerKey" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ConsumerSecret" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="CustomMetadataTypeRecord" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="DefaultScopes" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="DeveloperName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ErrorUrl" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ExecutionUserId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="FriendlyName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IconUrl" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IdTokenIssuer" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="LogoutUrl" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="OptionsIncludeOrgIdInId" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="OptionsSendAccessTokenInHeader" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="OptionsSendClientCredentialsInHeader" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PluginId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ProviderType" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="RegistrationHandlerId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="TokenUrl" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="UserInfoUrl" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="AuthSession">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="IsCurrent" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LoginGeo" nillable="true" minOccurs="0" type="ens:LoginGeo"/>
                        <element name="LoginGeoId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LoginHistory" nillable="true" minOccurs="0" type="ens:LoginHistory"/>
                        <element name="LoginHistoryId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LoginType" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="LogoutUrl" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="NumSecondsValid" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="ParentId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SessionPermSetActivations" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="SessionSecurityLevel" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SessionType" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SourceIp" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="UserType" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Users" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="UsersId" nillable="true" minOccurs="0" type="tns:ID"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="BackgroundOperation">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Error" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ExecutionGroup" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ExpiresAt" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="FinishedAt" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="GroupLeader" nillable="true" minOccurs="0" type="ens:BackgroundOperation"/>
                        <element name="GroupLeaderId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="MergedOperations" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="NumFollowers" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="ParentKey" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ProcessAfter" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="RetryBackoff" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="RetryCount" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="RetryLimit" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="SequenceGroup" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SequenceNumber" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="StartedAt" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Status" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SubmittedAt" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Timeout" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        <element name="WorkerUri" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="BrandTemplate">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Description" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="DeveloperName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsActive" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="NamespacePrefix" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Value" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="BusinessHours">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="Cases" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="FridayEndTime" nillable="true" minOccurs="0" type="xsd:time"/>
                        <element name="FridayStartTime" nillable="true" minOccurs="0" type="xsd:time"/>
                        <element name="IsActive" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsDefault" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastViewedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="MondayEndTime" nillable="true" minOccurs="0" type="xsd:time"/>
                        <element name="MondayStartTime" nillable="true" minOccurs="0" type="xsd:time"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SaturdayEndTime" nillable="true" minOccurs="0" type="xsd:time"/>
                        <element name="SaturdayStartTime" nillable="true" minOccurs="0" type="xsd:time"/>
                        <element name="SundayEndTime" nillable="true" minOccurs="0" type="xsd:time"/>
                        <element name="SundayStartTime" nillable="true" minOccurs="0" type="xsd:time"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="ThursdayEndTime" nillable="true" minOccurs="0" type="xsd:time"/>
                        <element name="ThursdayStartTime" nillable="true" minOccurs="0" type="xsd:time"/>
                        <element name="TimeZoneSidKey" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TuesdayEndTime" nillable="true" minOccurs="0" type="xsd:time"/>
                        <element name="TuesdayStartTime" nillable="true" minOccurs="0" type="xsd:time"/>
                        <element name="WednesdayEndTime" nillable="true" minOccurs="0" type="xsd:time"/>
                        <element name="WednesdayStartTime" nillable="true" minOccurs="0" type="xsd:time"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="BusinessProcess">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Description" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsActive" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="NamespacePrefix" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TableEnumOrId" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="CallCenter">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AdapterUrl" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="CustomSettings" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="InternalName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Version" nillable="true" minOccurs="0" type="xsd:double"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="Campaign">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="ActivityHistories" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ActualCost" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="AmountAllOpportunities" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="AmountWonOpportunities" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="AttachedContentDocuments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Attachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="BudgetedCost" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="CampaignMemberRecordType" nillable="true" minOccurs="0" type="ens:RecordType"/>
                        <element name="CampaignMemberRecordTypeId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CampaignMemberStatuses" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CampaignMembers" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ChildCampaigns" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CombinedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Description" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Emails" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="EndDate" nillable="true" minOccurs="0" type="xsd:date"/>
                        <element name="Events" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ExpectedResponse" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="ExpectedRevenue" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="FeedSubscriptionsForEntity" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Feeds" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Histories" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="IsActive" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastActivityDate" nillable="true" minOccurs="0" type="xsd:date"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastReferencedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastViewedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Leads" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="LookedUpFromActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="NumberOfContacts" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="NumberOfConvertedLeads" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="NumberOfLeads" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="NumberOfOpportunities" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="NumberOfResponses" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="NumberOfWonOpportunities" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="NumberSent" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="OpenActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Opportunities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Owner" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="OwnerId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="Parent" nillable="true" minOccurs="0" type="ens:Campaign"/>
                        <element name="ParentId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ProcessInstances" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessSteps" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="RecordAssociatedGroups" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Shares" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="StartDate" nillable="true" minOccurs="0" type="xsd:date"/>
                        <element name="Status" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Tasks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="TopicAssignments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Type" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="CampaignFeed">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="Body" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CommentCount" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:sObject"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="FeedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedComments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedLikes" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedSignals" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedTrackedChanges" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="InsertedBy" nillable="true" minOccurs="0" type="ens:sObject"/>
                        <element name="InsertedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsRichText" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LikeCount" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="LinkUrl" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Parent" nillable="true" minOccurs="0" type="ens:Campaign"/>
                        <element name="ParentId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="RelatedRecordId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Title" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Type" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="CampaignHistory">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="Campaign" nillable="true" minOccurs="0" type="ens:Campaign"/>
                        <element name="CampaignId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:sObject"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Field" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="NewValue" nillable="true" minOccurs="0" type="xsd:anyType"/>
                        <element name="OldValue" nillable="true" minOccurs="0" type="xsd:anyType"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="CampaignMember">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="Campaign" nillable="true" minOccurs="0" type="ens:Campaign"/>
                        <element name="CampaignId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="City" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CompanyOrAccount" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Contact" nillable="true" minOccurs="0" type="ens:Contact"/>
                        <element name="ContactId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="Country" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Description" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="DoNotCall" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="Email" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Fax" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="FirstName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="FirstRespondedDate" nillable="true" minOccurs="0" type="xsd:date"/>
                        <element name="HasOptedOutOfEmail" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="HasOptedOutOfFax" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="HasResponded" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Lead" nillable="true" minOccurs="0" type="ens:Lead"/>
                        <element name="LeadId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LeadOrContactId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LeadOrContactOwner" nillable="true" minOccurs="0" type="ens:sObject"/>
                        <element name="LeadOrContactOwnerId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LeadSource" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="MobilePhone" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Phone" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="PostalCode" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Salutation" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="State" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Status" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Street" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Title" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Type" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="CampaignMemberStatus">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CampaignId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="HasResponded" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsDefault" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="Label" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="SortOrder" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="CampaignShare">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="Campaign" nillable="true" minOccurs="0" type="ens:Campaign"/>
                        <element name="CampaignAccessLevel" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CampaignId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="RowCause" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="UserOrGroup" nillable="true" minOccurs="0" type="ens:sObject"/>
                        <element name="UserOrGroupId" nillable="true" minOccurs="0" type="tns:ID"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="Case">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="Account" nillable="true" minOccurs="0" type="ens:Account"/>
                        <element name="AccountId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ActivityHistories" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Asset" nillable="true" minOccurs="0" type="ens:Asset"/>
                        <element name="AssetId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="AttachedContentDocuments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Attachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CaseComments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CaseContactRoles" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CaseNumber" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CaseSolutions" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Cases" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ClosedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="CombinedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Contact" nillable="true" minOccurs="0" type="ens:Contact"/>
                        <element name="ContactEmail" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ContactFax" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ContactId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ContactMobile" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ContactPhone" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Description" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="EmailMessages" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Emails" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Events" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedSubscriptionsForEntity" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Feeds" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Histories" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="IsClosed" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsEscalated" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastReferencedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastViewedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LookedUpFromActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="OpenActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Origin" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Owner" nillable="true" minOccurs="0" type="ens:sObject"/>
                        <element name="OwnerId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="Parent" nillable="true" minOccurs="0" type="ens:Case"/>
                        <element name="ParentId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="Priority" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ProcessInstances" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessSteps" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Reason" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="RecordAssociatedGroups" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Shares" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Solutions" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Status" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Subject" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SuppliedCompany" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SuppliedEmail" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SuppliedName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SuppliedPhone" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Tasks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="TeamMembers" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="TeamTemplateRecords" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="TopicAssignments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Type" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        <element name="origami1__EngineeringReqNumber__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="origami1__PotentialLiability__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="origami1__Product__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="origami1__SLAViolation__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="CaseComment">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CommentBody" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:sObject"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsPublished" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:sObject"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Parent" nillable="true" minOccurs="0" type="ens:Case"/>
                        <element name="ParentId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="CaseContactRole">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="Cases" nillable="true" minOccurs="0" type="ens:Case"/>
                        <element name="CasesId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="Contact" nillable="true" minOccurs="0" type="ens:Contact"/>
                        <element name="ContactId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Role" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="CaseFeed">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="Body" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CommentCount" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:sObject"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="FeedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedComments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedLikes" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedSignals" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedTrackedChanges" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="InsertedBy" nillable="true" minOccurs="0" type="ens:sObject"/>
                        <element name="InsertedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsRichText" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LikeCount" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="LinkUrl" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Parent" nillable="true" minOccurs="0" type="ens:Case"/>
                        <element name="ParentId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="RelatedRecordId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Title" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Type" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="CaseHistory">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="Case" nillable="true" minOccurs="0" type="ens:Case"/>
                        <element name="CaseId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:sObject"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Field" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="NewValue" nillable="true" minOccurs="0" type="xsd:anyType"/>
                        <element name="OldValue" nillable="true" minOccurs="0" type="xsd:anyType"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="CaseShare">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="Case" nillable="true" minOccurs="0" type="ens:Case"/>
                        <element name="CaseAccessLevel" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CaseId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="RowCause" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="UserOrGroup" nillable="true" minOccurs="0" type="ens:sObject"/>
                        <element name="UserOrGroupId" nillable="true" minOccurs="0" type="tns:ID"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="CaseSolution">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="Case" nillable="true" minOccurs="0" type="ens:Case"/>
                        <element name="CaseId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="Solution" nillable="true" minOccurs="0" type="ens:Solution"/>
                        <element name="SolutionId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="CaseStatus">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="ApiName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="IsClosed" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsDefault" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="MasterLabel" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SortOrder" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="CaseTeamMember">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Member" nillable="true" minOccurs="0" type="ens:sObject"/>
                        <element name="MemberId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="Parent" nillable="true" minOccurs="0" type="ens:Case"/>
                        <element name="ParentId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TeamRole" nillable="true" minOccurs="0" type="ens:CaseTeamRole"/>
                        <element name="TeamRoleId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="TeamTemplateMember" nillable="true" minOccurs="0" type="ens:CaseTeamTemplateMember"/>
                        <element name="TeamTemplateMemberId" nillable="true" minOccurs="0" type="tns:ID"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="CaseTeamRole">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AccessLevel" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="PreferencesVisibleInCSP" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="CaseTeamTemplate">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Description" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="CaseTeamTemplateMember">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="MemberId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TeamRoleId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="TeamTemplateId" nillable="true" minOccurs="0" type="tns:ID"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="CaseTeamTemplateRecord">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Parent" nillable="true" minOccurs="0" type="ens:Case"/>
                        <element name="ParentId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TeamTemplate" nillable="true" minOccurs="0" type="ens:CaseTeamTemplate"/>
                        <element name="TeamTemplateId" nillable="true" minOccurs="0" type="tns:ID"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="CategoryData">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CategoryNodeId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="RelatedSobjectId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="CategoryNode">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="MasterLabel" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ParentId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SortOrder" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="SortStyle" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="ChatterActivity">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CommentCount" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="CommentReceivedCount" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="InfluenceRawRank" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="LikeReceivedCount" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="ParentId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="PostCount" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="ChatterExtension">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CompositionComponentEnumOrId" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Description" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="DeveloperName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ExtensionName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="HeaderText" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="HoverText" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Icon" nillable="true" minOccurs="0" type="ens:ContentAsset"/>
                        <element name="IconId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsProtected" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="Language" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="MasterLabel" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="NamespacePrefix" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="RenderComponentEnumOrId" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Type" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="ChatterExtensionConfig">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CanCreate" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="CanRead" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="ChatterExtension" nillable="true" minOccurs="0" type="ens:ChatterExtension"/>
                        <element name="ChatterExtensionId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Position" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="ClientBrowser">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="FullUserAgent" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="LastUpdate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="ProxyInfo" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Users" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="UsersId" nillable="true" minOccurs="0" type="tns:ID"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="CollaborationGroup">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="Announcement" nillable="true" minOccurs="0" type="ens:Announcement"/>
                        <element name="AnnouncementId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="AttachedContentDocuments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="BannerPhotoUrl" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CanHaveGuests" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="CollaborationGroupRecords" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CollaborationType" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CombinedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Description" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="FeedSubscriptionsForEntity" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Feeds" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FullPhotoUrl" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="GroupMemberRequests" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="GroupMembers" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="HasPrivateFieldsAccess" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="InformationBody" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="InformationTitle" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsArchived" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsAutoArchiveDisabled" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsBroadcast" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastFeedModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastReferencedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastViewedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="MediumPhotoUrl" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="MemberCount" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Owner" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="OwnerId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SmallPhotoUrl" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="CollaborationGroupFeed">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="Body" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CommentCount" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:sObject"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="FeedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedComments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedLikes" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedSignals" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedTrackedChanges" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="InsertedBy" nillable="true" minOccurs="0" type="ens:sObject"/>
                        <element name="InsertedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsRichText" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LikeCount" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="LinkUrl" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Parent" nillable="true" minOccurs="0" type="ens:CollaborationGroup"/>
                        <element name="ParentId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="RelatedRecordId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Title" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Type" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="CollaborationGroupMember">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CollaborationGroup" nillable="true" minOccurs="0" type="ens:CollaborationGroup"/>
                        <element name="CollaborationGroupId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CollaborationRole" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastFeedAccessDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Member" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="MemberId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="NotificationFrequency" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="CollaborationGroupMemberRequest">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CollaborationGroup" nillable="true" minOccurs="0" type="ens:CollaborationGroup"/>
                        <element name="CollaborationGroupId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Requester" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="RequesterId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ResponseMessage" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Status" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="CollaborationGroupRecord">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CollaborationGroup" nillable="true" minOccurs="0" type="ens:CollaborationGroup"/>
                        <element name="CollaborationGroupId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Record" nillable="true" minOccurs="0" type="ens:sObject"/>
                        <element name="RecordId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="CollaborationInvitation">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="InvitedUserEmail" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="InvitedUserEmailNormalized" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="InviterId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="OptionalMessage" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ParentId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SharedEntityId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="Status" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="CombinedAttachment">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="ContentSize" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="ContentUrl" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="ExternalDataSourceName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ExternalDataSourceType" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="FileExtension" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="FileType" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Parent" nillable="true" minOccurs="0" type="ens:Contract"/>
                        <element name="ParentId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="RecordType" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SharingOption" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Title" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="Community">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Description" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsActive" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsPublished" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="ConnectedApplication">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="InstalledMobileApps" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="MobileSessionTimeout" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="MobileStartUrl" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="OptionsAllowAdminApprovedUsersOnly" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="OptionsHasSessionLevelPolicy" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="OptionsIsInternal" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="OptionsRefreshTokenValidityMetric" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PinLength" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="RefreshTokenValidityPeriod" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="SetupEntityAccessItems" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="StartUrl" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="Contact">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AcceptedEventRelations" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Account" nillable="true" minOccurs="0" type="ens:Account"/>
                        <element name="AccountContactRoles" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="AccountId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ActivityHistories" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Assets" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="AssistantName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="AssistantPhone" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="AttachedContentDocuments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Attachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Birthdate" nillable="true" minOccurs="0" type="xsd:date"/>
                        <element name="CampaignMembers" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CaseContactRoles" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Cases" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CombinedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContractContactRoles" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContractsSigned" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DeclinedEventRelations" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Department" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Description" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="DuplicateRecordItems" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Email" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="EmailBouncedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="EmailBouncedReason" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="EmailMessageRelations" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="EmailStatuses" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="EventRelations" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Events" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Fax" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="FeedSubscriptionsForEntity" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Feeds" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FirstName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Histories" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="HomePhone" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsEmailBounced" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="Jigsaw" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="JigsawContactId" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="LastActivityDate" nillable="true" minOccurs="0" type="xsd:date"/>
                        <element name="LastCURequestDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastCUUpdateDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="LastReferencedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastViewedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LeadSource" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="LookedUpFromActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="MailingAddress" nillable="true" minOccurs="0" type="tns:address"/>
                        <element name="MailingCity" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="MailingCountry" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="MailingGeocodeAccuracy" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="MailingLatitude" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="MailingLongitude" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="MailingPostalCode" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="MailingState" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="MailingStreet" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="MasterRecord" nillable="true" minOccurs="0" type="ens:Contact"/>
                        <element name="MasterRecordId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="MobilePhone" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Notes" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="NotesAndAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="OpenActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Opportunities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="OpportunityContactRoles" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="OtherAddress" nillable="true" minOccurs="0" type="tns:address"/>
                        <element name="OtherCity" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="OtherCountry" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="OtherGeocodeAccuracy" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="OtherLatitude" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="OtherLongitude" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="OtherPhone" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="OtherPostalCode" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="OtherState" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="OtherStreet" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="OutgoingEmailRelations" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Owner" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="OwnerId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="Phone" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="PhotoUrl" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ProcessInstances" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessSteps" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="RecordAssociatedGroups" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ReportsTo" nillable="true" minOccurs="0" type="ens:Contact"/>
                        <element name="ReportsToId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="Salutation" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Shares" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Tasks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Title" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TopicAssignments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="UndecidedEventRelations" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        <element name="origami1__Languages__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="origami1__Level__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="origami1__thecastle_contacts_ext_id__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="ContactFeed">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="Body" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CommentCount" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:sObject"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="FeedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedComments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedLikes" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedSignals" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedTrackedChanges" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="InsertedBy" nillable="true" minOccurs="0" type="ens:sObject"/>
                        <element name="InsertedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsRichText" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LikeCount" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="LinkUrl" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Parent" nillable="true" minOccurs="0" type="ens:Contact"/>
                        <element name="ParentId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="RelatedRecordId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Title" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Type" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="ContactHistory">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="Contact" nillable="true" minOccurs="0" type="ens:Contact"/>
                        <element name="ContactId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:sObject"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Field" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="NewValue" nillable="true" minOccurs="0" type="xsd:anyType"/>
                        <element name="OldValue" nillable="true" minOccurs="0" type="xsd:anyType"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="ContactShare">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="Contact" nillable="true" minOccurs="0" type="ens:Contact"/>
                        <element name="ContactAccessLevel" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ContactId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="RowCause" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="UserOrGroup" nillable="true" minOccurs="0" type="ens:sObject"/>
                        <element name="UserOrGroupId" nillable="true" minOccurs="0" type="tns:ID"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="ContentAsset">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="ContentDocument" nillable="true" minOccurs="0" type="ens:ContentDocument"/>
                        <element name="ContentDocumentId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DeveloperName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="Language" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="MasterLabel" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="NamespacePrefix" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="ContentBody">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="ContentDistribution">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="ContentDistributionViews" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContentDocumentId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ContentDownloadUrl" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ContentVersion" nillable="true" minOccurs="0" type="ens:ContentVersion"/>
                        <element name="ContentVersionId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DistributionPublicUrl" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ExpiryDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="FirstViewDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastViewDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Owner" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="OwnerId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="Password" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="PdfDownloadUrl" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="PreferencesAllowOriginalDownload" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PreferencesAllowPDFDownload" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PreferencesAllowViewInBrowser" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PreferencesExpires" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PreferencesLinkLatestVersion" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PreferencesNotifyOnVisit" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PreferencesNotifyRndtnComplete" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PreferencesPasswordRequired" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="RelatedRecord" nillable="true" minOccurs="0" type="ens:sObject"/>
                        <element name="RelatedRecordId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="ViewCount" nillable="true" minOccurs="0" type="xsd:int"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="ContentDistributionView">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Distribution" nillable="true" minOccurs="0" type="ens:ContentDistribution"/>
                        <element name="DistributionId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsDownload" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsInternal" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="ParentViewId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="ContentDocument">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="ArchivedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ArchivedDate" nillable="true" minOccurs="0" type="xsd:date"/>
                        <element name="ContentAsset" nillable="true" minOccurs="0" type="ens:ContentAsset"/>
                        <element name="ContentAssetId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ContentDistributions" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContentModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="ContentSize" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="ContentVersions" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Description" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="FeedSubscriptionsForEntity" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Feeds" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FileExtension" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="FileType" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Histories" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="IsArchived" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastReferencedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastViewedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LatestPublishedVersion" nillable="true" minOccurs="0" type="ens:ContentVersion"/>
                        <element name="LatestPublishedVersionId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="Owner" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="OwnerId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ParentId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="PublishStatus" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SharingOption" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SharingPrivacy" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Title" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TopicAssignments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="ContentDocumentFeed">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="Body" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CommentCount" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:sObject"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="FeedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedComments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedLikes" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedSignals" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedTrackedChanges" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="InsertedBy" nillable="true" minOccurs="0" type="ens:sObject"/>
                        <element name="InsertedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsRichText" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LikeCount" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="LinkUrl" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Parent" nillable="true" minOccurs="0" type="ens:ContentDocument"/>
                        <element name="ParentId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="RelatedRecordId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Title" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Type" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="ContentDocumentHistory">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="ContentDocument" nillable="true" minOccurs="0" type="ens:ContentDocument"/>
                        <element name="ContentDocumentId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:sObject"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Field" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="NewValue" nillable="true" minOccurs="0" type="xsd:anyType"/>
                        <element name="OldValue" nillable="true" minOccurs="0" type="xsd:anyType"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="ContentDocumentLink">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="ContentDocument" nillable="true" minOccurs="0" type="ens:ContentDocument"/>
                        <element name="ContentDocumentId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LinkedEntity" nillable="true" minOccurs="0" type="ens:sObject"/>
                        <element name="LinkedEntityId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ShareType" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Visibility" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="ContentFolder">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="ContentFolderLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ParentContentFolder" nillable="true" minOccurs="0" type="ens:ContentFolder"/>
                        <element name="ParentContentFolderId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="ContentFolderItem">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="ContentSize" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="FileExtension" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="FileType" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsFolder" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="ParentContentFolder" nillable="true" minOccurs="0" type="ens:ContentFolder"/>
                        <element name="ParentContentFolderId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Title" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="ContentFolderLink">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="ContentFolder" nillable="true" minOccurs="0" type="ens:ContentFolder"/>
                        <element name="ContentFolderId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="EnableFolderStatus" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="ParentEntityId" nillable="true" minOccurs="0" type="tns:ID"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="ContentFolderMember">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="ChildRecord" nillable="true" minOccurs="0" type="ens:ContentDocument"/>
                        <element name="ChildRecordId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="ParentContentFolder" nillable="true" minOccurs="0" type="ens:ContentFolder"/>
                        <element name="ParentContentFolderId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="ContentVersion">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="Checksum" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ContentBody" nillable="true" minOccurs="0" type="ens:ContentBody"/>
                        <element name="ContentBodyId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ContentDocument" nillable="true" minOccurs="0" type="ens:ContentDocument"/>
                        <element name="ContentDocumentId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ContentLocation" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ContentModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="ContentModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ContentModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="ContentSize" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="ContentUrl" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Description" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ExternalDataSource" nillable="true" minOccurs="0" type="ens:ExternalDataSource"/>
                        <element name="ExternalDataSourceId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ExternalDocumentInfo1" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ExternalDocumentInfo2" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="FeaturedContentBoost" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="FeaturedContentDate" nillable="true" minOccurs="0" type="xsd:date"/>
                        <element name="FileExtension" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="FileType" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="FirstPublishLocation" nillable="true" minOccurs="0" type="ens:sObject"/>
                        <element name="FirstPublishLocationId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="Histories" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="IsAssetEnabled" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsLatest" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsMajorVersion" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="NegativeRatingCount" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="Origin" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Owner" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="OwnerId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="PathOnClient" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="PositiveRatingCount" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="PublishStatus" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="RatingCount" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="ReasonForChange" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SharingOption" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SharingPrivacy" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TagCsv" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TextPreview" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Title" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="VersionData" nillable="true" minOccurs="0" type="xsd:base64Binary"/>
                        <element name="VersionNumber" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="ContentVersionHistory">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="ContentVersion" nillable="true" minOccurs="0" type="ens:ContentVersion"/>
                        <element name="ContentVersionId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:sObject"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Field" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="NewValue" nillable="true" minOccurs="0" type="xsd:anyType"/>
                        <element name="OldValue" nillable="true" minOccurs="0" type="xsd:anyType"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="ContentWorkspace">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AttachedContentDocuments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CombinedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContentFolderLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContentWorkspaceMembers" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DefaultRecordTypeId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="Description" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="DeveloperName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsRestrictContentTypes" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsRestrictLinkedContentTypes" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastWorkspaceActivityDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="NamespacePrefix" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="RootContentFolderId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ShouldAddCreatorMembership" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TagModel" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="WorkspaceType" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="ContentWorkspaceDoc">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="ContentDocument" nillable="true" minOccurs="0" type="ens:ContentDocument"/>
                        <element name="ContentDocumentId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ContentWorkspace" nillable="true" minOccurs="0" type="ens:ContentWorkspace"/>
                        <element name="ContentWorkspaceId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsOwner" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="ContentWorkspaceMember">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="ContentWorkspace" nillable="true" minOccurs="0" type="ens:ContentWorkspace"/>
                        <element name="ContentWorkspaceId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ContentWorkspacePermission" nillable="true" minOccurs="0" type="ens:ContentWorkspacePermission"/>
                        <element name="ContentWorkspacePermissionId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Member" nillable="true" minOccurs="0" type="ens:sObject"/>
                        <element name="MemberId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="MemberType" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="ContentWorkspacePermission">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Description" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="PermissionsAddComment" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsAddContent" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsAddContentOBO" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsArchiveContent" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsChatterSharing" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsDeleteContent" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsDeliverContent" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsFeatureContent" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsManageWorkspace" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsModifyComments" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsOrganizeFileAndFolder" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsTagContent" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsViewComments" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Type" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="Contract">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="Account" nillable="true" minOccurs="0" type="ens:Account"/>
                        <element name="AccountId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ActivatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="ActivatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ActivatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="ActivityHistories" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Approvals" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="AttachedContentDocuments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Attachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="BillingAddress" nillable="true" minOccurs="0" type="tns:address"/>
                        <element name="BillingCity" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="BillingCountry" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="BillingGeocodeAccuracy" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="BillingLatitude" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="BillingLongitude" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="BillingPostalCode" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="BillingState" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="BillingStreet" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CombinedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CompanySigned" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CompanySignedDate" nillable="true" minOccurs="0" type="xsd:date"/>
                        <element name="CompanySignedId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContractContactRoles" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContractNumber" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ContractTerm" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="CustomerSigned" nillable="true" minOccurs="0" type="ens:Contact"/>
                        <element name="CustomerSignedDate" nillable="true" minOccurs="0" type="xsd:date"/>
                        <element name="CustomerSignedId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CustomerSignedTitle" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Description" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Emails" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="EndDate" nillable="true" minOccurs="0" type="xsd:date"/>
                        <element name="Events" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedSubscriptionsForEntity" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Feeds" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Histories" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastActivityDate" nillable="true" minOccurs="0" type="xsd:date"/>
                        <element name="LastApprovedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastReferencedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastViewedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LookedUpFromActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Notes" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="NotesAndAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="OpenActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Opportunities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Owner" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="OwnerExpirationNotice" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="OwnerId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ProcessInstances" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessSteps" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="RecordAssociatedGroups" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="SpecialTerms" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="StartDate" nillable="true" minOccurs="0" type="xsd:date"/>
                        <element name="Status" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="StatusCode" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Tasks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="TopicAssignments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="ContractContactRole">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="Contact" nillable="true" minOccurs="0" type="ens:Contact"/>
                        <element name="ContactId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="Contract" nillable="true" minOccurs="0" type="ens:Contract"/>
                        <element name="ContractId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsPrimary" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Role" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="ContractFeed">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="Body" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CommentCount" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:sObject"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="FeedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedComments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedLikes" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedSignals" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedTrackedChanges" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="InsertedBy" nillable="true" minOccurs="0" type="ens:sObject"/>
                        <element name="InsertedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsRichText" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LikeCount" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="LinkUrl" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Parent" nillable="true" minOccurs="0" type="ens:Contract"/>
                        <element name="ParentId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="RelatedRecordId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Title" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Type" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="ContractHistory">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="Contract" nillable="true" minOccurs="0" type="ens:Contract"/>
                        <element name="ContractId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:sObject"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Field" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="NewValue" nillable="true" minOccurs="0" type="xsd:anyType"/>
                        <element name="OldValue" nillable="true" minOccurs="0" type="xsd:anyType"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="ContractStatus">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="ApiName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="IsDefault" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="MasterLabel" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SortOrder" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="StatusCode" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="CorsWhitelistEntry">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DeveloperName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="Language" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="MasterLabel" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="NamespacePrefix" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="UrlPattern" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="CronJobDetail">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="JobType" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="CronTrigger">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="CronExpression" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CronJobDetail" nillable="true" minOccurs="0" type="ens:CronJobDetail"/>
                        <element name="CronJobDetailId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="EndTime" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="NextFireTime" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="OwnerId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="PreviousFireTime" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="StartTime" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="State" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TimeZoneSidKey" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TimesTriggered" nillable="true" minOccurs="0" type="xsd:int"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="CspTrustedSite">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Description" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="DeveloperName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="EndpointUrl" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsActive" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="Language" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="MasterLabel" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="NamespacePrefix" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="CustomBrand">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="CustomBrandAssets" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="ParentId" nillable="true" minOccurs="0" type="tns:ID"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="CustomBrandAsset">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AssetCategory" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="AssetSourceId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="CustomBrand" nillable="true" minOccurs="0" type="ens:CustomBrand"/>
                        <element name="CustomBrandId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TextAsset" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="CustomObjectUserLicenseMetrics">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CustomObjectId" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CustomObjectName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CustomObjectType" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="MetricsDate" nillable="true" minOccurs="0" type="xsd:date"/>
                        <element name="ObjectCount" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="UserLicense" nillable="true" minOccurs="0" type="ens:UserLicense"/>
                        <element name="UserLicenseId" nillable="true" minOccurs="0" type="tns:ID"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="CustomPermission">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="CustomPermissionDependencyItem" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CustomPermissionItem" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Description" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="DeveloperName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="GrantedByLicenses" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsProtected" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="Language" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="MasterLabel" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="NamespacePrefix" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SetupEntityAccessItems" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="CustomPermissionDependency">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="CustomPermission" nillable="true" minOccurs="0" type="ens:CustomPermission"/>
                        <element name="CustomPermissionId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="RequiredCustomPermission" nillable="true" minOccurs="0" type="ens:CustomPermission"/>
                        <element name="RequiredCustomPermissionId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="Dashboard">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AttachedContentDocuments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="BackgroundDirection" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="BackgroundEnd" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="BackgroundStart" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="CombinedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DashboardComponents" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="DashboardResultRefreshedDate" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="DashboardResultRunningUser" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Description" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="DeveloperName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="FeedSubscriptionsForEntity" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Feeds" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Folder" nillable="true" minOccurs="0" type="ens:Folder"/>
                        <element name="FolderId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="FolderName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastReferencedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastViewedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LeftSize" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="MiddleSize" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="NamespacePrefix" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="RightSize" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="RunningUser" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="RunningUserId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TextColor" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="Title" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TitleColor" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="TitleSize" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="Type" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="DashboardComponent">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AttachedContentDocuments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CombinedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Dashboard" nillable="true" minOccurs="0" type="ens:Dashboard"/>
                        <element name="DashboardId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="FeedSubscriptionsForEntity" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Feeds" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="DashboardComponentFeed">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="Body" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CommentCount" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:sObject"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="FeedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedComments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedLikes" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedSignals" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedTrackedChanges" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="InsertedBy" nillable="true" minOccurs="0" type="ens:sObject"/>
                        <element name="InsertedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsRichText" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LikeCount" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="LinkUrl" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Parent" nillable="true" minOccurs="0" type="ens:DashboardComponent"/>
                        <element name="ParentId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="RelatedRecordId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Title" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Type" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="DashboardFeed">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="Body" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CommentCount" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:sObject"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="FeedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedComments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedLikes" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedSignals" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedTrackedChanges" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="InsertedBy" nillable="true" minOccurs="0" type="ens:sObject"/>
                        <element name="InsertedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsRichText" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LikeCount" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="LinkUrl" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Parent" nillable="true" minOccurs="0" type="ens:Dashboard"/>
                        <element name="ParentId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="RelatedRecordId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Title" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Type" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="DataAssessmentFieldMetric">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DataAssessmentMetric" nillable="true" minOccurs="0" type="ens:DataAssessmentMetric"/>
                        <element name="DataAssessmentMetricId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="DataAssessmentValueMetrics" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FieldName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="NumMatchedBlanks" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="NumMatchedDifferent" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="NumMatchedInSync" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="NumUnmatchedBlanks" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="DataAssessmentMetric">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DataAssessmentMetrics" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="NumDuplicates" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="NumMatched" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="NumMatchedDifferent" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="NumProcessed" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="NumTotal" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="NumUnmatched" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="DataAssessmentValueMetric">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DataAssessmentFieldMetric" nillable="true" minOccurs="0" type="ens:DataAssessmentFieldMetric"/>
                        <element name="DataAssessmentFieldMetricId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="FieldValue" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        <element name="ValueCount" nillable="true" minOccurs="0" type="xsd:int"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="DataStatistics">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="ExternalId" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="StatType" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="StatValue" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="Type" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="User" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="UserId" nillable="true" minOccurs="0" type="tns:ID"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="DataType">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="ContextServiceDataTypeId" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ContextWsdlDataTypeId" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="DeveloperName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="DurableId" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsComplex" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="DatacloudAddress">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AddressLine1" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="AddressLine2" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="City" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Country" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ExternalId" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="GeoAccuracyCode" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="GeoAccuracyNum" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Latitude" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Longitude" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="PostalCode" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="State" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="DeclinedEventRelation">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Event" nillable="true" minOccurs="0" type="ens:Event"/>
                        <element name="EventId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Relation" nillable="true" minOccurs="0" type="ens:sObject"/>
                        <element name="RelationId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="RespondedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Response" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Type" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="Document">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="Author" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="AuthorId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="Body" nillable="true" minOccurs="0" type="xsd:base64Binary"/>
                        <element name="BodyLength" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="ContentType" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Description" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="DeveloperName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Folder" nillable="true" minOccurs="0" type="ens:Folder"/>
                        <element name="FolderId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="IsBodySearchable" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsInternalUseOnly" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsPublic" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="Keywords" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastReferencedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastViewedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="NamespacePrefix" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Type" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Url" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="DocumentAttachmentMap">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DocumentId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="DocumentSequence" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="ParentId" nillable="true" minOccurs="0" type="tns:ID"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="Domain">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Domain" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="DomainSites" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="DomainType" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="OptionsExternalHttps" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="DomainSite">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Domain" nillable="true" minOccurs="0" type="ens:Domain"/>
                        <element name="DomainId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="PathPrefix" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Site" nillable="true" minOccurs="0" type="ens:Site"/>
                        <element name="SiteId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="DuplicateRecordItem">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DuplicateRecordSet" nillable="true" minOccurs="0" type="ens:DuplicateRecordSet"/>
                        <element name="DuplicateRecordSetId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ProcessInstances" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessSteps" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Record" nillable="true" minOccurs="0" type="ens:sObject"/>
                        <element name="RecordId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="DuplicateRecordSet">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DuplicateRecordItems" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="DuplicateRule" nillable="true" minOccurs="0" type="ens:DuplicateRule"/>
                        <element name="DuplicateRuleId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastReferencedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastViewedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ProcessInstances" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessSteps" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="RecordCount" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="DuplicateRule">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DeveloperName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="DuplicateRecordSets" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="IsActive" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="Language" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastViewedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="MasterLabel" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="NamespacePrefix" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SobjectSubtype" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SobjectType" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="EmailCapture">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CaptureDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="FromPattern" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsActive" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="RawMessage" nillable="true" minOccurs="0" type="xsd:base64Binary"/>
                        <element name="RawMessageLength" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="Recipient" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Sender" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="ToPattern" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="EmailDomainKey">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Domain" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="DomainMatch" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsActive" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="PrivateKey" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="PublicKey" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Selector" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="EmailMessage">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="ActivityId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="AttachedContentDocuments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Attachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="BccAddress" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="BccIds" nillable="true" minOccurs="0" maxOccurs="unbounded" type="tns:ID"/>
                        <element name="CcAddress" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CcIds" nillable="true" minOccurs="0" maxOccurs="unbounded" type="tns:ID"/>
                        <element name="CombinedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContentDocumentIds" nillable="true" minOccurs="0" maxOccurs="unbounded" type="tns:ID"/>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="EmailMessageRelations" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FromAddress" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="FromName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="HasAttachment" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="Headers" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="HtmlBody" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Incoming" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsClientManaged" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsExternallyVisible" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="MessageDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="MessageIdentifier" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Parent" nillable="true" minOccurs="0" type="ens:Case"/>
                        <element name="ParentId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ProcessInstances" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessSteps" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="RelatedTo" nillable="true" minOccurs="0" type="ens:sObject"/>
                        <element name="RelatedToId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ReplyToEmailMessage" nillable="true" minOccurs="0" type="ens:EmailMessage"/>
                        <element name="ReplyToEmailMessageId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="Status" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Subject" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TextBody" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ThreadIdentifier" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ToAddress" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ToIds" nillable="true" minOccurs="0" maxOccurs="unbounded" type="tns:ID"/>
                        <element name="ValidatedFromAddress" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="EmailMessageRelation">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="EmailMessage" nillable="true" minOccurs="0" type="ens:EmailMessage"/>
                        <element name="EmailMessageId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="Relation" nillable="true" minOccurs="0" type="ens:sObject"/>
                        <element name="RelationAddress" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="RelationId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="RelationObjectType" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="RelationType" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="EmailServicesAddress">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AuthorizedSenders" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="EmailDomainName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Function" nillable="true" minOccurs="0" type="ens:EmailServicesFunction"/>
                        <element name="FunctionId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="IsActive" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LocalPart" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="RunAsUserId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="EmailServicesFunction">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AddressInactiveAction" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Addresses" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ApexClassId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="AttachmentOption" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="AuthenticationFailureAction" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="AuthorizationFailureAction" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="AuthorizedSenders" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="ErrorRoutingAddress" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="FunctionInactiveAction" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="FunctionName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsActive" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsAuthenticationRequired" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsErrorRoutingEnabled" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsTextAttachmentsAsBinary" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsTlsRequired" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="OverLimitAction" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="EmailStatus">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="EmailTemplateName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="FirstOpenDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastOpenDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Task" nillable="true" minOccurs="0" type="ens:Task"/>
                        <element name="TaskId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="TimesOpened" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="Who" nillable="true" minOccurs="0" type="ens:sObject"/>
                        <element name="WhoId" nillable="true" minOccurs="0" type="tns:ID"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="EmailTemplate">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="ApiVersion" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="AttachedContentDocuments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Attachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Body" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="BrandTemplateId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CombinedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Description" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="DeveloperName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Encoding" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Folder" nillable="true" minOccurs="0" type="ens:Folder"/>
                        <element name="FolderId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="HtmlValue" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsActive" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastUsedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="ListEmailTemplates" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Markup" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="NamespacePrefix" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Owner" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="OwnerId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="RelatedEntityType" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Subject" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TemplateStyle" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TemplateType" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TimesUsed" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="UiType" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="EmbeddedServiceDetail">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="ContrastPrimaryColor" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="DurableId" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="FlowDeveloperName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Font" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsPrechatEnabled" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="NavBarColor" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="PrimaryColor" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SecondaryColor" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Site" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="EntityDefinition">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="ChildRelationships" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="DataSteward" nillable="true" minOccurs="0" type="ens:sObject"/>
                        <element name="DataStewardId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="DefaultCompactLayoutId" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="DetailUrl" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="DeveloperName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="DurableId" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="EditDefinitionUrl" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="EditUrl" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ExternalSharingModel" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Fields" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="HasSubtypes" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="HelpSettingPageName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="HelpSettingPageUrl" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="InternalSharingModel" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsApexTriggerable" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsAutoActivityCaptureEnabled" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsCompactLayoutable" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsCustomSetting" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsCustomizable" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsDeprecatedAndHidden" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsEverCreatable" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsEverDeletable" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsEverUpdatable" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsFeedEnabled" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsIdEnabled" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsLayoutable" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsMruEnabled" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsProcessEnabled" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsQueryable" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsReplicateable" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsRetrieveable" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsSearchLayoutable" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsSearchable" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsSubtype" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsTriggerable" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsWorkflowEnabled" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="KeyPrefix" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Label" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="MasterLabel" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="NamespacePrefix" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="NewUrl" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="OwnerChangeOptions" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Particles" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="PluralLabel" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Publisher" nillable="true" minOccurs="0" type="ens:Publisher"/>
                        <element name="PublisherId" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="QualifiedApiName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="RecordTypesSupported" nillable="true" minOccurs="0" type="tns:RecordTypesSupported"/>
                        <element name="RelationshipDomains" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="RunningUserEntityAccess" nillable="true" minOccurs="0" type="ens:UserEntityAccess"/>
                        <element name="RunningUserEntityAccessId" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SearchLayouts" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="EntityParticle">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="ByteLength" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="DataType" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="DefaultValueFormula" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="DeveloperName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Digits" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="DurableId" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="EntityDefinition" nillable="true" minOccurs="0" type="ens:EntityDefinition"/>
                        <element name="EntityDefinitionId" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ExtraTypeInfo" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="FieldDefinition" nillable="true" minOccurs="0" type="ens:FieldDefinition"/>
                        <element name="FieldDefinitionId" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="InlineHelpText" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsApiFilterable" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsApiGroupable" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsApiSortable" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsAutonumber" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsCalculated" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsCaseSensitive" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsCompactLayoutable" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsComponent" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsCompound" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsCreatable" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsDefaultedOnCreate" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsDependentPicklist" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsDeprecatedAndHidden" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsDisplayLocationInDecimal" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsEncrypted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsFieldHistoryTracked" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsHighScaleNumber" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsHtmlFormatted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsIdLookup" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsLayoutable" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsListVisible" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsNameField" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsNamePointing" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsNillable" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsPermissionable" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsUnique" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsUpdatable" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsWorkflowFilterable" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsWriteRequiresMasterRead" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="Label" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Length" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="Mask" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="MaskType" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="MasterLabel" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="NamespacePrefix" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="PicklistValues" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Precision" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="QualifiedApiName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ReferenceTargetField" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ReferenceTo" nillable="true" minOccurs="0" type="tns:RelationshipReferenceTo"/>
                        <element name="RelationshipName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="RelationshipOrder" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="Scale" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="ServiceDataType" nillable="true" minOccurs="0" type="ens:DataType"/>
                        <element name="ServiceDataTypeId" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ValueType" nillable="true" minOccurs="0" type="ens:DataType"/>
                        <element name="ValueTypeId" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="EntitySubscription">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:sObject"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="Parent" nillable="true" minOccurs="0" type="ens:sObject"/>
                        <element name="ParentId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="Subscriber" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="SubscriberId" nillable="true" minOccurs="0" type="tns:ID"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="Event">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AcceptedEventInviteeIds" nillable="true" minOccurs="0" maxOccurs="unbounded" type="tns:ID"/>
                        <element name="AcceptedEventRelations" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Account" nillable="true" minOccurs="0" type="ens:Account"/>
                        <element name="AccountId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ActivityDate" nillable="true" minOccurs="0" type="xsd:date"/>
                        <element name="ActivityDateTime" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="ActivityExtension" nillable="true" minOccurs="0" type="ens:ActivityExtension"/>
                        <element name="ActivityExtensionId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="AttachedContentDocuments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Attachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CombinedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DeclinedEventInviteeIds" nillable="true" minOccurs="0" maxOccurs="unbounded" type="tns:ID"/>
                        <element name="DeclinedEventRelations" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Description" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="DurationInMinutes" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="EndDateTime" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="EventRelations" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="EventSubtype" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="FeedSubscriptionsForEntity" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Feeds" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="GroupEventType" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsAllDayEvent" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsArchived" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsChild" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsGroupEvent" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsPrivate" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsRecurrence" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsReminderSet" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Location" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Owner" nillable="true" minOccurs="0" type="ens:sObject"/>
                        <element name="OwnerId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="RecurrenceActivityId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="RecurrenceDayOfMonth" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="RecurrenceDayOfWeekMask" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="RecurrenceEndDateOnly" nillable="true" minOccurs="0" type="xsd:date"/>
                        <element name="RecurrenceInstance" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="RecurrenceInterval" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="RecurrenceMonthOfYear" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="RecurrenceStartDateTime" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="RecurrenceTimeZoneSidKey" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="RecurrenceType" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="RecurringEvents" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ReminderDateTime" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="ShowAs" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="StartDateTime" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Subject" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TopicAssignments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="UndecidedEventInviteeIds" nillable="true" minOccurs="0" maxOccurs="unbounded" type="tns:ID"/>
                        <element name="UndecidedEventRelations" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="What" nillable="true" minOccurs="0" type="ens:sObject"/>
                        <element name="WhatId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="Who" nillable="true" minOccurs="0" type="ens:sObject"/>
                        <element name="WhoId" nillable="true" minOccurs="0" type="tns:ID"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="EventBusSubscriber">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="ExternalId" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Position" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="Status" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Tip" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="Topic" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Type" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="EventFeed">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="Body" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CommentCount" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:sObject"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="FeedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedComments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedLikes" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedSignals" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedTrackedChanges" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="InsertedBy" nillable="true" minOccurs="0" type="ens:sObject"/>
                        <element name="InsertedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsRichText" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LikeCount" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="LinkUrl" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Parent" nillable="true" minOccurs="0" type="ens:Event"/>
                        <element name="ParentId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="RelatedRecordId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Title" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Type" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="EventLogFile">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="ApiVersion" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="EventType" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LogDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LogFile" nillable="true" minOccurs="0" type="xsd:base64Binary"/>
                        <element name="LogFileContentType" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="LogFileFieldNames" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="LogFileFieldTypes" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="LogFileLength" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="EventRelation">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Event" nillable="true" minOccurs="0" type="ens:Event"/>
                        <element name="EventId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Relation" nillable="true" minOccurs="0" type="ens:sObject"/>
                        <element name="RelationId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="RespondedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Response" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Status" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="ExternalDataSource">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AuthProvider" nillable="true" minOccurs="0" type="ens:AuthProvider"/>
                        <element name="AuthProviderId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="CustomConfiguration" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="DeveloperName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Endpoint" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsWritable" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="Language" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="LargeIcon" nillable="true" minOccurs="0" type="ens:StaticResource"/>
                        <element name="LargeIconId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="MasterLabel" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="NamespacePrefix" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="PrincipalType" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Protocol" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Repository" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SetupEntityAccessItems" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="SmallIcon" nillable="true" minOccurs="0" type="ens:StaticResource"/>
                        <element name="SmallIconId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Type" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="UserAuths" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="ExternalDataUserAuth">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AuthProvider" nillable="true" minOccurs="0" type="ens:AuthProvider"/>
                        <element name="AuthProviderId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="ExternalDataSource" nillable="true" minOccurs="0" type="ens:sObject"/>
                        <element name="ExternalDataSourceId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Password" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Protocol" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="User" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="UserId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="Username" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="FeedAttachment">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="FeedEntityId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="RecordId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="Title" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Type" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Value" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="FeedComment">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CommentBody" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CommentType" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:sObject"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="FeedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedItemId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="FeedRevisions" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="InsertedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="InsertedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsRichText" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsVerified" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastEditById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastEditDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="ParentId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="RelatedRecordId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="Revision" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="Status" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="FeedItem">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="BestComment" nillable="true" minOccurs="0" type="ens:FeedComment"/>
                        <element name="BestCommentId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="Body" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CommentCount" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:sObject"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="FeedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedComments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedLikes" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedRevisions" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedSignals" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedTrackedChanges" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="HasContent" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="HasFeedEntity" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="HasLink" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="HasVerifiedComment" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="InsertedBy" nillable="true" minOccurs="0" type="ens:sObject"/>
                        <element name="InsertedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsRichText" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastEditById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastEditDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LikeCount" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="LinkUrl" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Parent" nillable="true" minOccurs="0" type="ens:sObject"/>
                        <element name="ParentId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="RelatedRecordId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="Revision" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="Status" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Title" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TopicAssignments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Type" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="FeedLike">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="FeedEntityId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="FeedItemId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="InsertedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="InsertedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="FeedPollChoice">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="ChoiceBody" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="FeedItemId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="FeedPollVotes" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="Position" nillable="true" minOccurs="0" type="xsd:int"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="FeedPollVote">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="Choice" nillable="true" minOccurs="0" type="ens:FeedPollChoice"/>
                        <element name="ChoiceId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="FeedItemId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="FeedRevision">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="Action" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:sObject"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="EditedAttribute" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="FeedEntityId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsValueRichText" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="Revision" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Value" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="FeedSignal">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="FeedEntityId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="FeedItemId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="InsertedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="InsertedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="SignalType" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SignalValue" nillable="true" minOccurs="0" type="xsd:int"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="FeedTrackedChange">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="FeedItemId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="FieldName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="NewValue" nillable="true" minOccurs="0" type="xsd:anyType"/>
                        <element name="OldValue" nillable="true" minOccurs="0" type="xsd:anyType"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="FieldDefinition">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="BusinessOwner" nillable="true" minOccurs="0" type="ens:sObject"/>
                        <element name="BusinessOwnerId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="BusinessStatus" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ControlledFields" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ControllingFieldDefinition" nillable="true" minOccurs="0" type="ens:FieldDefinition"/>
                        <element name="ControllingFieldDefinitionId" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="DataType" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Description" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="DeveloperName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="DurableId" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="EntityDefinition" nillable="true" minOccurs="0" type="ens:EntityDefinition"/>
                        <element name="EntityDefinitionId" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ExtraTypeInfo" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsApiFilterable" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsApiGroupable" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsApiSortable" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsCalculated" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsCompactLayoutable" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsCompound" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsFieldHistoryTracked" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsHighScaleNumber" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsHtmlFormatted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsIndexed" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsListFilterable" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsListSortable" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsListVisible" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsNameField" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsNillable" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsPolymorphicForeignKey" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsSearchPrefilterable" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsWorkflowFilterable" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="Label" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Length" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="MasterLabel" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="NamespacePrefix" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Particles" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Precision" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="Publisher" nillable="true" minOccurs="0" type="ens:Publisher"/>
                        <element name="PublisherId" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="QualifiedApiName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ReferenceTargetField" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ReferenceTo" nillable="true" minOccurs="0" type="tns:RelationshipReferenceTo"/>
                        <element name="RelationshipDomains" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="RelationshipName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="RunningUserFieldAccess" nillable="true" minOccurs="0" type="ens:UserFieldAccess"/>
                        <element name="RunningUserFieldAccessId" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Scale" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="SecurityClassification" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ServiceDataType" nillable="true" minOccurs="0" type="ens:DataType"/>
                        <element name="ServiceDataTypeId" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ValueType" nillable="true" minOccurs="0" type="ens:DataType"/>
                        <element name="ValueTypeId" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="FieldPermissions">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="Field" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Parent" nillable="true" minOccurs="0" type="ens:PermissionSet"/>
                        <element name="ParentId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="PermissionsEdit" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsRead" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="SobjectType" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="FileSearchActivity">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AvgNumResults" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="ClickRank" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="CountQueries" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="CountUsers" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Period" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="QueryDate" nillable="true" minOccurs="0" type="xsd:date"/>
                        <element name="QueryLanguage" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SearchTerm" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="FiscalYearSettings">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="Description" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="EndDate" nillable="true" minOccurs="0" type="xsd:date"/>
                        <element name="IsStandardYear" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="PeriodId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="PeriodLabelScheme" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="PeriodPrefix" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Periods" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="QuarterLabelScheme" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="QuarterPrefix" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="StartDate" nillable="true" minOccurs="0" type="xsd:date"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="WeekLabelScheme" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="WeekStartDay" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="YearType" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="FlexQueueItem">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AsyncApexJob" nillable="true" minOccurs="0" type="ens:AsyncApexJob"/>
                        <element name="AsyncApexJobId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="FlexQueueItemId" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="JobPosition" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="JobType" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="FlowInterview">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="CurrentElement" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Guid" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="InterviewLabel" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Owner" nillable="true" minOccurs="0" type="ens:sObject"/>
                        <element name="OwnerId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="PauseLabel" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="FlowInterviewShare">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AccessLevel" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Parent" nillable="true" minOccurs="0" type="ens:FlowInterview"/>
                        <element name="ParentId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="RowCause" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="UserOrGroup" nillable="true" minOccurs="0" type="ens:sObject"/>
                        <element name="UserOrGroupId" nillable="true" minOccurs="0" type="tns:ID"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="Folder">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AccessType" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DeveloperName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsReadonly" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="NamespacePrefix" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Type" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="FolderedContentDocument">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="ContentDocument" nillable="true" minOccurs="0" type="ens:ContentDocument"/>
                        <element name="ContentDocumentId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ContentSize" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="FileExtension" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="FileType" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsFolder" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="ParentContentFolder" nillable="true" minOccurs="0" type="ens:ContentFolder"/>
                        <element name="ParentContentFolderId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Title" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="ForecastShare">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AccessLevel" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CanSubmit" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="RowCause" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="UserOrGroupId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="UserRoleId" nillable="true" minOccurs="0" type="tns:ID"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="GrantedByLicense">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="CustomPermission" nillable="true" minOccurs="0" type="ens:CustomPermission"/>
                        <element name="CustomPermissionId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="PermissionSetLicense" nillable="true" minOccurs="0" type="ens:PermissionSetLicense"/>
                        <element name="PermissionSetLicenseId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="Group">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DelegatedUsers" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="DeveloperName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="DoesIncludeBosses" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="DoesSendEmailToMembers" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="Email" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="GroupMembers" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Owner" nillable="true" minOccurs="0" type="ens:sObject"/>
                        <element name="OwnerId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="QueueSobjects" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Related" nillable="true" minOccurs="0" type="ens:sObject"/>
                        <element name="RelatedId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Type" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="GroupMember">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="Group" nillable="true" minOccurs="0" type="ens:Group"/>
                        <element name="GroupId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="UserOrGroupId" nillable="true" minOccurs="0" type="tns:ID"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="Holiday">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="ActivityDate" nillable="true" minOccurs="0" type="xsd:date"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Description" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="EndTimeInMinutes" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="IsAllDay" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsRecurrence" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="RecurrenceDayOfMonth" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="RecurrenceDayOfWeekMask" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="RecurrenceEndDateOnly" nillable="true" minOccurs="0" type="xsd:date"/>
                        <element name="RecurrenceInstance" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="RecurrenceInterval" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="RecurrenceMonthOfYear" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="RecurrenceStartDate" nillable="true" minOccurs="0" type="xsd:date"/>
                        <element name="RecurrenceType" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="StartTimeInMinutes" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="Idea">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="Body" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Categories" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Comments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Community" nillable="true" minOccurs="0" type="ens:Community"/>
                        <element name="CommunityId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="CreatorFullPhotoUrl" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CreatorName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CreatorSmallPhotoUrl" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsHtml" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsMerged" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastComment" nillable="true" minOccurs="0" type="ens:IdeaComment"/>
                        <element name="LastCommentDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastCommentId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastReferencedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastViewedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="NumComments" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="ParentIdea" nillable="true" minOccurs="0" type="ens:Idea"/>
                        <element name="ParentIdeaId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="RecordType" nillable="true" minOccurs="0" type="ens:RecordType"/>
                        <element name="RecordTypeId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="Status" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Title" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        <element name="VoteScore" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="VoteTotal" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="Votes" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="IdeaComment">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CommentBody" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CommunityId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="CreatorFullPhotoUrl" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CreatorName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CreatorSmallPhotoUrl" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Idea" nillable="true" minOccurs="0" type="ens:Idea"/>
                        <element name="IdeaId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsHtml" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="UpVotes" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="Votes" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="IdpEventLog">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AppId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="AuthSessionId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ErrorCode" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IdentityUsed" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="InitiatedBy" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="OptionsHasLogoutUrl" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="SamlEntityUrl" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SsoType" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Timestamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="UserId" nillable="true" minOccurs="0" type="tns:ID"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="InstalledMobileApp">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="ConnectedApplication" nillable="true" minOccurs="0" type="ens:ConnectedApplication"/>
                        <element name="ConnectedApplicationId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Status" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="User" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="UserId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        <element name="Version" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="KnowledgeableUser">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="RawRank" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TopicId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="UserId" nillable="true" minOccurs="0" type="tns:ID"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="Lead">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AcceptedEventRelations" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ActivityHistories" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Address" nillable="true" minOccurs="0" type="tns:address"/>
                        <element name="AnnualRevenue" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="AttachedContentDocuments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Attachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Campaign" nillable="true" minOccurs="0" type="ens:Campaign"/>
                        <element name="CampaignMembers" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="City" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CombinedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Company" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ConvertedAccount" nillable="true" minOccurs="0" type="ens:Account"/>
                        <element name="ConvertedAccountId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ConvertedContact" nillable="true" minOccurs="0" type="ens:Contact"/>
                        <element name="ConvertedContactId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ConvertedDate" nillable="true" minOccurs="0" type="xsd:date"/>
                        <element name="ConvertedOpportunity" nillable="true" minOccurs="0" type="ens:Opportunity"/>
                        <element name="ConvertedOpportunityId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="Country" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DeclinedEventRelations" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Description" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="DuplicateRecordItems" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Email" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="EmailBouncedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="EmailBouncedReason" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="EmailMessageRelations" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="EmailStatuses" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="EventRelations" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Events" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Fax" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="FeedSubscriptionsForEntity" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Feeds" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FirstName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="GeocodeAccuracy" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Histories" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Industry" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsConverted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsUnreadByOwner" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="Jigsaw" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="JigsawContactId" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="LastActivityDate" nillable="true" minOccurs="0" type="xsd:date"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="LastReferencedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastViewedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Latitude" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="LeadSource" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Longitude" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="LookedUpFromActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="MasterRecord" nillable="true" minOccurs="0" type="ens:Lead"/>
                        <element name="MasterRecordId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="MobilePhone" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Notes" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="NotesAndAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="NumberOfEmployees" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="OpenActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="OutgoingEmailRelations" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Owner" nillable="true" minOccurs="0" type="ens:sObject"/>
                        <element name="OwnerId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="Phone" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="PhotoUrl" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="PostalCode" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ProcessInstances" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessSteps" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Rating" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="RecordAssociatedGroups" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Salutation" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Shares" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="State" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Status" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Street" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Tasks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Title" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TopicAssignments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="UndecidedEventRelations" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        <element name="Website" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="origami1__CurrentGenerators__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="origami1__NumberofLocations__c" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="origami1__Primary__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="origami1__ProductInterest__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="origami1__SICCode__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="LeadFeed">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="Body" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CommentCount" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:sObject"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="FeedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedComments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedLikes" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedSignals" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedTrackedChanges" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="InsertedBy" nillable="true" minOccurs="0" type="ens:sObject"/>
                        <element name="InsertedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsRichText" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LikeCount" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="LinkUrl" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Parent" nillable="true" minOccurs="0" type="ens:Lead"/>
                        <element name="ParentId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="RelatedRecordId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Title" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Type" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="LeadHistory">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:sObject"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Field" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="Lead" nillable="true" minOccurs="0" type="ens:Lead"/>
                        <element name="LeadId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="NewValue" nillable="true" minOccurs="0" type="xsd:anyType"/>
                        <element name="OldValue" nillable="true" minOccurs="0" type="xsd:anyType"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="LeadShare">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Lead" nillable="true" minOccurs="0" type="ens:Lead"/>
                        <element name="LeadAccessLevel" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="LeadId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="RowCause" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="UserOrGroup" nillable="true" minOccurs="0" type="ens:sObject"/>
                        <element name="UserOrGroupId" nillable="true" minOccurs="0" type="tns:ID"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="LeadStatus">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="ApiName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="IsConverted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsDefault" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="MasterLabel" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SortOrder" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="ListEmail">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AttachedContentDocuments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CombinedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContentDocumentIds" nillable="true" minOccurs="0" maxOccurs="unbounded" type="tns:ID"/>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="FromAddress" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="FromName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="HasAttachment" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="HtmlBody" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastReferencedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastViewedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Owner" nillable="true" minOccurs="0" type="ens:sObject"/>
                        <element name="OwnerId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ScheduledDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Status" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Subject" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TextBody" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TotalSent" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="ListEmailRecipientSource">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="ListEmail" nillable="true" minOccurs="0" type="ens:ListEmail"/>
                        <element name="ListEmailId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SourceList" nillable="true" minOccurs="0" type="ens:sObject"/>
                        <element name="SourceListId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SourceType" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="ListEmailShare">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AccessLevel" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Parent" nillable="true" minOccurs="0" type="ens:ListEmail"/>
                        <element name="ParentId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="RowCause" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="UserOrGroup" nillable="true" minOccurs="0" type="ens:sObject"/>
                        <element name="UserOrGroupId" nillable="true" minOccurs="0" type="tns:ID"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="ListView">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DeveloperName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsSoqlCompatible" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastReferencedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastViewedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="ListEmailRecipientSources" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="NamespacePrefix" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SobjectType" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="ListViewChart">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AggregateField" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="AggregateType" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ChartType" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DeveloperName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="GroupingField" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="Language" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="MasterLabel" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Owner" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="OwnerId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SobjectType" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="ListViewChartInstance">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AggregateField" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="AggregateType" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ChartType" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="DataQuery" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="DeveloperName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ExternalId" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="GroupingField" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsDeletable" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsEditable" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsLastViewed" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="Label" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ListViewChart" nillable="true" minOccurs="0" type="ens:ListViewChart"/>
                        <element name="ListViewChartId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ListViewContext" nillable="true" minOccurs="0" type="ens:ListView"/>
                        <element name="ListViewContextId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SourceEntity" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="LoginGeo">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="City" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Country" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CountryIso" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Latitude" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="LoginTime" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Longitude" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="PostalCode" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Subdivision" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="LoginHistory">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="ApiType" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ApiVersion" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Application" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="AuthenticationServiceId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="Browser" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CipherSuite" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ClientVersion" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CountryIso" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="LoginGeo" nillable="true" minOccurs="0" type="ens:LoginGeo"/>
                        <element name="LoginGeoId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LoginTime" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LoginType" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="LoginUrl" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Platform" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SourceIp" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Status" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TlsProtocol" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="UserId" nillable="true" minOccurs="0" type="tns:ID"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="LoginIp">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="ChallengeMethod" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ChallengeSentDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="IsAuthenticated" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="SourceIp" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Users" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="UsersId" nillable="true" minOccurs="0" type="tns:ID"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="LookedUpFromActivity">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="Account" nillable="true" minOccurs="0" type="ens:Account"/>
                        <element name="AccountId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ActivityDate" nillable="true" minOccurs="0" type="xsd:date"/>
                        <element name="ActivitySubtype" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ActivityType" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CallDisposition" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CallDurationInSeconds" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="CallObject" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CallType" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Description" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="DurationInMinutes" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="EndDateTime" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="IsAllDayEvent" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsClosed" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsHighPriority" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsReminderSet" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsTask" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsVisibleInSelfService" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Location" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Owner" nillable="true" minOccurs="0" type="ens:sObject"/>
                        <element name="OwnerId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="Priority" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ReminderDateTime" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="StartDateTime" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Status" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Subject" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="What" nillable="true" minOccurs="0" type="ens:sObject"/>
                        <element name="WhatId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="Who" nillable="true" minOccurs="0" type="ens:sObject"/>
                        <element name="WhoId" nillable="true" minOccurs="0" type="tns:ID"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="Macro">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Description" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Histories" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="IsAlohaSupported" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastReferencedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastViewedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Owner" nillable="true" minOccurs="0" type="ens:sObject"/>
                        <element name="OwnerId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="StartingContext" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="MacroHistory">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:sObject"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Field" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="Macro" nillable="true" minOccurs="0" type="ens:Macro"/>
                        <element name="MacroId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="NewValue" nillable="true" minOccurs="0" type="xsd:anyType"/>
                        <element name="OldValue" nillable="true" minOccurs="0" type="xsd:anyType"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="MacroInstruction">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Macro" nillable="true" minOccurs="0" type="ens:Macro"/>
                        <element name="MacroId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Operation" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SortOrder" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Target" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        <element name="Value" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ValueRecord" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="MacroShare">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AccessLevel" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Parent" nillable="true" minOccurs="0" type="ens:Macro"/>
                        <element name="ParentId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="RowCause" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="UserOrGroup" nillable="true" minOccurs="0" type="ens:sObject"/>
                        <element name="UserOrGroupId" nillable="true" minOccurs="0" type="tns:ID"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="MailmergeTemplate">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="Body" nillable="true" minOccurs="0" type="xsd:base64Binary"/>
                        <element name="BodyLength" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Description" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Filename" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastUsedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SecurityOptionsAttachmentHasFlash" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="SecurityOptionsAttachmentHasXSSThreat" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="SecurityOptionsAttachmentScannedForXSS" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="SecurityOptionsAttachmentScannedforFlash" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="MatchingRule">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="BooleanFilter" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Description" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="DeveloperName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="Language" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="MasterLabel" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="MatchEngine" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="MatchingRuleItems" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="NamespacePrefix" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="RuleStatus" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SobjectSubtype" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SobjectType" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="MatchingRuleItem">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="BlankValueBehavior" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Field" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="MatchingMethod" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="MatchingRule" nillable="true" minOccurs="0" type="ens:MatchingRule"/>
                        <element name="MatchingRuleId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SortOrder" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="Name">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="Alias" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Email" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="FirstName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsActive" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="LastReferencedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastViewedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="NameOrAlias" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Phone" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Profile" nillable="true" minOccurs="0" type="ens:Profile"/>
                        <element name="ProfileId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="RecordType" nillable="true" minOccurs="0" type="ens:RecordType"/>
                        <element name="RecordTypeId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="Title" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Type" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="UserRole" nillable="true" minOccurs="0" type="ens:UserRole"/>
                        <element name="UserRoleId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="Username" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="NamedCredential">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AuthProvider" nillable="true" minOccurs="0" type="ens:AuthProvider"/>
                        <element name="AuthProviderId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CalloutOptionsAllowMergeFieldsInBody" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="CalloutOptionsAllowMergeFieldsInHeader" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="CalloutOptionsGenerateAuthorizationHeader" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DeveloperName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Endpoint" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="Language" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="MasterLabel" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="NamespacePrefix" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="PrincipalType" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SetupEntityAccessItems" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="UserAuths" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="Note">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="Body" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsPrivate" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Owner" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="OwnerId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="Parent" nillable="true" minOccurs="0" type="ens:sObject"/>
                        <element name="ParentId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Title" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="NoteAndAttachment">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsNote" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsPrivate" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Owner" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="OwnerId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="Parent" nillable="true" minOccurs="0" type="ens:sObject"/>
                        <element name="ParentId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Title" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="OauthToken">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AccessToken" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="AppMenuItem" nillable="true" minOccurs="0" type="ens:AppMenuItem"/>
                        <element name="AppMenuItemId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="AppName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DeleteToken" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="LastUsedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="RequestToken" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="UseCount" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="User" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="UserId" nillable="true" minOccurs="0" type="tns:ID"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="ObjectPermissions">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Parent" nillable="true" minOccurs="0" type="ens:PermissionSet"/>
                        <element name="ParentId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="PermissionsCreate" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsDelete" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsEdit" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsModifyAllRecords" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsRead" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsViewAllRecords" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="SobjectType" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="OpenActivity">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="Account" nillable="true" minOccurs="0" type="ens:Account"/>
                        <element name="AccountId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ActivityDate" nillable="true" minOccurs="0" type="xsd:date"/>
                        <element name="ActivitySubtype" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ActivityType" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="AlternateDetail" nillable="true" minOccurs="0" type="ens:EmailMessage"/>
                        <element name="AlternateDetailId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CallDisposition" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CallDurationInSeconds" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="CallObject" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CallType" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Description" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="DurationInMinutes" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="EndDateTime" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="IsAllDayEvent" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsClosed" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsHighPriority" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsReminderSet" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsTask" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsVisibleInSelfService" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Location" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Owner" nillable="true" minOccurs="0" type="ens:sObject"/>
                        <element name="OwnerId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="Priority" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ReminderDateTime" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="StartDateTime" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Status" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Subject" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="What" nillable="true" minOccurs="0" type="ens:sObject"/>
                        <element name="WhatId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="Who" nillable="true" minOccurs="0" type="ens:sObject"/>
                        <element name="WhoId" nillable="true" minOccurs="0" type="tns:ID"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="Opportunity">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="Account" nillable="true" minOccurs="0" type="ens:Account"/>
                        <element name="AccountId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="AccountPartners" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ActivityHistories" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Amount" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="AttachedContentDocuments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Attachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Campaign" nillable="true" minOccurs="0" type="ens:Campaign"/>
                        <element name="CampaignId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CloseDate" nillable="true" minOccurs="0" type="xsd:date"/>
                        <element name="CombinedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Description" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Emails" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Events" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ExpectedRevenue" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="FeedSubscriptionsForEntity" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Feeds" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Fiscal" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="FiscalQuarter" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="FiscalYear" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="ForecastCategory" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ForecastCategoryName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="HasOpenActivity" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="HasOpportunityLineItem" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="HasOverdueTask" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="Histories" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="IsClosed" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsPrivate" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsWon" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastActivityDate" nillable="true" minOccurs="0" type="xsd:date"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastReferencedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastViewedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LeadSource" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="LookedUpFromActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="NextStep" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Notes" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="NotesAndAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="OpenActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="OpportunityCompetitors" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="OpportunityContactRoles" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="OpportunityHistories" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="OpportunityLineItems" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="OpportunityPartnersFrom" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Owner" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="OwnerId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="Partners" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Pricebook2" nillable="true" minOccurs="0" type="ens:Pricebook2"/>
                        <element name="Pricebook2Id" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="Probability" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="ProcessInstances" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessSteps" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="RecordAssociatedGroups" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Shares" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="StageName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Tasks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="TopicAssignments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="TotalOpportunityQuantity" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="Type" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        <element name="origami1__CurrentGenerators__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="origami1__DeliveryInstallationStatus__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="origami1__MainCompetitors__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="origami1__OrderNumber__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="origami1__TrackingNumber__c" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="OpportunityCompetitor">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CompetitorName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Opportunity" nillable="true" minOccurs="0" type="ens:Opportunity"/>
                        <element name="OpportunityId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="Strengths" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Weaknesses" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="OpportunityContactRole">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="Contact" nillable="true" minOccurs="0" type="ens:Contact"/>
                        <element name="ContactId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsPrimary" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Opportunity" nillable="true" minOccurs="0" type="ens:Opportunity"/>
                        <element name="OpportunityId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="Role" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="OpportunityFeed">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="Body" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CommentCount" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:sObject"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="FeedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedComments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedLikes" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedSignals" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedTrackedChanges" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="InsertedBy" nillable="true" minOccurs="0" type="ens:sObject"/>
                        <element name="InsertedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsRichText" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LikeCount" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="LinkUrl" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Parent" nillable="true" minOccurs="0" type="ens:Opportunity"/>
                        <element name="ParentId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="RelatedRecordId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Title" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Type" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="OpportunityFieldHistory">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:sObject"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Field" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="NewValue" nillable="true" minOccurs="0" type="xsd:anyType"/>
                        <element name="OldValue" nillable="true" minOccurs="0" type="xsd:anyType"/>
                        <element name="Opportunity" nillable="true" minOccurs="0" type="ens:Opportunity"/>
                        <element name="OpportunityId" nillable="true" minOccurs="0" type="tns:ID"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="OpportunityHistory">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="Amount" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="CloseDate" nillable="true" minOccurs="0" type="xsd:date"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="ExpectedRevenue" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="ForecastCategory" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="Opportunity" nillable="true" minOccurs="0" type="ens:Opportunity"/>
                        <element name="OpportunityId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="Probability" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="StageName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="OpportunityLineItem">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Description" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="ListPrice" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Opportunity" nillable="true" minOccurs="0" type="ens:Opportunity"/>
                        <element name="OpportunityId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="PricebookEntry" nillable="true" minOccurs="0" type="ens:PricebookEntry"/>
                        <element name="PricebookEntryId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="Product2" nillable="true" minOccurs="0" type="ens:Product2"/>
                        <element name="Product2Id" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ProductCode" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Quantity" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="ServiceDate" nillable="true" minOccurs="0" type="xsd:date"/>
                        <element name="SortOrder" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TotalPrice" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="UnitPrice" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="OpportunityPartner">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AccountTo" nillable="true" minOccurs="0" type="ens:Account"/>
                        <element name="AccountToId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsPrimary" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Opportunity" nillable="true" minOccurs="0" type="ens:Opportunity"/>
                        <element name="OpportunityId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ReversePartnerId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="Role" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="OpportunityShare">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Opportunity" nillable="true" minOccurs="0" type="ens:Opportunity"/>
                        <element name="OpportunityAccessLevel" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="OpportunityId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="RowCause" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="UserOrGroup" nillable="true" minOccurs="0" type="ens:sObject"/>
                        <element name="UserOrGroupId" nillable="true" minOccurs="0" type="tns:ID"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="OpportunityStage">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="ApiName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DefaultProbability" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="Description" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ForecastCategory" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ForecastCategoryName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsActive" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsClosed" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsWon" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="MasterLabel" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SortOrder" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="OrgLifecycleNotification">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LifecycleRequestId" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="LifecycleRequestType" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="OrgId" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ReplayId" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Status" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="StatusCode" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="OrgWideEmailAddress">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="Address" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DisplayName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsAllowAllProfiles" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="Organization">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="Address" nillable="true" minOccurs="0" type="tns:address"/>
                        <element name="AttachedContentDocuments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="City" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CombinedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ComplianceBccEmail" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Country" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="CustomBrands" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="DefaultAccountAccess" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="DefaultCalendarAccess" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="DefaultCampaignAccess" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="DefaultCaseAccess" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="DefaultContactAccess" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="DefaultLeadAccess" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="DefaultLocaleSidKey" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="DefaultOpportunityAccess" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="DefaultPricebookAccess" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Division" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Fax" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="FiscalYearStartMonth" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="GeocodeAccuracy" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="InstanceName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsReadOnly" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsSandbox" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LanguageLocaleKey" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Latitude" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="Longitude" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="MonthlyPageViewsEntitlement" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="MonthlyPageViewsUsed" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="NamespacePrefix" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="NumKnowledgeService" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="OrganizationType" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Phone" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="PostalCode" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="PreferencesLightningLoginEnabled" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PreferencesOnlyLLPermUserAllowed" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PreferencesRequireOpportunityProducts" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PreferencesTerminateOldestSession" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PreferencesTransactionSecurityPolicy" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PrimaryContact" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ReceivesAdminInfoEmails" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="ReceivesInfoEmails" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="SignupCountryIsoCode" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="State" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Street" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TrialExpirationDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="UiSkin" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="UsesStartDateAsFiscalYearName" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="WebToCaseDefaultOrigin" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="OutgoingEmail">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="BccAddress" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="BccIds" nillable="true" minOccurs="0" maxOccurs="unbounded" type="tns:ID"/>
                        <element name="CcAddress" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CcIds" nillable="true" minOccurs="0" maxOccurs="unbounded" type="tns:ID"/>
                        <element name="ContentDocumentIds" nillable="true" minOccurs="0" maxOccurs="unbounded" type="tns:ID"/>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="EmailTemplate" nillable="true" minOccurs="0" type="ens:EmailTemplate"/>
                        <element name="EmailTemplateId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ExternalId" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="HtmlBody" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="OutgoingEmailRelations" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="RelatedTo" nillable="true" minOccurs="0" type="ens:sObject"/>
                        <element name="RelatedToId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="Subject" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TextBody" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ToAddress" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ToIds" nillable="true" minOccurs="0" maxOccurs="unbounded" type="tns:ID"/>
                        <element name="ValidatedFromAddress" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Who" nillable="true" minOccurs="0" type="ens:sObject"/>
                        <element name="WhoId" nillable="true" minOccurs="0" type="tns:ID"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="OutgoingEmailRelation">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="ExternalId" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="OutgoingEmail" nillable="true" minOccurs="0" type="ens:OutgoingEmail"/>
                        <element name="OutgoingEmailId" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Relation" nillable="true" minOccurs="0" type="ens:sObject"/>
                        <element name="RelationAddress" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="RelationId" nillable="true" minOccurs="0" type="tns:ID"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="OwnedContentDocument">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="ContentDocument" nillable="true" minOccurs="0" type="ens:ContentDocument"/>
                        <element name="ContentDocumentId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ContentSize" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="ContentUrl" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="ExternalDataSourceName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ExternalDataSourceType" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="FileExtension" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="FileType" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Owner" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="OwnerId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="Title" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="OwnerChangeOptionInfo">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="DefaultValue" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="DurableId" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="EntityDefinition" nillable="true" minOccurs="0" type="ens:EntityDefinition"/>
                        <element name="EntityDefinitionId" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsEditable" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="Label" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="PackageLicense">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AllowedLicenses" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="ExpirationDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="IsProvisioned" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="NamespacePrefix" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Status" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="UsedLicenses" nillable="true" minOccurs="0" type="xsd:int"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="Partner">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AccountFrom" nillable="true" minOccurs="0" type="ens:Account"/>
                        <element name="AccountFromId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="AccountTo" nillable="true" minOccurs="0" type="ens:Account"/>
                        <element name="AccountToId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsPrimary" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Opportunity" nillable="true" minOccurs="0" type="ens:Opportunity"/>
                        <element name="OpportunityId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ReversePartnerId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="Role" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="PartnerRole">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="ApiName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="MasterLabel" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ReverseRole" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SortOrder" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="Period">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="EndDate" nillable="true" minOccurs="0" type="xsd:date"/>
                        <element name="FiscalYearSettings" nillable="true" minOccurs="0" type="ens:FiscalYearSettings"/>
                        <element name="FiscalYearSettingsId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="FullyQualifiedLabel" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsForecastPeriod" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="Number" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="PeriodLabel" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="QuarterLabel" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="StartDate" nillable="true" minOccurs="0" type="xsd:date"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Type" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="PermissionSet">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="Assignments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Description" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="FieldPerms" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="HasActivationRequired" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsCustom" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsOwnedByProfile" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="Label" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="License" nillable="true" minOccurs="0" type="ens:sObject"/>
                        <element name="LicenseId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="NamespacePrefix" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ObjectPerms" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="PermissionsAccessCMC" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsActivateContract" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsAddDirectMessageMembers" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsAllowLightningLogin" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsAllowUniversalSearch" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsAllowViewEditConvertedLeads" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsAllowViewKnowledge" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsApiEnabled" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsAssignPermissionSets" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsAssignTopics" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsAuthorApex" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsBulkApiHardDelete" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsBulkMacrosAllowed" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsCampaignInfluence2" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsCanApproveFeedPost" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsCanInsertFeedSystemFields" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsCanUseNewDashboardBuilder" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsCanVerifyComment" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsChatterComposeUiCodesnippet" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsChatterEditOwnPost" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsChatterEditOwnRecordPost" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsChatterFileLink" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsChatterForSharePoint" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsChatterInternalUser" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsChatterInviteExternalUsers" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsChatterOwnGroups" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsConfigCustomRecs" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsConnectOrgToEnvironmentHub" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsContentAdministrator" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsContentWorkspaces" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsConvertLeads" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsCreateCustomizeFilters" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsCreatePackaging" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsCreateTopics" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsCreateWorkspaces" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsCustomMobileAppsAccess" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsCustomSidebarOnAllPages" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsCustomizeApplication" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsDelegatedTwoFactor" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsDeleteActivatedContract" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsDeleteTopics" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsDistributeFromPersWksp" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsEditBrandTemplates" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsEditCaseComments" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsEditEvent" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsEditHtmlTemplates" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsEditKnowledge" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsEditOppLineItemUnitPrice" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsEditPublicDocuments" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsEditPublicFilters" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsEditPublicTemplates" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsEditReadonlyFields" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsEditReports" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsEditTask" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsEditTopics" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsEmailAdministration" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsEmailMass" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsEmailSingle" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsEmailTemplateManagement" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsEnableCommunityAppLauncher" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsEnableNotifications" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsExportReport" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsFeedPinning" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsFlowUFLRequired" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsForceTwoFactor" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsGovernNetworks" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsHideReadByList" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsIdentityConnect" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsIdentityEnabled" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsImportCustomObjects" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsImportLeads" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsImportPersonal" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsInstallPackaging" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsIotUser" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsLightningConsoleAllowedForUser" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsLightningExperienceUser" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsListEmailSend" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsManageAnalyticSnapshots" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsManageAuthProviders" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsManageBusinessHourHolidays" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsManageCallCenters" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsManageCases" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsManageCategories" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsManageCertificates" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsManageChatterMessages" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsManageContentPermissions" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsManageContentProperties" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsManageContentTypes" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsManageCustomPermissions" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsManageCustomReportTypes" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsManageDashboards" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsManageDataCategories" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsManageDataIntegrations" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsManageDynamicDashboards" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsManageEmailClientConfig" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsManageExchangeConfig" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsManageHealthCheck" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsManageInteraction" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsManageInternalUsers" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsManageIpAddresses" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsManageKnowledge" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsManageKnowledgeImportExport" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsManageLeads" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsManageLoginAccessPolicies" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsManageMobile" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsManageNetworks" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsManagePasswordPolicies" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsManageProfilesPermissionsets" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsManagePvtRptsAndDashbds" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsManageRemoteAccess" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsManageRoles" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsManageSearchPromotionRules" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsManageSessionPermissionSets" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsManageSharing" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsManageSolutions" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsManageSynonyms" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsManageTwoFactor" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsManageUnlistedGroups" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsManageUsers" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsMassInlineEdit" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsMergeTopics" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsModerateChatter" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsModerateNetworkUsers" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsModifyAllData" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsModifySecureAgents" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsNewReportBuilder" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsPackaging2" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsPasswordNeverExpires" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsPreventClassicExperience" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsPublishPackaging" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsRemoveDirectMessageMembers" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsResetPasswords" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsRunFlow" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsRunReports" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsSalesConsole" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsScheduleReports" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsSelectFilesFromSalesforce" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsSendAnnouncementEmails" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsSendSitRequests" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsShareInternalArticles" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsShowCompanyNameAsUserBadge" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsSolutionImport" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsSubmitMacrosAllowed" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsSubscribeToLightningReports" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsTransferAnyCase" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsTransferAnyEntity" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsTransferAnyLead" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsTwoFactorApi" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsUseTeamReassignWizards" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsUseWebLink" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsViewAllActivities" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsViewAllData" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsViewAllUsers" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsViewContent" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsViewDataAssessment" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsViewDataCategories" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsViewEncryptedData" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsViewEventLogFiles" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsViewHealthCheck" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsViewHelpLink" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsViewMyTeamsDashboards" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsViewSetup" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="Profile" nillable="true" minOccurs="0" type="ens:Profile"/>
                        <element name="ProfileId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SessionActivations" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="SetupEntityAccessItems" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="PermissionSetAssignment">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="Assignee" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="AssigneeId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="PermissionSet" nillable="true" minOccurs="0" type="ens:PermissionSet"/>
                        <element name="PermissionSetId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="PermissionSetLicense">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DeveloperName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ExpirationDate" nillable="true" minOccurs="0" type="xsd:date"/>
                        <element name="GrantedByLicenses" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="Language" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="MasterLabel" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="MaximumPermissionsAccessCMC" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsActivateContract" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsAddDirectMessageMembers" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsAllowLightningLogin" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsAllowUniversalSearch" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsAllowViewEditConvertedLeads" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsAllowViewKnowledge" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsApiEnabled" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsAssignPermissionSets" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsAssignTopics" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsAuthorApex" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsBulkApiHardDelete" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsBulkMacrosAllowed" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsCampaignInfluence2" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsCanApproveFeedPost" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsCanInsertFeedSystemFields" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsCanUseNewDashboardBuilder" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsCanVerifyComment" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsChatterComposeUiCodesnippet" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsChatterEditOwnPost" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsChatterEditOwnRecordPost" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsChatterFileLink" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsChatterForSharePoint" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsChatterInternalUser" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsChatterInviteExternalUsers" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsChatterOwnGroups" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsConfigCustomRecs" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsConnectOrgToEnvironmentHub" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsContentAdministrator" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsContentWorkspaces" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsConvertLeads" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsCreateCustomizeFilters" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsCreatePackaging" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsCreateTopics" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsCreateWorkspaces" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsCustomMobileAppsAccess" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsCustomSidebarOnAllPages" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsCustomizeApplication" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsDelegatedTwoFactor" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsDeleteActivatedContract" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsDeleteTopics" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsDistributeFromPersWksp" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsEditBrandTemplates" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsEditCaseComments" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsEditEvent" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsEditHtmlTemplates" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsEditKnowledge" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsEditOppLineItemUnitPrice" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsEditPublicDocuments" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsEditPublicFilters" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsEditPublicTemplates" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsEditReadonlyFields" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsEditReports" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsEditTask" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsEditTopics" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsEmailAdministration" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsEmailMass" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsEmailSingle" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsEmailTemplateManagement" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsEnableCommunityAppLauncher" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsEnableNotifications" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsExportReport" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsFeedPinning" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsFlowUFLRequired" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsForceTwoFactor" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsGovernNetworks" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsHideReadByList" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsIdentityConnect" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsIdentityEnabled" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsImportCustomObjects" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsImportLeads" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsImportPersonal" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsInstallPackaging" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsIotUser" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsLightningConsoleAllowedForUser" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsLightningExperienceUser" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsListEmailSend" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsManageAnalyticSnapshots" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsManageAuthProviders" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsManageBusinessHourHolidays" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsManageCallCenters" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsManageCases" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsManageCategories" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsManageCertificates" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsManageChatterMessages" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsManageContentPermissions" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsManageContentProperties" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsManageContentTypes" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsManageCustomPermissions" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsManageCustomReportTypes" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsManageDashboards" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsManageDataCategories" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsManageDataIntegrations" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsManageDynamicDashboards" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsManageEmailClientConfig" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsManageExchangeConfig" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsManageHealthCheck" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsManageInteraction" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsManageInternalUsers" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsManageIpAddresses" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsManageKnowledge" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsManageKnowledgeImportExport" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsManageLeads" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsManageLoginAccessPolicies" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsManageMobile" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsManageNetworks" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsManagePasswordPolicies" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsManageProfilesPermissionsets" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsManagePvtRptsAndDashbds" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsManageRemoteAccess" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsManageRoles" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsManageSearchPromotionRules" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsManageSessionPermissionSets" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsManageSharing" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsManageSolutions" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsManageSynonyms" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsManageTwoFactor" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsManageUnlistedGroups" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsManageUsers" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsMassInlineEdit" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsMergeTopics" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsModerateChatter" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsModerateNetworkUsers" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsModifyAllData" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsModifySecureAgents" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsNewReportBuilder" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsPackaging2" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsPasswordNeverExpires" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsPreventClassicExperience" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsPublishPackaging" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsRemoveDirectMessageMembers" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsResetPasswords" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsRunFlow" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsRunReports" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsSalesConsole" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsScheduleReports" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsSelectFilesFromSalesforce" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsSendAnnouncementEmails" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsSendSitRequests" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsShareInternalArticles" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsShowCompanyNameAsUserBadge" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsSolutionImport" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsSubmitMacrosAllowed" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsSubscribeToLightningReports" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsTransferAnyCase" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsTransferAnyEntity" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsTransferAnyLead" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsTwoFactorApi" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsUseTeamReassignWizards" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsUseWebLink" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsViewAllActivities" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsViewAllData" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsViewAllUsers" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsViewContent" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsViewDataAssessment" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsViewDataCategories" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsViewEncryptedData" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsViewEventLogFiles" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsViewHealthCheck" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsViewHelpLink" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsViewMyTeamsDashboards" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaximumPermissionsViewSetup" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionSetLicenseAssignments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="PermissionSetLicenseKey" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Status" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TotalLicenses" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="UsedLicenses" nillable="true" minOccurs="0" type="xsd:int"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="PermissionSetLicenseAssign">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="Assignee" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="AssigneeId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="PermissionSetLicense" nillable="true" minOccurs="0" type="ens:PermissionSetLicense"/>
                        <element name="PermissionSetLicenseId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="PicklistValueInfo">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="DurableId" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="EntityParticle" nillable="true" minOccurs="0" type="ens:EntityParticle"/>
                        <element name="EntityParticleId" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsActive" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsDefaultValue" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="Label" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ValidFor" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Value" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="PlatformAction">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="ActionListContext" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ActionTarget" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ActionTargetType" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ApiName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Category" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ConfirmationMessage" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="DeviceFormat" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ExternalId" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="GroupId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="IconContentType" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IconHeight" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="IconUrl" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IconWidth" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="InvocationStatus" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="InvokedByUser" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="InvokedByUserId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="IsGroupDefault" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsMassAction" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="Label" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="PrimaryColor" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="RelatedListRecordId" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="RelatedSourceEntity" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Section" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SourceEntity" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Subtype" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetObject" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TargetUrl" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Type" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="PlatformCachePartition">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Description" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="DeveloperName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsDefaultPartition" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="Language" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="MasterLabel" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="NamespacePrefix" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="PlatforCachePartitionTypes" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="PlatformCachePartitionType">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AllocatedCapacity" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="AllocatedPurchasedCapacity" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="AllocatedTrialCapacity" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="CacheType" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="PlatformCachePartition" nillable="true" minOccurs="0" type="ens:PlatformCachePartition"/>
                        <element name="PlatformCachePartitionId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="Pricebook2">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Description" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Histories" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="IsActive" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsArchived" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsStandard" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastReferencedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastViewedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Opportunities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="PricebookEntries" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="Pricebook2History">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:sObject"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Field" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="NewValue" nillable="true" minOccurs="0" type="xsd:anyType"/>
                        <element name="OldValue" nillable="true" minOccurs="0" type="xsd:anyType"/>
                        <element name="Pricebook2" nillable="true" minOccurs="0" type="ens:Pricebook2"/>
                        <element name="Pricebook2Id" nillable="true" minOccurs="0" type="tns:ID"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="PricebookEntry">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="IsActive" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="OpportunityLineItems" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Pricebook2" nillable="true" minOccurs="0" type="ens:Pricebook2"/>
                        <element name="Pricebook2Id" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="Product2" nillable="true" minOccurs="0" type="ens:Product2"/>
                        <element name="Product2Id" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ProductCode" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="UnitPrice" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="UseStandardPrice" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="ProcessDefinition">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Description" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="DeveloperName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LockType" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="State" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TableEnumOrId" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Type" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="ProcessInstance">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CompletedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="ElapsedTimeInDays" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="ElapsedTimeInHours" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="ElapsedTimeInMinutes" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastActor" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastActorId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Nodes" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessDefinition" nillable="true" minOccurs="0" type="ens:ProcessDefinition"/>
                        <element name="ProcessDefinitionId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="Status" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Steps" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="StepsAndWorkitems" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="SubmittedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="SubmittedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TargetObject" nillable="true" minOccurs="0" type="ens:sObject"/>
                        <element name="TargetObjectId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="Workitems" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="ProcessInstanceHistory">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="Actor" nillable="true" minOccurs="0" type="ens:sObject"/>
                        <element name="ActorId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="Comments" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="ElapsedTimeInDays" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="ElapsedTimeInHours" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="ElapsedTimeInMinutes" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsPending" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="OriginalActor" nillable="true" minOccurs="0" type="ens:sObject"/>
                        <element name="OriginalActorId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ProcessInstance" nillable="true" minOccurs="0" type="ens:ProcessInstance"/>
                        <element name="ProcessInstanceId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ProcessNode" nillable="true" minOccurs="0" type="ens:ProcessNode"/>
                        <element name="ProcessNodeId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="RemindersSent" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="StepStatus" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TargetObject" nillable="true" minOccurs="0" type="ens:sObject"/>
                        <element name="TargetObjectId" nillable="true" minOccurs="0" type="tns:ID"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="ProcessInstanceNode">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CompletedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="ElapsedTimeInDays" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="ElapsedTimeInHours" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="ElapsedTimeInMinutes" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastActor" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastActorId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="NodeStatus" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ProcessInstance" nillable="true" minOccurs="0" type="ens:ProcessInstance"/>
                        <element name="ProcessInstanceId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ProcessNode" nillable="true" minOccurs="0" type="ens:ProcessNode"/>
                        <element name="ProcessNodeId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ProcessNodeName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="ProcessInstanceStep">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="Actor" nillable="true" minOccurs="0" type="ens:sObject"/>
                        <element name="ActorId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="Comments" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="ElapsedTimeInDays" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="ElapsedTimeInHours" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="ElapsedTimeInMinutes" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="OriginalActor" nillable="true" minOccurs="0" type="ens:sObject"/>
                        <element name="OriginalActorId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ProcessInstance" nillable="true" minOccurs="0" type="ens:ProcessInstance"/>
                        <element name="ProcessInstanceId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="StepNodeId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="StepStatus" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="ProcessInstanceWorkitem">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="Actor" nillable="true" minOccurs="0" type="ens:sObject"/>
                        <element name="ActorId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="ElapsedTimeInDays" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="ElapsedTimeInHours" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="ElapsedTimeInMinutes" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="OriginalActor" nillable="true" minOccurs="0" type="ens:sObject"/>
                        <element name="OriginalActorId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ProcessInstance" nillable="true" minOccurs="0" type="ens:ProcessInstance"/>
                        <element name="ProcessInstanceId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="ProcessNode">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="Description" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="DeveloperName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ProcessDefinition" nillable="true" minOccurs="0" type="ens:ProcessDefinition"/>
                        <element name="ProcessDefinitionId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="Product2">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="ActivityHistories" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Assets" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="AttachedContentDocuments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Attachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CombinedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Description" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="DisplayUrl" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Emails" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Events" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ExternalDataSourceId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ExternalId" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Family" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="FeedSubscriptionsForEntity" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Feeds" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Histories" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="IsActive" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastReferencedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastViewedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LookedUpFromActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Notes" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="NotesAndAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="OpenActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="PricebookEntries" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessInstances" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessSteps" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProductCode" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="QuantityUnitOfMeasure" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="StockKeepingUnit" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Tasks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="Product2Feed">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="Body" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CommentCount" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:sObject"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="FeedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedComments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedLikes" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedSignals" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedTrackedChanges" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="InsertedBy" nillable="true" minOccurs="0" type="ens:sObject"/>
                        <element name="InsertedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsRichText" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LikeCount" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="LinkUrl" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Parent" nillable="true" minOccurs="0" type="ens:Product2"/>
                        <element name="ParentId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="RelatedRecordId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Title" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Type" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="Product2History">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:sObject"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Field" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="NewValue" nillable="true" minOccurs="0" type="xsd:anyType"/>
                        <element name="OldValue" nillable="true" minOccurs="0" type="xsd:anyType"/>
                        <element name="Product2" nillable="true" minOccurs="0" type="ens:Product2"/>
                        <element name="Product2Id" nillable="true" minOccurs="0" type="tns:ID"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="Profile">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Description" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastReferencedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastViewedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="PermissionsAccessCMC" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsActivateContract" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsAddDirectMessageMembers" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsAllowLightningLogin" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsAllowUniversalSearch" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsAllowViewEditConvertedLeads" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsAllowViewKnowledge" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsApiEnabled" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsAssignPermissionSets" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsAssignTopics" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsAuthorApex" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsBulkApiHardDelete" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsBulkMacrosAllowed" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsCampaignInfluence2" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsCanApproveFeedPost" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsCanInsertFeedSystemFields" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsCanUseNewDashboardBuilder" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsCanVerifyComment" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsChatterComposeUiCodesnippet" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsChatterEditOwnPost" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsChatterEditOwnRecordPost" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsChatterFileLink" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsChatterForSharePoint" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsChatterInternalUser" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsChatterInviteExternalUsers" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsChatterOwnGroups" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsConfigCustomRecs" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsConnectOrgToEnvironmentHub" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsContentAdministrator" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsContentWorkspaces" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsConvertLeads" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsCreateCustomizeFilters" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsCreateMultiforce" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsCreateTopics" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsCreateWorkspaces" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsCustomMobileAppsAccess" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsCustomSidebarOnAllPages" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsCustomizeApplication" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsDelegatedTwoFactor" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsDeleteActivatedContract" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsDeleteTopics" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsDistributeFromPersWksp" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsEditBrandTemplates" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsEditCaseComments" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsEditEvent" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsEditHtmlTemplates" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsEditKnowledge" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsEditOppLineItemUnitPrice" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsEditPublicDocuments" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsEditPublicFilters" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsEditPublicTemplates" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsEditReadonlyFields" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsEditReports" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsEditTask" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsEditTopics" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsEmailAdministration" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsEmailMass" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsEmailSingle" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsEmailTemplateManagement" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsEnableCommunityAppLauncher" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsEnableNotifications" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsExportReport" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsFeedPinning" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsFlowUFLRequired" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsForceTwoFactor" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsGovernNetworks" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsHideReadByList" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsIdentityConnect" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsIdentityEnabled" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsImportCustomObjects" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsImportLeads" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsImportPersonal" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsInstallMultiforce" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsIotUser" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsLightningConsoleAllowedForUser" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsLightningExperienceUser" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsListEmailSend" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsManageAnalyticSnapshots" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsManageAuthProviders" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsManageBusinessHourHolidays" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsManageCallCenters" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsManageCases" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsManageCategories" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsManageCertificates" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsManageChatterMessages" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsManageContentPermissions" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsManageContentProperties" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsManageContentTypes" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsManageCustomPermissions" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsManageCustomReportTypes" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsManageDashboards" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsManageDataCategories" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsManageDataIntegrations" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsManageDynamicDashboards" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsManageEmailClientConfig" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsManageExchangeConfig" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsManageHealthCheck" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsManageInteraction" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsManageInternalUsers" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsManageIpAddresses" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsManageKnowledge" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsManageKnowledgeImportExport" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsManageLeads" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsManageLoginAccessPolicies" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsManageMobile" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsManageNetworks" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsManagePasswordPolicies" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsManageProfilesPermissionsets" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsManagePvtRptsAndDashbds" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsManageRemoteAccess" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsManageRoles" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsManageSearchPromotionRules" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsManageSessionPermissionSets" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsManageSharing" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsManageSolutions" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsManageSynonyms" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsManageTwoFactor" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsManageUnlistedGroups" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsManageUsers" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsMassInlineEdit" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsMergeTopics" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsModerateChatter" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsModerateNetworkUsers" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsModifyAllData" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsModifySecureAgents" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsNewReportBuilder" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsPackaging2" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsPasswordNeverExpires" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsPreventClassicExperience" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsPublishMultiforce" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsRemoveDirectMessageMembers" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsResetPasswords" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsRunFlow" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsRunReports" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsSalesConsole" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsScheduleReports" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsSelectFilesFromSalesforce" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsSendAnnouncementEmails" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsSendSitRequests" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsShareInternalArticles" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsShowCompanyNameAsUserBadge" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsSolutionImport" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsSubmitMacrosAllowed" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsSubscribeToLightningReports" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsTransferAnyCase" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsTransferAnyEntity" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsTransferAnyLead" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsTwoFactorApi" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsUseTeamReassignWizards" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsUseWebLink" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsViewAllActivities" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsViewAllData" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsViewAllUsers" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsViewContent" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsViewDataAssessment" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsViewDataCategories" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsViewEncryptedData" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsViewEventLogFiles" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsViewHealthCheck" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsViewHelpLink" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsViewMyTeamsDashboards" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsViewSetup" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="UserLicense" nillable="true" minOccurs="0" type="ens:UserLicense"/>
                        <element name="UserLicenseId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="UserType" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Users" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="Publisher">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="DurableId" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="InstalledEntityDefinitions" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="InstalledFieldDefinitions" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="IsSalesforce" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MajorVersion" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="MinorVersion" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="NamespacePrefix" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="PushTopic">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="ApiVersion" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Description" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsActive" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="NotifyForFields" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="NotifyForOperationCreate" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="NotifyForOperationDelete" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="NotifyForOperationUndelete" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="NotifyForOperationUpdate" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="NotifyForOperations" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Query" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="QueueSobject">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="Queue" nillable="true" minOccurs="0" type="ens:Group"/>
                        <element name="QueueId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SobjectType" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="RecentlyViewed">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="Alias" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Email" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="FirstName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsActive" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="Language" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="LastName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="LastReferencedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastViewedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="NameOrAlias" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Phone" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Profile" nillable="true" minOccurs="0" type="ens:Profile"/>
                        <element name="ProfileId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="RecordType" nillable="true" minOccurs="0" type="ens:RecordType"/>
                        <element name="RecordTypeId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="Title" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Type" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="UserRole" nillable="true" minOccurs="0" type="ens:UserRole"/>
                        <element name="UserRoleId" nillable="true" minOccurs="0" type="tns:ID"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="RecordType">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="BusinessProcessId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Description" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="DeveloperName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsActive" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="NamespacePrefix" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SobjectType" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="RelationshipDomain">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="ChildSobject" nillable="true" minOccurs="0" type="ens:EntityDefinition"/>
                        <element name="ChildSobjectId" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="DurableId" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Field" nillable="true" minOccurs="0" type="ens:FieldDefinition"/>
                        <element name="FieldId" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsCascadeDelete" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsDeprecatedAndHidden" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsRestrictedDelete" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="JunctionIdListNames" nillable="true" minOccurs="0" type="tns:JunctionIdListNames"/>
                        <element name="ParentSobject" nillable="true" minOccurs="0" type="ens:EntityDefinition"/>
                        <element name="ParentSobjectId" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="RelationshipInfo" nillable="true" minOccurs="0" type="ens:RelationshipInfo"/>
                        <element name="RelationshipInfoId" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="RelationshipName" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="RelationshipInfo">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="ChildSobject" nillable="true" minOccurs="0" type="ens:EntityDefinition"/>
                        <element name="ChildSobjectId" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="DurableId" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Field" nillable="true" minOccurs="0" type="ens:FieldDefinition"/>
                        <element name="FieldId" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsCascadeDelete" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsDeprecatedAndHidden" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsRestrictedDelete" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="JunctionIdListNames" nillable="true" minOccurs="0" type="tns:JunctionIdListNames"/>
                        <element name="RelationshipDomains" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="Report">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AttachedContentDocuments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CombinedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Description" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="DeveloperName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="FeedSubscriptionsForEntity" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Feeds" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FolderName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Format" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastReferencedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastRunDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastViewedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="NamespacePrefix" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Owner" nillable="true" minOccurs="0" type="ens:sObject"/>
                        <element name="OwnerId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="ReportFeed">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="Body" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CommentCount" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:sObject"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="FeedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedComments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedLikes" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedSignals" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedTrackedChanges" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="InsertedBy" nillable="true" minOccurs="0" type="ens:sObject"/>
                        <element name="InsertedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsRichText" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LikeCount" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="LinkUrl" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Parent" nillable="true" minOccurs="0" type="ens:Report"/>
                        <element name="ParentId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="RelatedRecordId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Title" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Type" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="SamlSsoConfig">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AttributeFormat" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="AttributeName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Audience" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DeveloperName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ErrorUrl" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ExecutionUser" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="ExecutionUserId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="IdentityLocation" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IdentityMapping" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="Issuer" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Language" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LoginUrl" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="LogoutUrl" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="MasterLabel" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="NamespacePrefix" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="OptionsSpInitBinding" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="OptionsUserProvisioning" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="RequestSignatureMethod" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SamlJitHandler" nillable="true" minOccurs="0" type="ens:ApexClass"/>
                        <element name="SamlJitHandlerId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SingleLogoutBinding" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SingleLogoutUrl" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="ValidationCert" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Version" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="Scontrol">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="Binary" nillable="true" minOccurs="0" type="xsd:base64Binary"/>
                        <element name="BodyLength" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="ContentSource" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Description" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="DeveloperName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="EncodingKey" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Filename" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="HtmlWrapper" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="NamespacePrefix" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SupportsCaching" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="SearchActivity">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AvgNumResults" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="ClickRank" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="ClickedRecordName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CountQueries" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="CountUsers" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="KbChannel" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Period" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="QueryDate" nillable="true" minOccurs="0" type="xsd:date"/>
                        <element name="QueryLanguage" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SearchTerm" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="SearchLayout">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="ButtonsDisplayed" nillable="true" minOccurs="0" type="tns:SearchLayoutButtonsDisplayed"/>
                        <element name="DurableId" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="EntityDefinition" nillable="true" minOccurs="0" type="ens:EntityDefinition"/>
                        <element name="EntityDefinitionId" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="FieldsDisplayed" nillable="true" minOccurs="0" type="tns:SearchLayoutFieldsDisplayed"/>
                        <element name="Label" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LayoutType" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="SearchPromotionRule">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Query" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="SecureAgent">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AgentKey" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DeveloperName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="Language" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="MasterLabel" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Priority" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="ProxyUser" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="ProxyUserId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SecureAgentPlugins" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="SecureAgentsCluster" nillable="true" minOccurs="0" type="ens:SecureAgentsCluster"/>
                        <element name="SecureAgentsClusterId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="SecureAgentPlugin">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="PluginName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="PluginType" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="RequestedVersion" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SecureAgent" nillable="true" minOccurs="0" type="ens:SecureAgent"/>
                        <element name="SecureAgentId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SecureAgentPluginProperties" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="UpdateWindowEnd" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="UpdateWindowStart" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="SecureAgentPluginProperty">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="PropertyName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="PropertyValue" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SecureAgentPlugin" nillable="true" minOccurs="0" type="ens:SecureAgentPlugin"/>
                        <element name="SecureAgentPluginId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="SecureAgentsCluster">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Description" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="DeveloperName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="Language" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="MasterLabel" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="SecurityCustomBaseline">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="Baseline" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DeveloperName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsDefault" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="Language" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="MasterLabel" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="NamespacePrefix" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="SessionPermSetActivation">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AuthSession" nillable="true" minOccurs="0" type="ens:AuthSession"/>
                        <element name="AuthSessionId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Description" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="PermissionSet" nillable="true" minOccurs="0" type="ens:PermissionSet"/>
                        <element name="PermissionSetId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="User" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="UserId" nillable="true" minOccurs="0" type="tns:ID"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="SetupAuditTrail">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="Action" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DelegateUser" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Display" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ResponsibleNamespacePrefix" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Section" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="SetupEntityAccess">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="Parent" nillable="true" minOccurs="0" type="ens:PermissionSet"/>
                        <element name="ParentId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SetupEntityId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SetupEntityType" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="Site">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="Admin" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="AdminId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="AnalyticsTrackingCode" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="AttachedContentDocuments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ClickjackProtectionLevel" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CombinedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DailyBandwidthLimit" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="DailyBandwidthUsed" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="DailyRequestTimeLimit" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="DailyRequestTimeUsed" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="Description" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="FeedSubscriptionsForEntity" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Feeds" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="GuestUser" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="GuestUserId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="Histories" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="MasterLabel" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="MonthlyPageViewsEntitlement" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="OptionsAllowGuestSupportApi" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="OptionsAllowHomePage" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="OptionsAllowStandardAnswersPages" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="OptionsAllowStandardIdeasPages" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="OptionsAllowStandardLookups" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="OptionsAllowStandardPortalPages" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="OptionsAllowStandardSearch" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="OptionsBrowserXssProtection" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="OptionsContentSniffingProtection" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="OptionsCspUpgradeInsecureRequests" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="OptionsEnableFeeds" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="OptionsReferrerPolicyOriginWhenCrossOrigin" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="OptionsRequireHttps" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="SiteDomainPaths" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="SiteType" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Status" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Subdomain" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="UrlPathPrefix" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="SiteFeed">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="Body" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CommentCount" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:sObject"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="FeedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedComments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedLikes" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedSignals" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedTrackedChanges" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="InsertedBy" nillable="true" minOccurs="0" type="ens:sObject"/>
                        <element name="InsertedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsRichText" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LikeCount" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="LinkUrl" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Parent" nillable="true" minOccurs="0" type="ens:Site"/>
                        <element name="ParentId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="RelatedRecordId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Title" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Type" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="SiteHistory">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:sObject"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Field" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="NewValue" nillable="true" minOccurs="0" type="xsd:anyType"/>
                        <element name="OldValue" nillable="true" minOccurs="0" type="xsd:anyType"/>
                        <element name="Site" nillable="true" minOccurs="0" type="ens:Site"/>
                        <element name="SiteId" nillable="true" minOccurs="0" type="tns:ID"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="Solution">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="ActivityHistories" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="AttachedContentDocuments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Attachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CaseSolutions" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CombinedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Emails" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Events" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedSubscriptionsForEntity" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Feeds" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Histories" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsHtml" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsPublished" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsPublishedInPublicKb" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsReviewed" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastReferencedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastViewedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LookedUpFromActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="OpenActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Owner" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="OwnerId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ProcessInstances" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessSteps" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="SolutionName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SolutionNote" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SolutionNumber" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Status" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Tasks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="TimesUsed" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="TopicAssignments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        <element name="Votes" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="SolutionFeed">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="Body" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CommentCount" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:sObject"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="FeedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedComments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedLikes" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedSignals" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedTrackedChanges" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="InsertedBy" nillable="true" minOccurs="0" type="ens:sObject"/>
                        <element name="InsertedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsRichText" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LikeCount" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="LinkUrl" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Parent" nillable="true" minOccurs="0" type="ens:Solution"/>
                        <element name="ParentId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="RelatedRecordId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Title" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Type" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="SolutionHistory">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:sObject"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Field" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="NewValue" nillable="true" minOccurs="0" type="xsd:anyType"/>
                        <element name="OldValue" nillable="true" minOccurs="0" type="xsd:anyType"/>
                        <element name="Solution" nillable="true" minOccurs="0" type="ens:Solution"/>
                        <element name="SolutionId" nillable="true" minOccurs="0" type="tns:ID"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="SolutionStatus">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="ApiName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="IsDefault" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsReviewed" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="MasterLabel" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SortOrder" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="Stamp">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="CustomBrands" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Description" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="MasterLabel" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Parent" nillable="true" minOccurs="0" type="ens:sObject"/>
                        <element name="ParentId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="StampAssignment">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Stamp" nillable="true" minOccurs="0" type="ens:Stamp"/>
                        <element name="StampId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="Subject" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="SubjectId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="StaticResource">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="Body" nillable="true" minOccurs="0" type="xsd:base64Binary"/>
                        <element name="BodyLength" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="CacheControl" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ContentType" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Description" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="NamespacePrefix" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="StreamingChannel">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Description" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsDynamic" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastReferencedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastViewedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Owner" nillable="true" minOccurs="0" type="ens:sObject"/>
                        <element name="OwnerId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ProcessInstances" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessSteps" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="StreamingChannelShare">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AccessLevel" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Parent" nillable="true" minOccurs="0" type="ens:StreamingChannel"/>
                        <element name="ParentId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="RowCause" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="UserOrGroup" nillable="true" minOccurs="0" type="ens:sObject"/>
                        <element name="UserOrGroupId" nillable="true" minOccurs="0" type="tns:ID"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="Task">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="Account" nillable="true" minOccurs="0" type="ens:Account"/>
                        <element name="AccountId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ActivityDate" nillable="true" minOccurs="0" type="xsd:date"/>
                        <element name="AttachedContentDocuments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Attachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CallDisposition" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CallDurationInSeconds" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="CallObject" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CallType" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CombinedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Description" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="FeedSubscriptionsForEntity" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Feeds" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="IsArchived" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsClosed" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsHighPriority" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsRecurrence" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsReminderSet" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="ListEmailActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Owner" nillable="true" minOccurs="0" type="ens:sObject"/>
                        <element name="OwnerId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="Priority" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="RecurrenceActivityId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="RecurrenceDayOfMonth" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="RecurrenceDayOfWeekMask" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="RecurrenceEndDateOnly" nillable="true" minOccurs="0" type="xsd:date"/>
                        <element name="RecurrenceInstance" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="RecurrenceInterval" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="RecurrenceMonthOfYear" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="RecurrenceRegeneratedType" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="RecurrenceStartDateOnly" nillable="true" minOccurs="0" type="xsd:date"/>
                        <element name="RecurrenceTimeZoneSidKey" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="RecurrenceType" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="RecurringTasks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ReminderDateTime" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Status" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Subject" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TaskSubtype" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TopicAssignments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="What" nillable="true" minOccurs="0" type="ens:sObject"/>
                        <element name="WhatId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="Who" nillable="true" minOccurs="0" type="ens:sObject"/>
                        <element name="WhoId" nillable="true" minOccurs="0" type="tns:ID"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="TaskFeed">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="Body" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CommentCount" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:sObject"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="FeedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedComments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedLikes" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedSignals" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedTrackedChanges" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="InsertedBy" nillable="true" minOccurs="0" type="ens:sObject"/>
                        <element name="InsertedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsRichText" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LikeCount" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="LinkUrl" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Parent" nillable="true" minOccurs="0" type="ens:Task"/>
                        <element name="ParentId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="RelatedRecordId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Title" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Type" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="TaskPriority">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="ApiName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="IsDefault" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsHighPriority" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="MasterLabel" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SortOrder" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="TaskStatus">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="ApiName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="IsClosed" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsDefault" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="MasterLabel" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SortOrder" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="TenantUsageEntitlement">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AmountUsed" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="CurrentAmountAllowed" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="EndDate" nillable="true" minOccurs="0" type="xsd:date"/>
                        <element name="Frequency" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="HasRollover" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsPersistentResource" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="MasterLabel" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="OverageGrace" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="ResourceGroupKey" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Setting" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="StartDate" nillable="true" minOccurs="0" type="xsd:date"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="UsageDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="TestSuiteMembership">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="ApexClass" nillable="true" minOccurs="0" type="ens:ApexClass"/>
                        <element name="ApexClassId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ApexTestSuite" nillable="true" minOccurs="0" type="ens:ApexTestSuite"/>
                        <element name="ApexTestSuiteId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="ThirdPartyAccountLink">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="Handle" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsNotSsoUsable" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="Provider" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="RemoteIdentifier" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SsoProvider" nillable="true" minOccurs="0" type="ens:AuthProvider"/>
                        <element name="SsoProviderId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SsoProviderName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ThirdPartyAccountLinkKey" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="User" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="UserId" nillable="true" minOccurs="0" type="tns:ID"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="TodayGoal">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Owner" nillable="true" minOccurs="0" type="ens:sObject"/>
                        <element name="OwnerId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="User" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="UserId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        <element name="Value" nillable="true" minOccurs="0" type="xsd:double"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="TodayGoalShare">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AccessLevel" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Parent" nillable="true" minOccurs="0" type="ens:TodayGoal"/>
                        <element name="ParentId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="RowCause" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="UserOrGroup" nillable="true" minOccurs="0" type="ens:sObject"/>
                        <element name="UserOrGroupId" nillable="true" minOccurs="0" type="tns:ID"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="Topic">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="CustomBrands" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Description" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="FeedSubscriptionsForEntity" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Feeds" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TalkingAbout" nillable="true" minOccurs="0" type="xsd:int"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="TopicAssignment">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Entity" nillable="true" minOccurs="0" type="ens:Contract"/>
                        <element name="EntityId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="EntityKeyPrefix" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="EntityType" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Topic" nillable="true" minOccurs="0" type="ens:Topic"/>
                        <element name="TopicId" nillable="true" minOccurs="0" type="tns:ID"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="TopicFeed">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="Body" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CommentCount" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:sObject"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="FeedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedComments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedLikes" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedSignals" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedTrackedChanges" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="InsertedBy" nillable="true" minOccurs="0" type="ens:sObject"/>
                        <element name="InsertedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsRichText" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LikeCount" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="LinkUrl" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Parent" nillable="true" minOccurs="0" type="ens:Topic"/>
                        <element name="ParentId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="RelatedRecordId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Title" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Type" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="UndecidedEventRelation">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Event" nillable="true" minOccurs="0" type="ens:Event"/>
                        <element name="EventId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Relation" nillable="true" minOccurs="0" type="ens:sObject"/>
                        <element name="RelationId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="RespondedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Response" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Type" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="User">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AboutMe" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="AcceptedEventRelations" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Account" nillable="true" minOccurs="0" type="ens:Account"/>
                        <element name="AccountId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="Address" nillable="true" minOccurs="0" type="tns:address"/>
                        <element name="Alias" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="AttachedContentDocuments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="BadgeText" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="BannerPhotoUrl" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CallCenterId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="City" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CombinedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CommunityNickname" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CompanyName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Contact" nillable="true" minOccurs="0" type="ens:Contact"/>
                        <element name="ContactId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContractsSigned" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Country" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DeclinedEventRelations" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="DefaultGroupNotificationFrequency" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="DelegatedApproverId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="DelegatedUsers" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Department" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="DigestFrequency" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Division" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Email" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="EmailEncodingKey" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="EmailMessageRelations" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="EmailPreferencesAutoBcc" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="EmailPreferencesAutoBccStayInTouch" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="EmailPreferencesStayInTouchReminder" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="EmployeeNumber" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="EventRelations" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Extension" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ExternalDataUserAuths" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Fax" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="FederationIdentifier" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="FeedSubscriptions" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedSubscriptionsForEntity" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Feeds" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FirstName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ForecastEnabled" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="FullPhotoUrl" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="GeocodeAccuracy" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="GroupMembershipRequests" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="GroupMemberships" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="InstalledMobileApps" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="IsActive" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsExtIndicatorVisible" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsProfilePhotoActive" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LanguageLocaleKey" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="LastLoginDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="LastPasswordChangeDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastReferencedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastViewedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Latitude" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="LocaleSidKey" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Longitude" nillable="true" minOccurs="0" type="xsd:double"/>
                        <element name="ManagedUsers" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Manager" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="ManagerId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="MediumBannerPhotoUrl" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="MediumPhotoUrl" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="MobilePhone" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="OfflinePdaTrialExpirationDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="OfflineTrialExpirationDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="OutOfOfficeMessage" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="OutgoingEmailRelations" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="OwnedContentDocuments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="PermissionSetAssignments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="PermissionSetLicenseAssignments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Phone" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="PostalCode" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Profile" nillable="true" minOccurs="0" type="ens:Profile"/>
                        <element name="ProfileId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ReceivesAdminInfoEmails" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="ReceivesInfoEmails" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="SenderEmail" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SenderName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SessionPermSetActivations" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Shares" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Signature" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SmallBannerPhotoUrl" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SmallPhotoUrl" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="State" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="StayInTouchNote" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="StayInTouchSignature" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="StayInTouchSubject" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Street" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TimeZoneSidKey" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Title" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="UndecidedEventRelations" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="UserEntityAccessRights" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="UserFieldAccessRights" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="UserPermissionsCallCenterAutoLogin" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="UserPermissionsChatterAnswersUser" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="UserPermissionsInteractionUser" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="UserPermissionsKnowledgeUser" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="UserPermissionsMarketingUser" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="UserPermissionsMobileUser" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="UserPermissionsOfflineUser" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="UserPermissionsSFContentUser" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="UserPermissionsSiteforceContributorUser" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="UserPermissionsSiteforcePublisherUser" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="UserPermissionsSupportUser" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="UserPreferences" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="UserPreferencesActivityRemindersPopup" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="UserPreferencesApexPagesDeveloperMode" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="UserPreferencesCacheDiagnostics" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="UserPreferencesCreateLEXAppsWTShown" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="UserPreferencesDisCommentAfterLikeEmail" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="UserPreferencesDisMentionsCommentEmail" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="UserPreferencesDisProfPostCommentEmail" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="UserPreferencesDisableAllFeedsEmail" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="UserPreferencesDisableBookmarkEmail" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="UserPreferencesDisableChangeCommentEmail" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="UserPreferencesDisableEndorsementEmail" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="UserPreferencesDisableFileShareNotificationsForApi" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="UserPreferencesDisableFollowersEmail" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="UserPreferencesDisableLaterCommentEmail" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="UserPreferencesDisableLikeEmail" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="UserPreferencesDisableMentionsPostEmail" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="UserPreferencesDisableMessageEmail" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="UserPreferencesDisableProfilePostEmail" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="UserPreferencesDisableSharePostEmail" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="UserPreferencesEnableAutoSubForFeeds" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="UserPreferencesEventRemindersCheckboxDefault" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="UserPreferencesExcludeMailAppAttachments" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="UserPreferencesFavoritesShowTopFavorites" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="UserPreferencesFavoritesWTShown" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="UserPreferencesGlobalNavBarWTShown" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="UserPreferencesGlobalNavGridMenuWTShown" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="UserPreferencesHideBiggerPhotoCallout" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="UserPreferencesHideCSNDesktopTask" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="UserPreferencesHideCSNGetChatterMobileTask" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="UserPreferencesHideChatterOnboardingSplash" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="UserPreferencesHideEndUserOnboardingAssistantModal" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="UserPreferencesHideLightningMigrationModal" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="UserPreferencesHideS1BrowserUI" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="UserPreferencesHideSecondChatterOnboardingSplash" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="UserPreferencesHideSfxWelcomeMat" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="UserPreferencesLightningExperiencePreferred" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="UserPreferencesPathAssistantCollapsed" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="UserPreferencesPreviewLightning" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="UserPreferencesRecordHomeReservedWTShown" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="UserPreferencesRecordHomeSectionCollapseWTShown" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="UserPreferencesReminderSoundOff" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="UserPreferencesShowCityToExternalUsers" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="UserPreferencesShowCityToGuestUsers" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="UserPreferencesShowCountryToExternalUsers" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="UserPreferencesShowCountryToGuestUsers" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="UserPreferencesShowEmailToExternalUsers" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="UserPreferencesShowEmailToGuestUsers" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="UserPreferencesShowFaxToExternalUsers" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="UserPreferencesShowFaxToGuestUsers" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="UserPreferencesShowManagerToExternalUsers" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="UserPreferencesShowManagerToGuestUsers" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="UserPreferencesShowMobilePhoneToExternalUsers" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="UserPreferencesShowMobilePhoneToGuestUsers" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="UserPreferencesShowPostalCodeToExternalUsers" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="UserPreferencesShowPostalCodeToGuestUsers" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="UserPreferencesShowProfilePicToGuestUsers" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="UserPreferencesShowStateToExternalUsers" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="UserPreferencesShowStateToGuestUsers" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="UserPreferencesShowStreetAddressToExternalUsers" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="UserPreferencesShowStreetAddressToGuestUsers" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="UserPreferencesShowTitleToExternalUsers" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="UserPreferencesShowTitleToGuestUsers" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="UserPreferencesShowWorkPhoneToExternalUsers" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="UserPreferencesShowWorkPhoneToGuestUsers" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="UserPreferencesSortFeedByComment" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="UserPreferencesTaskRemindersCheckboxDefault" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="UserRole" nillable="true" minOccurs="0" type="ens:UserRole"/>
                        <element name="UserRoleId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="UserSites" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="UserType" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Username" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="UserAppInfo">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="FormFactor" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="User" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="UserId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="UserAppMenuCustomization">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="Application" nillable="true" minOccurs="0" type="ens:sObject"/>
                        <element name="ApplicationId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Owner" nillable="true" minOccurs="0" type="ens:sObject"/>
                        <element name="OwnerId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SortOrder" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="UserAppMenuCustomizationShare">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AccessLevel" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Parent" nillable="true" minOccurs="0" type="ens:UserAppMenuCustomization"/>
                        <element name="ParentId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="RowCause" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="UserOrGroup" nillable="true" minOccurs="0" type="ens:sObject"/>
                        <element name="UserOrGroupId" nillable="true" minOccurs="0" type="tns:ID"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="UserAppMenuItem">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="AppMenuItemId" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ApplicationId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="Description" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IconUrl" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="InfoUrl" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsUsingAdminAuthorization" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsVisible" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="Label" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="LogoUrl" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="MobileStartUrl" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SortOrder" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="StartUrl" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Type" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="UserSortOrder" nillable="true" minOccurs="0" type="xsd:int"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="UserEntityAccess">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="DurableId" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="EntityDefinition" nillable="true" minOccurs="0" type="ens:EntityDefinition"/>
                        <element name="EntityDefinitionId" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsActivateable" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsCreatable" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsDeletable" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsEditable" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsFlsUpdatable" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsMergeable" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsReadable" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsUndeletable" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsUpdatable" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="User" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="UserId" nillable="true" minOccurs="0" type="tns:ID"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="UserFeed">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="Body" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CommentCount" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:sObject"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="FeedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedComments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedLikes" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedSignals" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedTrackedChanges" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="InsertedBy" nillable="true" minOccurs="0" type="ens:sObject"/>
                        <element name="InsertedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsRichText" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LikeCount" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="LinkUrl" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Parent" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="ParentId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="RelatedRecordId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Title" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Type" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="UserFieldAccess">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="DurableId" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="EntityDefinition" nillable="true" minOccurs="0" type="ens:EntityDefinition"/>
                        <element name="EntityDefinitionId" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="FieldDefinition" nillable="true" minOccurs="0" type="ens:FieldDefinition"/>
                        <element name="FieldDefinitionId" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="IsAccessible" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsCreatable" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsUpdatable" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="User" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="UserId" nillable="true" minOccurs="0" type="tns:ID"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="UserLicense">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LicenseDefinitionKey" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="MasterLabel" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="MonthlyLoginsEntitlement" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="MonthlyLoginsUsed" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Status" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TotalLicenses" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="UsedLicenses" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="UsedLicensesLastUpdated" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="userlicenses" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="UserListView">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastViewedChart" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ListView" nillable="true" minOccurs="0" type="ens:ListView"/>
                        <element name="ListViewId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SobjectType" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="User" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="UserId" nillable="true" minOccurs="0" type="tns:ID"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="UserListViewCriterion">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="ColumnName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Operation" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SortOrder" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="UserListView" nillable="true" minOccurs="0" type="ens:UserListView"/>
                        <element name="UserListViewId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="Value" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="UserLogin">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="IsFrozen" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsPasswordLocked" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="UserId" nillable="true" minOccurs="0" type="tns:ID"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="UserPackageLicense">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="PackageLicense" nillable="true" minOccurs="0" type="ens:PackageLicense"/>
                        <element name="PackageLicenseId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="UserId" nillable="true" minOccurs="0" type="tns:ID"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="UserPermissionAccess">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="LastCacheUpdate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="PermissionsAccessCMC" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsActivateContract" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsAddDirectMessageMembers" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsAllowLightningLogin" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsAllowUniversalSearch" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsAllowViewEditConvertedLeads" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsAllowViewKnowledge" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsApiEnabled" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsAssignPermissionSets" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsAssignTopics" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsAuthorApex" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsBulkApiHardDelete" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsBulkMacrosAllowed" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsCampaignInfluence2" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsCanApproveFeedPost" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsCanInsertFeedSystemFields" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsCanUseNewDashboardBuilder" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsCanVerifyComment" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsChatterComposeUiCodesnippet" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsChatterEditOwnPost" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsChatterEditOwnRecordPost" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsChatterFileLink" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsChatterForSharePoint" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsChatterInternalUser" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsChatterInviteExternalUsers" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsChatterOwnGroups" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsConfigCustomRecs" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsConnectOrgToEnvironmentHub" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsContentAdministrator" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsContentWorkspaces" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsConvertLeads" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsCreateCustomizeFilters" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsCreatePackaging" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsCreateTopics" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsCreateWorkspaces" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsCustomMobileAppsAccess" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsCustomSidebarOnAllPages" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsCustomizeApplication" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsDelegatedTwoFactor" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsDeleteActivatedContract" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsDeleteTopics" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsDistributeFromPersWksp" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsEditBrandTemplates" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsEditCaseComments" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsEditEvent" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsEditHtmlTemplates" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsEditKnowledge" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsEditOppLineItemUnitPrice" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsEditPublicDocuments" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsEditPublicFilters" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsEditPublicTemplates" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsEditReadonlyFields" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsEditReports" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsEditTask" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsEditTopics" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsEmailAdministration" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsEmailMass" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsEmailSingle" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsEmailTemplateManagement" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsEnableCommunityAppLauncher" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsEnableNotifications" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsExportReport" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsFeedPinning" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsFlowUFLRequired" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsForceTwoFactor" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsGovernNetworks" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsHideReadByList" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsIdentityConnect" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsIdentityEnabled" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsImportCustomObjects" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsImportLeads" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsImportPersonal" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsInstallPackaging" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsIotUser" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsLightningConsoleAllowedForUser" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsLightningExperienceUser" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsListEmailSend" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsManageAnalyticSnapshots" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsManageAuthProviders" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsManageBusinessHourHolidays" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsManageCallCenters" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsManageCases" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsManageCategories" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsManageCertificates" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsManageChatterMessages" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsManageContentPermissions" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsManageContentProperties" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsManageContentTypes" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsManageCustomPermissions" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsManageCustomReportTypes" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsManageDashboards" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsManageDataCategories" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsManageDataIntegrations" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsManageDynamicDashboards" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsManageEmailClientConfig" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsManageExchangeConfig" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsManageHealthCheck" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsManageInteraction" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsManageInternalUsers" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsManageIpAddresses" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsManageKnowledge" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsManageKnowledgeImportExport" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsManageLeads" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsManageLoginAccessPolicies" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsManageMobile" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsManageNetworks" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsManagePasswordPolicies" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsManageProfilesPermissionsets" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsManagePvtRptsAndDashbds" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsManageRemoteAccess" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsManageRoles" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsManageSearchPromotionRules" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsManageSessionPermissionSets" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsManageSharing" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsManageSolutions" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsManageSynonyms" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsManageTwoFactor" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsManageUnlistedGroups" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsManageUsers" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsMassInlineEdit" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsMergeTopics" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsModerateChatter" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsModerateNetworkUsers" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsModifyAllData" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsModifySecureAgents" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsNewReportBuilder" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsPackaging2" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsPasswordNeverExpires" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsPreventClassicExperience" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsPublishPackaging" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsRemoveDirectMessageMembers" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsResetPasswords" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsRunFlow" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsRunReports" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsSalesConsole" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsScheduleReports" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsSelectFilesFromSalesforce" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsSendAnnouncementEmails" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsSendSitRequests" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsShareInternalArticles" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsShowCompanyNameAsUserBadge" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsSolutionImport" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsSubmitMacrosAllowed" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsSubscribeToLightningReports" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsTransferAnyCase" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsTransferAnyEntity" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsTransferAnyLead" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsTwoFactorApi" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsUseTeamReassignWizards" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsUseWebLink" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsViewAllActivities" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsViewAllData" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsViewAllUsers" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsViewContent" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsViewDataAssessment" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsViewDataCategories" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsViewEncryptedData" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsViewEventLogFiles" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsViewHealthCheck" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsViewHelpLink" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsViewMyTeamsDashboards" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="PermissionsViewSetup" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="UserPreference">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="Preference" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="UserId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="Value" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="UserRecordAccess">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="HasAllAccess" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="HasDeleteAccess" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="HasEditAccess" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="HasReadAccess" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="HasTransferAccess" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="MaxAccessLevel" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="RecordId" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="UserId" nillable="true" minOccurs="0" type="tns:ID"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="UserRole">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CaseAccessForAccountOwner" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ContactAccessForAccountOwner" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="DeveloperName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ForecastUserId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="MayForecastManagerShare" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="OpportunityAccessForAccountOwner" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="ParentRoleId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="PortalAccountId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="PortalAccountOwnerId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="PortalType" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="RollupDescription" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Users" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="UserShare">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="IsActive" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="RowCause" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="User" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="UserAccessLevel" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="UserId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="UserOrGroup" nillable="true" minOccurs="0" type="ens:sObject"/>
                        <element name="UserOrGroupId" nillable="true" minOccurs="0" type="tns:ID"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="VerificationHistory">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="Activity" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="EventGroup" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LoginGeo" nillable="true" minOccurs="0" type="ens:LoginGeo"/>
                        <element name="LoginGeoId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LoginHistory" nillable="true" minOccurs="0" type="ens:LoginHistory"/>
                        <element name="LoginHistoryId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="Policy" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Remarks" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Resource" nillable="true" minOccurs="0" type="ens:ConnectedApplication"/>
                        <element name="ResourceId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SourceIp" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Status" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="User" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="UserId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="VerificationMethod" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="VerificationTime" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="VisualforceAccessMetrics">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="ApexPage" nillable="true" minOccurs="0" type="ens:ApexPage"/>
                        <element name="ApexPageId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="DailyPageViewCount" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="MetricsDate" nillable="true" minOccurs="0" type="xsd:date"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="Vote">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Parent" nillable="true" minOccurs="0" type="ens:sObject"/>
                        <element name="ParentId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Type" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="WaveCompatibilityCheckItem">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Payload" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="TaskName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TaskResult" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TemplateApiName" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="TemplateVersion" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="WebLink">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Description" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="DisplayType" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="EncodingKey" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="HasMenubar" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="HasScrollbars" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="HasToolbar" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="Height" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="IsProtected" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsResizable" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LinkType" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="MasterLabel" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="NamespacePrefix" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="OpenType" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="PageOrSobjectType" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Position" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="RequireRowSelection" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="ScontrolId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ShowsLocation" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="ShowsStatus" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Url" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Width" nillable="true" minOccurs="0" type="xsd:int"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="origami1__Language__Feed">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="Body" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="CommentCount" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:sObject"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="FeedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedComments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedLikes" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedSignals" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedTrackedChanges" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="InsertedBy" nillable="true" minOccurs="0" type="ens:sObject"/>
                        <element name="InsertedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="IsRichText" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LikeCount" nillable="true" minOccurs="0" type="xsd:int"/>
                        <element name="LinkUrl" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Parent" nillable="true" minOccurs="0" type="ens:origami1__Language__c"/>
                        <element name="ParentId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="RelatedRecordId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Title" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Type" nillable="true" minOccurs="0" type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="origami1__Language__c">
                <complexContent>
                    <extension base="ens:sObject">
                        <sequence>
                        <element name="ActivityHistories" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="AttachedContentDocuments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Attachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CombinedAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ContentDocumentLinks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="CreatedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="CreatedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="CreatedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="DuplicateRecordItems" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Emails" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Events" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="FeedSubscriptionsForEntity" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Feeds" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="IsDeleted" nillable="true" minOccurs="0" type="xsd:boolean"/>
                        <element name="LastActivityDate" nillable="true" minOccurs="0" type="xsd:date"/>
                        <element name="LastModifiedBy" nillable="true" minOccurs="0" type="ens:User"/>
                        <element name="LastModifiedById" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="LastModifiedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastReferencedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LastViewedDate" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="LookedUpFromActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Name" nillable="true" minOccurs="0" type="xsd:string"/>
                        <element name="Notes" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="NotesAndAttachments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="OpenActivities" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="Owner" nillable="true" minOccurs="0" type="ens:sObject"/>
                        <element name="OwnerId" nillable="true" minOccurs="0" type="tns:ID"/>
                        <element name="ProcessInstances" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="ProcessSteps" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="RecordAssociatedGroups" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="SystemModstamp" nillable="true" minOccurs="0" type="xsd:dateTime"/>
                        <element name="Tasks" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="TopicAssignments" nillable="true" minOccurs="0" type="tns:QueryResult"/>
                        <element name="UserRecordAccess" nillable="true" minOccurs="0" type="ens:UserRecordAccess"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>


        </schema>

        <schema elementFormDefault="qualified" xmlns="http://www.w3.org/2001/XMLSchema" targetNamespace="urn:enterprise.soap.sforce.com">

            <import namespace="urn:sobject.enterprise.soap.sforce.com"/>

            <!-- Our simple ID Type -->
            <simpleType name="ID">
                <restriction base="xsd:string">
                    <length value="18"/>
                    <pattern value='[a-zA-Z0-9]{18}'/>
                </restriction>
            </simpleType>

            

            <!-- Compound datatype: Address -->
            <complexType name="address">
                <complexContent>
                    <extension base="tns:location">
                        <sequence>
                            <element name="city" type="xsd:string"  nillable="true" />
                            <element name="country" type="xsd:string"  nillable="true" />
                            <element name="countryCode" type="xsd:string"  nillable="true" />
                            <element name="geocodeAccuracy" type="xsd:string"  nillable="true" />
                            <element name="postalCode" type="xsd:string"  nillable="true" />
                            <element name="state" type="xsd:string"  nillable="true" />
                            <element name="stateCode" type="xsd:string"  nillable="true" />
                            <element name="street" type="xsd:string"  nillable="true" />
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <!-- Compound datatype: Location -->
            <complexType name="location">
                <sequence>
                    <element name="latitude" type="xsd:double"  nillable="true" />
                    <element name="longitude" type="xsd:double"  nillable="true" />
                </sequence>
            </complexType>

            
            <simpleType name="QueryLocator">
                <restriction base="xsd:string"/>
            </simpleType>

            <!-- Shared Result Types -->
            <complexType name="QueryResult">
                <sequence>
                    <element name="done"         type="xsd:boolean"/>
                    <element name="queryLocator" type="tns:QueryLocator" nillable="true"/>
                    <element name="records"      type="ens:sObject" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
                    <element name="size"         type="xsd:int"/>
                </sequence>
            </complexType>



            <!-- Search Result -->
            <complexType name="SearchResult">
                <sequence>
                    
                        <element name="queryId" type="xsd:string" nillable="false" minOccurs="1" maxOccurs="1"/>
                    
                    <element name="searchRecords" minOccurs="0" maxOccurs="unbounded" type="tns:SearchRecord"/>
                    
                        <element name="searchResultsMetadata" type="tns:SearchResultsMetadata" nillable="true" minOccurs="0" maxOccurs="1"/>
                    
                    
                </sequence>
            </complexType>

            <complexType name="SearchRecord">
                <sequence>
                    <element name="record" type="ens:sObject"/>
                    
                    <element name="searchRecordMetadata" nillable="false" minOccurs="0" maxOccurs="1" type="tns:SearchRecordMetadata"/>
                    
                    
                    <element name="snippet" nillable="true" minOccurs="0" maxOccurs="1" type="tns:SearchSnippet"/>
                    
                </sequence>
            </complexType>

            <complexType name="SearchRecordMetadata">
                <sequence>
                    <element name="spellCorrected" minOccurs="1" maxOccurs="1" type="xsd:boolean"/>
                </sequence>
            </complexType>


            <complexType name="SearchSnippet">
                <sequence>
                    <element name="text" nillable="true" minOccurs="0" maxOccurs="1" type="xsd:string"/>
                    <element name="wholeFields" minOccurs="0" maxOccurs="unbounded" type="tns:NameValuePair"/>
                </sequence>
            </complexType>


            <complexType name="SearchResultsMetadata">
                <sequence>
                	
                		<element name="entityLabelMetadata" nillable="false" minOccurs="0" maxOccurs="unbounded" type="tns:LabelsSearchMetadata"/>
              		
              		
              			<element name="entityMetadata" nillable="false" minOccurs="0" maxOccurs="unbounded" type="tns:EntitySearchMetadata"/>
           			
       			</sequence>
   			</complexType>


			<complexType name="LabelsSearchMetadata">
				<sequence>
					<element name="entityFieldLabels" nillable="false" minOccurs="0" maxOccurs="unbounded" type="tns:NameValuePair"/>
					<element name="entityName" nillable="false" minOccurs="1" maxOccurs="1" type="xsd:string"/>
				</sequence>
			</complexType>


            <complexType name="EntitySearchMetadata">
                <sequence>
                	<element name="entityName" nillable="false" minOccurs="1" maxOccurs="1" type="xsd:string"/>
                	<element name="fieldMetadata" nillable="false" minOccurs="0" maxOccurs="unbounded" type="tns:FieldLevelSearchMetadata"/>
                    
                    <element name="spellCorrectionMetadata" nillable="false" minOccurs="0" maxOccurs="1" type="tns:EntitySpellCorrectionMetadata"/>
                    
                </sequence>
            </complexType>


            <complexType name="FieldLevelSearchMetadata">
                <sequence>
                	<element name="label" nillable="true" minOccurs="1" maxOccurs="1" type="xsd:string"/>
                	<element name="name" nillable="false" minOccurs="1" maxOccurs="1" type="xsd:string"/>
                	<element name="type" nillable="true" minOccurs="1" maxOccurs="1" type="xsd:string"/>
                </sequence>
            </complexType>


            <complexType name="EntitySpellCorrectionMetadata">
                <sequence>
                    <element name="correctedQuery" nillable="false" minOccurs="1" maxOccurs="1" type="xsd:string"/>
                    <element name="hasNonCorrectedResults" nillable="false" minOccurs="1" maxOccurs="1" type="xsd:boolean"/>
                </sequence>
            </complexType>


            <complexType name="RelationshipReferenceTo">
                <sequence>
                    <element name="referenceTo" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
                </sequence>
            </complexType>


            <complexType name="RecordTypesSupported">
                <sequence>
                    <element name="recordTypeInfos" minOccurs="0" maxOccurs="unbounded" type="tns:RecordTypeInfo"/>
                </sequence>
            </complexType>


            <complexType name="JunctionIdListNames">
                <sequence>
                    <element name="names" minOccurs="0" maxOccurs="unbounded" type="xsd:string"/>
                </sequence>
            </complexType>


           <complexType name="SearchLayoutButtonsDisplayed">
                <sequence>
                    <element name="applicable" type="xsd:boolean"/>
                    <element name="buttons" minOccurs="0" maxOccurs="unbounded" type="tns:SearchLayoutButton"/>
                </sequence>
           </complexType>

           <complexType name="SearchLayoutButton">
                <sequence>
                    <element name="apiName" type="xsd:string"/>
                    <element name="label" type="xsd:string"/>
                </sequence>
           </complexType>

           <complexType name="SearchLayoutFieldsDisplayed">
                <sequence>
                    <element name="applicable" type="xsd:boolean"/>
                    <element name="fields" minOccurs="0" maxOccurs="unbounded" type="tns:SearchLayoutField"/>
                </sequence>
           </complexType>

           <complexType name="SearchLayoutField">
                <sequence>
                    <element name="apiName" type="xsd:string"/>
                    <element name="label" type="xsd:string"/>
                    <element name="sortable" type="xsd:boolean"/>
                </sequence>
           </complexType>

            <!-- Common name-value pair -->
            <complexType name="NameValuePair">
                <sequence>
                    <element name="name" type="xsd:string" />
                    <element name="value" type="xsd:string" />
                </sequence>
            </complexType>

            <complexType name="NameObjectValuePair">
                <sequence>
                    <element name="name" type="xsd:string"/>
                    <element name="value" type="xsd:anyType" minOccurs="1" maxOccurs="unbounded"/>
                </sequence>
            </complexType>


            <!-- GetUpdated Result -->
            <complexType name="GetUpdatedResult">
                <sequence>
                    <element name="ids" minOccurs="0" maxOccurs="unbounded" type="tns:ID"/>
                    <element name="latestDateCovered" type="xsd:dateTime"/>
                    
                </sequence>
            </complexType>

            <!-- GetDeleted Result -->
            <complexType name="GetDeletedResult">
                <sequence>
                    <element name="deletedRecords" minOccurs="0" maxOccurs="unbounded" type="tns:DeletedRecord"/>
                    <element name="earliestDateAvailable" type="xsd:dateTime"/>
                    <element name="latestDateCovered" type="xsd:dateTime"/>
                    
                </sequence>
            </complexType>

            <complexType name="DeletedRecord">
                <sequence>
                    <element name="deletedDate" type="xsd:dateTime"/>
                    <element name="id"          type="tns:ID"/>
                </sequence>
            </complexType>


            <complexType name="GetServerTimestampResult">
                <sequence>
                    <element name="timestamp" type="xsd:dateTime"/>
                </sequence>
            </complexType>


            <!-- InvalidateSessions Result -->
            <complexType name="InvalidateSessionsResult">
                <sequence>
                    <element name="errors"  type="tns:Error" minOccurs="0" maxOccurs="unbounded"/>
                    <element name="success"   type="xsd:boolean"/>
                </sequence>
            </complexType>

            <complexType name="SetPasswordResult">
            </complexType>

            <complexType name="ChangeOwnPasswordResult">
            </complexType>

            <complexType name="ResetPasswordResult">
                <sequence>
                    <element name="password" type="xsd:string"/>
                </sequence>
            </complexType>

            <complexType name="GetUserInfoResult">
                <sequence>
                    <element name="accessibilityMode"          type="xsd:boolean"/>
                    <element name="chatterExternal"   type="xsd:boolean"/>
                    <element name="currencySymbol"             type="xsd:string" nillable="true"/>

                    <element name="orgAttachmentFileSizeLimit" type="xsd:int"/>
                    <element name="orgDefaultCurrencyIsoCode"  type="xsd:string" nillable="true"/>
                    <element name="orgDefaultCurrencyLocale"   type="xsd:string" nillable="true"/>
                    <element name="orgDisallowHtmlAttachments" type="xsd:boolean"/>
                    <element name="orgHasPersonAccounts"       type="xsd:boolean"/>
                    <element name="organizationId"             type="tns:ID"/>
                    <element name="organizationMultiCurrency"  type="xsd:boolean"/>
                    <element name="organizationName"           type="xsd:string"/>
                    <element name="profileId"                  type="tns:ID"/>
                    <element name="roleId"                     type="tns:ID" nillable="true"/>
                    <element name="sessionSecondsValid"        type="xsd:int"/>
                    <element name="userDefaultCurrencyIsoCode" type="xsd:string" nillable="true"/>
                    <element name="userEmail"                  type="xsd:string"/>
                    <element name="userFullName"               type="xsd:string"/>
                    <element name="userId"                     type="tns:ID"/>
                    <element name="userLanguage"               type="xsd:string"/>
                    <element name="userLocale"                 type="xsd:string"/>
                    <element name="userName"                   type="xsd:string"/>
                    <element name="userTimeZone"               type="xsd:string"/>
                    <element name="userType"                   type="xsd:string"/>
                    <element name="userUiSkin"                 type="xsd:string"/>
                </sequence>
            </complexType>

            <complexType name="LoginResult">
                <sequence>
                    <element name="metadataServerUrl" type="xsd:string" nillable="true"/>
                    <element name="passwordExpired"   type="xsd:boolean" />
                    <element name="sandbox"      type="xsd:boolean"/>
                    <element name="serverUrl"         type="xsd:string" nillable="true"/>
                    <element name="sessionId"         type="xsd:string" nillable="true"/>

                    <element name="userId"           type="tns:ID" nillable="true"/>
                    <element name="userInfo"         type="tns:GetUserInfoResult" minOccurs="0"/>
                </sequence>
            </complexType>


            <simpleType name="StatusCode">
                <restriction base="xsd:string">
                    <enumeration value="ALL_OR_NONE_OPERATION_ROLLED_BACK"/>
                    <enumeration value="ALREADY_IN_PROCESS"/>
                    <enumeration value="APEX_DATA_ACCESS_RESTRICTION"/>
                    <enumeration value="ASSIGNEE_TYPE_REQUIRED"/>
                    <enumeration value="AURA_COMPILE_ERROR"/>
                    <enumeration value="BAD_CUSTOM_ENTITY_PARENT_DOMAIN"/>
                    <enumeration value="BCC_NOT_ALLOWED_IF_BCC_COMPLIANCE_ENABLED"/>
                    <enumeration value="CANNOT_CASCADE_PRODUCT_ACTIVE"/>
                    <enumeration value="CANNOT_CHANGE_FIELD_TYPE_OF_APEX_REFERENCED_FIELD"/>
                    <enumeration value="CANNOT_CHANGE_FIELD_TYPE_OF_REFERENCED_FIELD"/>
                    <enumeration value="CANNOT_CREATE_ANOTHER_MANAGED_PACKAGE"/>
                    <enumeration value="CANNOT_DEACTIVATE_DIVISION"/>
                    <enumeration value="CANNOT_DELETE_GLOBAL_ACTION_LIST"/>
                    <enumeration value="CANNOT_DELETE_LAST_DATED_CONVERSION_RATE"/>
                    <enumeration value="CANNOT_DELETE_MANAGED_OBJECT"/>
                    <enumeration value="CANNOT_DISABLE_LAST_ADMIN"/>
                    <enumeration value="CANNOT_ENABLE_IP_RESTRICT_REQUESTS"/>
                    <enumeration value="CANNOT_EXECUTE_FLOW_TRIGGER"/>
                    <enumeration value="CANNOT_FREEZE_SELF"/>
                    <enumeration value="CANNOT_INSERT_UPDATE_ACTIVATE_ENTITY"/>
                    <enumeration value="CANNOT_MODIFY_MANAGED_OBJECT"/>
                    <enumeration value="CANNOT_PASSWORD_LOCKOUT"/>
                    <enumeration value="CANNOT_POST_TO_ARCHIVED_GROUP"/>
                    <enumeration value="CANNOT_RENAME_APEX_REFERENCED_FIELD"/>
                    <enumeration value="CANNOT_RENAME_APEX_REFERENCED_OBJECT"/>
                    <enumeration value="CANNOT_RENAME_REFERENCED_FIELD"/>
                    <enumeration value="CANNOT_RENAME_REFERENCED_OBJECT"/>
                    <enumeration value="CANNOT_REPARENT_RECORD"/>
                    <enumeration value="CANNOT_UPDATE_CONVERTED_LEAD"/>
                    <enumeration value="CANT_DISABLE_CORP_CURRENCY"/>
                    <enumeration value="CANT_UNSET_CORP_CURRENCY"/>
                    <enumeration value="CHILD_SHARE_FAILS_PARENT"/>
                    <enumeration value="CIRCULAR_DEPENDENCY"/>
                    <enumeration value="CLEAN_SERVICE_ERROR"/>
                    <enumeration value="COLLISION_DETECTED"/>
                    <enumeration value="COMMERCIAL_CONTROL_ERROR"/>
                    <enumeration value="COMMUNITY_NOT_ACCESSIBLE"/>
                    <enumeration value="CONFLICTING_ENVIRONMENT_HUB_MEMBER"/>
                    <enumeration value="CONFLICTING_SSO_USER_MAPPING"/>
                    <enumeration value="CUSTOM_APEX_ERROR"/>
                    <enumeration value="CUSTOM_CLOB_FIELD_LIMIT_EXCEEDED"/>
                    <enumeration value="CUSTOM_ENTITY_OR_FIELD_LIMIT"/>
                    <enumeration value="CUSTOM_FIELD_INDEX_LIMIT_EXCEEDED"/>
                    <enumeration value="CUSTOM_INDEX_EXISTS"/>
                    <enumeration value="CUSTOM_LINK_LIMIT_EXCEEDED"/>
                    <enumeration value="CUSTOM_METADATA_LIMIT_EXCEEDED"/>
                    <enumeration value="CUSTOM_METADATA_REL_FIELD_MANAGEABILITY"/>
                    <enumeration value="CUSTOM_SETTINGS_LIMIT_EXCEEDED"/>
                    <enumeration value="CUSTOM_TAB_LIMIT_EXCEEDED"/>
                    <enumeration value="DATAASSESSMENT_CONFIG_ASSESSMENT_IN_PROGRESS_ERROR"/>
                    <enumeration value="DATAASSESSMENT_CONFIG_SERVICE_ERROR"/>
                    <enumeration value="DATACLOUDADDRESS_NO_RECORDS_FOUND"/>
                    <enumeration value="DATACLOUDADDRESS_PROCESSING_ERROR"/>
                    <enumeration value="DATACLOUDADDRESS_SERVER_ERROR"/>
                    <enumeration value="DELETE_FAILED"/>
                    <enumeration value="DELETE_OPERATION_TOO_LARGE"/>
                    <enumeration value="DELETE_REQUIRED_ON_CASCADE"/>
                    <enumeration value="DEPENDENCY_EXISTS"/>
                    <enumeration value="DUPLICATES_DETECTED"/>
                    <enumeration value="DUPLICATE_CASE_SOLUTION"/>
                    <enumeration value="DUPLICATE_COMM_NICKNAME"/>
                    <enumeration value="DUPLICATE_CUSTOM_ENTITY_DEFINITION"/>
                    <enumeration value="DUPLICATE_CUSTOM_TAB_MOTIF"/>
                    <enumeration value="DUPLICATE_DEVELOPER_NAME"/>
                    <enumeration value="DUPLICATE_EXTERNAL_ID"/>
                    <enumeration value="DUPLICATE_MASTER_LABEL"/>
                    <enumeration value="DUPLICATE_SENDER_DISPLAY_NAME"/>
                    <enumeration value="DUPLICATE_USERNAME"/>
                    <enumeration value="DUPLICATE_VALUE"/>
                    <enumeration value="EMAIL_ADDRESS_BOUNCED"/>
                    <enumeration value="EMAIL_EXTERNAL_TRANSPORT_CONNECTION_ERROR"/>
                    <enumeration value="EMAIL_EXTERNAL_TRANSPORT_PERMISSION_ERROR"/>
                    <enumeration value="EMAIL_EXTERNAL_TRANSPORT_TOKEN_ERROR"/>
                    <enumeration value="EMAIL_EXTERNAL_TRANSPORT_TOO_MANY_REQUESTS_ERROR"/>
                    <enumeration value="EMAIL_EXTERNAL_TRANSPORT_UNKNOWN_ERROR"/>
                    <enumeration value="EMAIL_NOT_PROCESSED_DUE_TO_PRIOR_ERROR"/>
                    <enumeration value="EMAIL_OPTED_OUT"/>
                    <enumeration value="EMAIL_TEMPLATE_FORMULA_ERROR"/>
                    <enumeration value="EMAIL_TEMPLATE_MERGEFIELD_ACCESS_ERROR"/>
                    <enumeration value="EMAIL_TEMPLATE_MERGEFIELD_ERROR"/>
                    <enumeration value="EMAIL_TEMPLATE_MERGEFIELD_VALUE_ERROR"/>
                    <enumeration value="EMAIL_TEMPLATE_PROCESSING_ERROR"/>
                    <enumeration value="EMPTY_SCONTROL_FILE_NAME"/>
                    <enumeration value="ENTITY_FAILED_IFLASTMODIFIED_ON_UPDATE"/>
                    <enumeration value="ENTITY_IS_ARCHIVED"/>
                    <enumeration value="ENTITY_IS_DELETED"/>
                    <enumeration value="ENTITY_IS_LOCKED"/>
                    <enumeration value="ENTITY_SAVE_ERROR"/>
                    <enumeration value="ENTITY_SAVE_VALIDATION_ERROR"/>
                    <enumeration value="ENVIRONMENT_HUB_MEMBERSHIP_CONFLICT"/>
                    <enumeration value="ENVIRONMENT_HUB_MEMBERSHIP_ERROR_JOINING_HUB"/>
                    <enumeration value="ENVIRONMENT_HUB_MEMBERSHIP_USER_ALREADY_IN_HUB"/>
                    <enumeration value="ENVIRONMENT_HUB_MEMBERSHIP_USER_NOT_ORG_ADMIN"/>
                    <enumeration value="ERROR_IN_MAILER"/>
                    <enumeration value="EXCHANGE_WEB_SERVICES_URL_INVALID"/>
                    <enumeration value="FAILED_ACTIVATION"/>
                    <enumeration value="FIELD_CUSTOM_VALIDATION_EXCEPTION"/>
                    <enumeration value="FIELD_FILTER_VALIDATION_EXCEPTION"/>
                    <enumeration value="FIELD_INTEGRITY_EXCEPTION"/>
                    <enumeration value="FIELD_KEYWORD_LIST_MATCH_LIMIT"/>
                    <enumeration value="FIELD_MAPPING_ERROR"/>
                    <enumeration value="FIELD_MODERATION_RULE_BLOCK"/>
                    <enumeration value="FIELD_NOT_UPDATABLE"/>
                    <enumeration value="FILE_EXTENSION_NOT_ALLOWED"/>
                    <enumeration value="FILE_SIZE_LIMIT_EXCEEDED"/>
                    <enumeration value="FILTERED_LOOKUP_LIMIT_EXCEEDED"/>
                    <enumeration value="FIND_DUPLICATES_ERROR"/>
                    <enumeration value="FLOW_EXCEPTION"/>
                    <enumeration value="FUNCTIONALITY_NOT_ENABLED"/>
                    <enumeration value="HAS_PUBLIC_REFERENCES"/>
                    <enumeration value="HTML_FILE_UPLOAD_NOT_ALLOWED"/>
                    <enumeration value="IMAGE_TOO_LARGE"/>
                    <enumeration value="INACTIVE_OWNER_OR_USER"/>
                    <enumeration value="INACTIVE_RULE_ERROR"/>
                    <enumeration value="INSERT_UPDATE_DELETE_NOT_ALLOWED_DURING_MAINTENANCE"/>
                    <enumeration value="INSUFFICIENT_ACCESS_ON_CROSS_REFERENCE_ENTITY"/>
                    <enumeration value="INSUFFICIENT_ACCESS_OR_READONLY"/>
                    <enumeration value="INSUFFICIENT_ACCESS_TO_INSIGHTSEXTERNALDATA"/>
                    <enumeration value="INSUFFICIENT_CREDITS"/>
                    <enumeration value="INTERNAL_ERROR"/>
                    <enumeration value="INVALID_ACCESS_LEVEL"/>
                    <enumeration value="INVALID_ACCESS_TOKEN"/>
                    <enumeration value="INVALID_ARGUMENT_TYPE"/>
                    <enumeration value="INVALID_ASSIGNEE_TYPE"/>
                    <enumeration value="INVALID_ASSIGNMENT_RULE"/>
                    <enumeration value="INVALID_BATCH_OPERATION"/>
                    <enumeration value="INVALID_CONTENT_TYPE"/>
                    <enumeration value="INVALID_CREDIT_CARD_INFO"/>
                    <enumeration value="INVALID_CROSS_REFERENCE_KEY"/>
                    <enumeration value="INVALID_CROSS_REFERENCE_TYPE_FOR_FIELD"/>
                    <enumeration value="INVALID_CURRENCY_CONV_RATE"/>
                    <enumeration value="INVALID_CURRENCY_CORP_RATE"/>
                    <enumeration value="INVALID_CURRENCY_ISO"/>
                    <enumeration value="INVALID_DATA_CATEGORY_GROUP_REFERENCE"/>
                    <enumeration value="INVALID_DATA_URI"/>
                    <enumeration value="INVALID_EMAIL_ADDRESS"/>
                    <enumeration value="INVALID_EMPTY_KEY_OWNER"/>
                    <enumeration value="INVALID_ENTITY_FOR_MATCH_ENGINE_ERROR"/>
                    <enumeration value="INVALID_ENTITY_FOR_MATCH_OPERATION_ERROR"/>
                    <enumeration value="INVALID_ENTITY_FOR_UPSERT"/>
                    <enumeration value="INVALID_ENVIRONMENT_HUB_MEMBER"/>
                    <enumeration value="INVALID_EVENT_DELIVERY"/>
                    <enumeration value="INVALID_EVENT_SUBSCRIPTION"/>
                    <enumeration value="INVALID_EXTENSION_ID"/>
                    <enumeration value="INVALID_FIELD"/>
                    <enumeration value="INVALID_FIELD_FOR_INSERT_UPDATE"/>
                    <enumeration value="INVALID_FIELD_WHEN_USING_TEMPLATE"/>
                    <enumeration value="INVALID_FILTER_ACTION"/>
                    <enumeration value="INVALID_GOOGLE_DOCS_URL"/>
                    <enumeration value="INVALID_ID_FIELD"/>
                    <enumeration value="INVALID_INET_ADDRESS"/>
                    <enumeration value="INVALID_INPUT"/>
                    <enumeration value="INVALID_LINEITEM_CLONE_STATE"/>
                    <enumeration value="INVALID_MARKUP"/>
                    <enumeration value="INVALID_MASTER_OR_TRANSLATED_SOLUTION"/>
                    <enumeration value="INVALID_MESSAGE_ID_REFERENCE"/>
                    <enumeration value="INVALID_NAMESPACE_PREFIX"/>
                    <enumeration value="INVALID_OAUTH_URL"/>
                    <enumeration value="INVALID_OPERATION"/>
                    <enumeration value="INVALID_OPERATOR"/>
                    <enumeration value="INVALID_OR_NULL_FOR_RESTRICTED_PICKLIST"/>
                    <enumeration value="INVALID_OWNER"/>
                    <enumeration value="INVALID_PACKAGE_LICENSE"/>
                    <enumeration value="INVALID_PACKAGE_VERSION"/>
                    <enumeration value="INVALID_PARTNER_NETWORK_STATUS"/>
                    <enumeration value="INVALID_PAYLOAD_VERSION"/>
                    <enumeration value="INVALID_PERSON_ACCOUNT_OPERATION"/>
                    <enumeration value="INVALID_PROVIDER_TYPE"/>
                    <enumeration value="INVALID_QUERY_LOCATOR"/>
                    <enumeration value="INVALID_READ_ONLY_USER_DML"/>
                    <enumeration value="INVALID_REFRESH_TOKEN"/>
                    <enumeration value="INVALID_RUNTIME_VALUE"/>
                    <enumeration value="INVALID_SAVE_AS_ACTIVITY_FLAG"/>
                    <enumeration value="INVALID_SESSION_ID"/>
                    <enumeration value="INVALID_SETUP_OWNER"/>
                    <enumeration value="INVALID_SIGNUP_COUNTRY"/>
                    <enumeration value="INVALID_SIGNUP_OPTION"/>
                    <enumeration value="INVALID_SITE_DELETE_EXCEPTION"/>
                    <enumeration value="INVALID_SITE_FILE_IMPORTED_EXCEPTION"/>
                    <enumeration value="INVALID_SITE_FILE_TYPE_EXCEPTION"/>
                    <enumeration value="INVALID_STATUS"/>
                    <enumeration value="INVALID_SUBDOMAIN"/>
                    <enumeration value="INVALID_TEXT_REPRESENTATION"/>
                    <enumeration value="INVALID_TYPE"/>
                    <enumeration value="INVALID_TYPE_FOR_OPERATION"/>
                    <enumeration value="INVALID_TYPE_ON_FIELD_IN_RECORD"/>
                    <enumeration value="INVALID_USERID"/>
                    <enumeration value="IP_RANGE_LIMIT_EXCEEDED"/>
                    <enumeration value="ITEM_NOT_FOUND"/>
                    <enumeration value="JIGSAW_IMPORT_LIMIT_EXCEEDED"/>
                    <enumeration value="LICENSE_LIMIT_EXCEEDED"/>
                    <enumeration value="LIGHT_PORTAL_USER_EXCEPTION"/>
                    <enumeration value="LIMIT_EXCEEDED"/>
                    <enumeration value="MALFORMED_ID"/>
                    <enumeration value="MANAGER_NOT_DEFINED"/>
                    <enumeration value="MASSMAIL_RETRY_LIMIT_EXCEEDED"/>
                    <enumeration value="MASS_MAIL_LIMIT_EXCEEDED"/>
                    <enumeration value="MATCH_DEFINITION_ERROR"/>
                    <enumeration value="MATCH_OPERATION_ERROR"/>
                    <enumeration value="MATCH_OPERATION_INVALID_ENGINE_ERROR"/>
                    <enumeration value="MATCH_OPERATION_INVALID_RULE_ERROR"/>
                    <enumeration value="MATCH_OPERATION_MISSING_ENGINE_ERROR"/>
                    <enumeration value="MATCH_OPERATION_MISSING_OBJECT_TYPE_ERROR"/>
                    <enumeration value="MATCH_OPERATION_MISSING_OPTIONS_ERROR"/>
                    <enumeration value="MATCH_OPERATION_MISSING_RULE_ERROR"/>
                    <enumeration value="MATCH_OPERATION_UNKNOWN_RULE_ERROR"/>
                    <enumeration value="MATCH_OPERATION_UNSUPPORTED_VERSION_ERROR"/>
                    <enumeration value="MATCH_PRECONDITION_FAILED"/>
                    <enumeration value="MATCH_RUNTIME_ERROR"/>
                    <enumeration value="MATCH_SERVICE_ERROR"/>
                    <enumeration value="MATCH_SERVICE_TIMED_OUT"/>
                    <enumeration value="MATCH_SERVICE_UNAVAILABLE_ERROR"/>
                    <enumeration value="MAXIMUM_CCEMAILS_EXCEEDED"/>
                    <enumeration value="MAXIMUM_DASHBOARD_COMPONENTS_EXCEEDED"/>
                    <enumeration value="MAXIMUM_HIERARCHY_CHILDREN_REACHED"/>
                    <enumeration value="MAXIMUM_HIERARCHY_LEVELS_REACHED"/>
                    <enumeration value="MAXIMUM_HIERARCHY_TREE_SIZE_REACHED"/>
                    <enumeration value="MAXIMUM_SIZE_OF_ATTACHMENT"/>
                    <enumeration value="MAXIMUM_SIZE_OF_DOCUMENT"/>
                    <enumeration value="MAX_ACTIONS_PER_RULE_EXCEEDED"/>
                    <enumeration value="MAX_ACTIVE_RULES_EXCEEDED"/>
                    <enumeration value="MAX_APPROVAL_STEPS_EXCEEDED"/>
                    <enumeration value="MAX_DEPTH_IN_FLOW_EXECUTION"/>
                    <enumeration value="MAX_FORMULAS_PER_RULE_EXCEEDED"/>
                    <enumeration value="MAX_LIMIT_EXCEEDED"/>
                    <enumeration value="MAX_RULES_EXCEEDED"/>
                    <enumeration value="MAX_RULE_ENTRIES_EXCEEDED"/>
                    <enumeration value="MAX_TASK_DESCRIPTION_EXCEEEDED"/>
                    <enumeration value="MAX_TM_RULES_EXCEEDED"/>
                    <enumeration value="MAX_TM_RULE_ITEMS_EXCEEDED"/>
                    <enumeration value="MAX_TRIGGERS_EXCEEDED"/>
                    <enumeration value="MERGE_FAILED"/>
                    <enumeration value="METADATA_FIELD_UPDATE_ERROR"/>
                    <enumeration value="MISSING_ARGUMENT"/>
                    <enumeration value="MISSING_RECORD"/>
                    <enumeration value="MIXED_DML_OPERATION"/>
                    <enumeration value="NONUNIQUE_SHIPPING_ADDRESS"/>
                    <enumeration value="NO_ACCESS_TOKEN"/>
                    <enumeration value="NO_ACCESS_TOKEN_FROM_REFRESH"/>
                    <enumeration value="NO_APPLICABLE_PROCESS"/>
                    <enumeration value="NO_ATTACHMENT_PERMISSION"/>
                    <enumeration value="NO_AUTH_PROVIDER"/>
                    <enumeration value="NO_INACTIVE_DIVISION_MEMBERS"/>
                    <enumeration value="NO_MASS_MAIL_PERMISSION"/>
                    <enumeration value="NO_PARTNER_PERMISSION"/>
                    <enumeration value="NO_REFRESH_TOKEN"/>
                    <enumeration value="NO_SUCH_USER_EXISTS"/>
                    <enumeration value="NO_TOKEN_ENDPOINT"/>
                    <enumeration value="NUMBER_OUTSIDE_VALID_RANGE"/>
                    <enumeration value="NUM_HISTORY_FIELDS_BY_SOBJECT_EXCEEDED"/>
                    <enumeration value="OPTED_OUT_OF_MASS_MAIL"/>
                    <enumeration value="OP_WITH_INVALID_USER_TYPE_EXCEPTION"/>
                    <enumeration value="PACKAGE_LICENSE_REQUIRED"/>
                    <enumeration value="PACKAGING_API_INSTALL_FAILED"/>
                    <enumeration value="PACKAGING_API_UNINSTALL_FAILED"/>
                    <enumeration value="PALI_INVALID_ACTION_ID"/>
                    <enumeration value="PALI_INVALID_ACTION_NAME"/>
                    <enumeration value="PALI_INVALID_ACTION_TYPE"/>
                    <enumeration value="PAL_INVALID_ASSISTANT_RECOMMENDATION_TYPE_ID"/>
                    <enumeration value="PAL_INVALID_ENTITY_ID"/>
                    <enumeration value="PAL_INVALID_FLEXIPAGE_ID"/>
                    <enumeration value="PAL_INVALID_LAYOUT_ID"/>
                    <enumeration value="PAL_INVALID_PARAMETERS"/>
                    <enumeration value="PAYLOAD_SIZE_EXCEEDED"/>
                    <enumeration value="PA_API_EXCEPTION"/>
                    <enumeration value="PA_AXIS_FAULT"/>
                    <enumeration value="PA_INVALID_ID_EXCEPTION"/>
                    <enumeration value="PA_NO_ACCESS_EXCEPTION"/>
                    <enumeration value="PA_NO_DATA_FOUND_EXCEPTION"/>
                    <enumeration value="PA_URI_SYNTAX_EXCEPTION"/>
                    <enumeration value="PA_VISIBLE_ACTIONS_FILTER_ORDERING_EXCEPTION"/>
                    <enumeration value="PORTAL_NO_ACCESS"/>
                    <enumeration value="PORTAL_USER_ALREADY_EXISTS_FOR_CONTACT"/>
                    <enumeration value="PORTAL_USER_CREATION_RESTRICTED_WITH_ENCRYPTION"/>
                    <enumeration value="PRIVATE_CONTACT_ON_ASSET"/>
                    <enumeration value="PROCESSING_HALTED"/>
                    <enumeration value="QA_INVALID_CREATE_FEED_ITEM"/>
                    <enumeration value="QA_INVALID_SUCCESS_MESSAGE"/>
                    <enumeration value="QUERY_TIMEOUT"/>
                    <enumeration value="QUICK_ACTION_LIST_ITEM_NOT_ALLOWED"/>
                    <enumeration value="QUICK_ACTION_LIST_NOT_ALLOWED"/>
                    <enumeration value="RECORD_IN_USE_BY_WORKFLOW"/>
                    <enumeration value="REL_FIELD_BAD_ACCESSIBILITY"/>
                    <enumeration value="REPUTATION_MINIMUM_NUMBER_NOT_REACHED"/>
                    <enumeration value="REQUEST_RUNNING_TOO_LONG"/>
                    <enumeration value="REQUIRED_FEATURE_MISSING"/>
                    <enumeration value="REQUIRED_FIELD_MISSING"/>
                    <enumeration value="RETRIEVE_EXCHANGE_ATTACHMENT_FAILED"/>
                    <enumeration value="RETRIEVE_EXCHANGE_EMAIL_FAILED"/>
                    <enumeration value="RETRIEVE_EXCHANGE_EVENT_FAILED"/>
                    <enumeration value="RETRIEVE_GOOGLE_EMAIL_FAILED"/>
                    <enumeration value="RETRIEVE_GOOGLE_EVENT_FAILED"/>
                    <enumeration value="RETRIEVE_USER_CONFIG_ERROR"/>
                    <enumeration value="SALESFORCE_INBOX_TRANSPORT_CONNECTION_ERROR"/>
                    <enumeration value="SALESFORCE_INBOX_TRANSPORT_TOKEN_ERROR"/>
                    <enumeration value="SALESFORCE_INBOX_TRANSPORT_UNKNOWN_ERROR"/>
                    <enumeration value="SELF_REFERENCE_FROM_FLOW"/>
                    <enumeration value="SELF_REFERENCE_FROM_TRIGGER"/>
                    <enumeration value="SHARE_NEEDED_FOR_CHILD_OWNER"/>
                    <enumeration value="SINGLE_EMAIL_LIMIT_EXCEEDED"/>
                    <enumeration value="SOCIAL_ACCOUNT_NOT_FOUND"/>
                    <enumeration value="SOCIAL_ACTION_INVALID"/>
                    <enumeration value="SOCIAL_PERSONA_NOT_FOUND"/>
                    <enumeration value="SOCIAL_POST_INVALID"/>
                    <enumeration value="SOCIAL_POST_NOT_FOUND"/>
                    <enumeration value="STANDARD_PRICE_NOT_DEFINED"/>
                    <enumeration value="STORAGE_LIMIT_EXCEEDED"/>
                    <enumeration value="STRING_TOO_LONG"/>
                    <enumeration value="SUBDOMAIN_IN_USE"/>
                    <enumeration value="TABSET_LIMIT_EXCEEDED"/>
                    <enumeration value="TEMPLATE_NOT_ACTIVE"/>
                    <enumeration value="TEMPLATE_NOT_FOUND"/>
                    <enumeration value="TERMS_OF_SERVICE_UNREAD"/>
                    <enumeration value="TERRITORY_REALIGN_IN_PROGRESS"/>
                    <enumeration value="TEXT_DATA_OUTSIDE_SUPPORTED_CHARSET"/>
                    <enumeration value="TOO_MANY_APEX_REQUESTS"/>
                    <enumeration value="TOO_MANY_ENUM_VALUE"/>
                    <enumeration value="TOO_MANY_POSSIBLE_USERS_EXIST"/>
                    <enumeration value="TRANSFER_REQUIRES_READ"/>
                    <enumeration value="UNABLE_TO_LOCK_ROW"/>
                    <enumeration value="UNAVAILABLE_RECORDTYPE_EXCEPTION"/>
                    <enumeration value="UNAVAILABLE_REF"/>
                    <enumeration value="UNDELETE_FAILED"/>
                    <enumeration value="UNKNOWN_EXCEPTION"/>
                    <enumeration value="UNKNOWN_TOKEN_ERROR"/>
                    <enumeration value="UNSAFE_HTML_CONTENT"/>
                    <enumeration value="UNSPECIFIED_EMAIL_ADDRESS"/>
                    <enumeration value="UNSUPPORTED_APEX_TRIGGER_OPERATON"/>
                    <enumeration value="UNSUPPORTED_SOCIAL_PROVIDER"/>
                    <enumeration value="UNVERIFIED_SENDER_ADDRESS"/>
                    <enumeration value="UPDATE_GOOGLE_EMAIL_LABEL_FAILED"/>
                    <enumeration value="USER_OWNS_PORTAL_ACCOUNT_EXCEPTION"/>
                    <enumeration value="USER_WITH_APEX_SHARES_EXCEPTION"/>
                    <enumeration value="VF_COMPILE_ERROR"/>
                    <enumeration value="WEBLINK_SIZE_LIMIT_EXCEEDED"/>
                    <enumeration value="WEBLINK_URL_INVALID"/>
                    <enumeration value="WRONG_CONTROLLER_TYPE"/>
                    <enumeration value="XCLEAN_UNEXPECTED_ERROR"/>
                </restriction>
            </simpleType>
            <!-- These are the extension code to provide additional error information -->
            <simpleType name="ExtendedErrorCode">
                <restriction base="xsd:string">
                    <enumeration value="ACTIONCALL_DUPLICATE_INPUT_PARAM">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: actionCallName, parameterName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="ACTIONCALL_DUPLICATE_OUTPUT_PARAM">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: actionCallName, parameterName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="ACTIONCALL_MISSING_NAME">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: </xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="ACTIONCALL_MISSING_REQUIRED_PARAM">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: actionCallName, parameterName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="ACTIONCALL_MISSING_REQUIRED_TYPE">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: actionCallName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="ACTIONCALL_NOT_FOUND_WITH_NAME_AND_TYPE">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: </xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="ACTIONCALL_NOT_SUPPORTED_FOR_PROCESSTYPE">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: processType</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="APEXCALLOUT_INPUT_DUPLICATE">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: apexClassName, parameterName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="APEXCALLOUT_INPUT_INCOMPATIBLE_DATATYPE">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: apexClassName, parameterName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="APEXCALLOUT_INVALID">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: apexClassName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="APEXCALLOUT_MISSING_CLASSNAME">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: apexClassName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="APEXCALLOUT_NOT_FOUND">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: apexClassName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="APEXCALLOUT_OUTPUT_INCOMPATIBLE_DATATYPE">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: apexClassName, parameterName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="APEXCALLOUT_OUTPUT_NOT_FOUND">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: apexClassName, parameterName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="APEXCALLOUT_REQUIRED_INPUT_MISSING">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: apexClassName, parameterName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="APEXCLASS_MISSING_INTERFACE">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: apexClassName, parentScreenFieldName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="ASSIGNMENTITEM_ELEMENT_MISSING_DATATYPE">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: assignmentName, operatorName, elementName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="ASSIGNMENTITEM_ELEMENT_NOT_SUPPORTED">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: elementName, assignmentName, elementType</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="ASSIGNMENTITEM_FIELD_INVALID_DATATYPE">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: fieldValue, dataType, incompatibleDataType</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="ASSIGNMENTITEM_FIELD_INVALID_DATATYPE_WITH_ELEMENT">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: elementName, acceptedDataType, dataType, fieldValue</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="ASSIGNMENTITEM_INCOMPATIBLE_DATATYPES">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: assignmentName, operatorName, leftElementName, leftElementType, rightElementName, rightElementType</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="ASSIGNMENTITEM_INVALID_COLLECTION">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: assignmentName, operatorName, leftElementName, rightElementName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="ASSIGNMENTITEM_INVALID_DATATYPE_IN_ELEMENT">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: elementName, dataType, incompatibleDataType</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="ASSIGNMENTITEM_INVALID_REFERENCE">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: parameterName, operatorName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="ASSIGNMENTITEM_LEFT_DATATYPE_INVALID_FOR_OPERATOR">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: assignmentName, operatorName, dataType, elementName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="ASSIGNMENTITEM_MODIFIES_NONVARIABLE">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: assignmentName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="ASSIGNMENTITEM_NONEXISTENT_REFERENCE">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: parameterName, operatorName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="ASSIGNMENTITEM_REQUIRED">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: assignmentName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="ASSIGNMENTITEM_RIGHT_DATATYPE_INVALID_FOR_OPERATOR">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: elementName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="AUTOLAUNCHED_CHOICELOOKUP_NOT_SUPPORTED">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: choiceLookupName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="AUTOLAUNCHED_CHOICE_NOT_SUPPORTED">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: choiceName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="AUTOLAUNCHED_SCREEN_NOT_SUPPORTED">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: </xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="AUTOLAUNCHED_STEP_NOT_SUPPORTED">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: </xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="AUTOLAUNCHED_SUBFLOW_INCOMPATIBLE_FLOWTYPE">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: subflowType</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="AUTOLAUNCHED_WAIT_NOT_SUPPORTED">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: </xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="CHOICEFIELD_DEFAULT_CHOICE_NOT_FOUND">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: screenFieldName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="CHOICEFIELD_MISSING_CHOICE">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: questionName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="CHOICELOOKUP_DATATYPE_INCOMPATIBLE_WITH_CHOICEFIELD">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: choiceName, parentScreenFieldName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="CHOICE_DATATYPE_INCOMPATIBLE_WITH_CHOICEFIELD">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: choiceName, parentScreenFieldName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="CHOICE_NOT_SUPPORTED_FOR_SCREENFIELDTYPE">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: elementName, screenFieldName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="CHOICE_USED_MULTIPLE_TIMES_IN_SAME_FIELD">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: choiceName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="CONDITION_DATATYPE_INCOMPATIBLE">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: leftElementName, leftElementType, operatorName, rightElementName, rightElementType, ruleName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="CONDITION_DATATYPE_INCOMPATIBLE_WITH_ELEMENT">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: elementName, dataType, operatorName, parameterName, ruleName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="CONDITION_ELEMENT_DATATYPES_INCOMPATIBLE">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: elementName, leftElementType, operatorName, rightElementType, ruleName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="CONDITION_INVALID_LEFTOPERAND">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: ruleName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="CONDITION_INVALID_LEFT_ELEMENT">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: elementName, dataType, operatorName, parameterName, ruleName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="CONDITION_LOGIC_EXCEEDS_LIMIT">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: elementName, characterLimit</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="CONDITION_LOGIC_INVALID">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: elementName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="CONDITION_LOGIC_MISSING">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: elementName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="CONDITION_MISSING_DATATYPE">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: elementName, dataType, operatorName, parameterName, ruleName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="CONDITION_MISSING_OPERATOR">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: ruleName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="CONDITION_REFERENCED_ELEMENT_NOT_FOUND">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: ruleName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="CONDITION_RIGHTOPERAND_NULL">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: ruleName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="CONNECTOR_MISSING_TARGET">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: elementName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="CONSTANT_INCLUDES_REFERENCES">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: constantName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="CUSTOMEVENTS_NOT_ENABLED">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: </xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="CUSTOMEVENT_MISSING_PROCESSMETADATAVALUES">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: </xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="CUSTOMEVENT_OBJECTTYPE_NOT_FOUND">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: objectType</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="CUSTOMEVENT_OBJECTTYPE_NOT_SUPPORTED">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: objectType</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="CUSTOMEVENT_PROCESSMETADATAVALUES_MISSING_NAME">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: metadataValue</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="CUSTOMEVENT_PROCESSMETADATAVALUES_MORE_THAN_ONE_NAME">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: metadataValue</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="DATATYPE_INVALID">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: elementName, dataType</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="DATATYPE_MISSING">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: elementName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="DECISION_DEFAULT_CONNECTOR_MISSING_LABEL">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: flowDecision</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="DECISION_MISSING_OUTCOME">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: flowDecision</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="ELEMENT_CONNECTS_TO_SELF">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: elementName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="ELEMENT_COORDINATES_INVALID">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: coordinateLimit, coordinateName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="ELEMENT_INVALID_CONNECTOR">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: elementName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="ELEMENT_INVALID_REFERENCE">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: elementName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="ELEMENT_MISSING_CONNECTOR">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: elementName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="ELEMENT_MISSING_LABEL">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: characterLimit, elementName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="ELEMENT_MISSING_NAME">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: characterLimit</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="ELEMENT_MISSING_REFERENCE">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: elementName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="ELEMENT_MORE_THAN_ONE_FIELD">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: elementName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="ELEMENT_NAME_INVALID">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: </xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="ELEMENT_NEVER_USED">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: elementName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="ELEMENT_SCALE_SMALLER_THAN_DEFAULTVALUE">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: elementName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="EXTERNAL_OBJECTS_NOT_SUPPORTED">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: objectName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="EXTERNAL_OBJECT_FIELDS_NOT_SUPPORTED">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: fieldReference</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="FIELDASSIGNMENT_FIELD_INCOMPATIBLE_DATATYPE">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: fieldName, elementName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="FIELDASSIGNMENT_INVALID_DATATYPE">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: fieldName, elementName, assignmentName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="FIELDASSIGNMENT_INVALID_ELEMENT">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: fieldName, elementName, elementType</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="FIELDASSIGNMENT_INVALID_REFERENCE">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: fieldName, parameterName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="FIELDASSIGNMENT_MULTIPLE_REFERENCES_SAME_FIELD">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: fieldName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="FIELDASSIGNMENT_PICKLISTFIELD_INCOMPATIBLE_DATATYPE">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: fieldName, dataType</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="FIELDASSIGNMENT_REFERENCED_ELEMENT_MISSING_DATATYPE">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: fieldName, elementName, elementType</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="FIELDSERVICE_UNSUPPORTED_FIELD_TYPE">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: elementName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="FIELD_INVALID_VALUE">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: fieldName, parameterName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="FIELD_NOT_FOUND">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: objectName, fieldName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="FIELD_RELATIONSHIP_NOT_SUPPORTED">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: fieldRelationshipName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="FLEXIPAGE_COMPONENT_ATTRIBUTE_EXPRESSION_EXCEPTION">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: componentName, propertyName, propertyType, errorCode, invalidTokens</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="FLEXIPAGE_COMPONENT_ATTRIBUTE_GENERIC_EXCEPTION">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: componentName, propertyName, propertyType, errorIdentifier, errorParams</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="FLEXIPAGE_COMPONENT_ATTRIBUTE_MISSING_REQUIRED">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: componentName, propertyName, propertyType</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="FLEXIPAGE_COMPONENT_ATTRIBUTE_TOO_LONG">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: componentName, propertyName, propertyType, maxLength</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="FLEXIPAGE_COMPONENT_MAX_LIMIT_EXCEPTION">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: </xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="FLEXIPAGE_COMPONENT_RULE_VALIDATION_EXCEPTION">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: componentName, criterionIndex</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="FLEXIPAGE_PICKLIST_INVALID_VALUE_EXCEPTION">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: componentName, propertyName, propertyType, invalidValue</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="FLOW_INCLUDES_STEP">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: elementName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="FLOW_NAME_USED_IN_OTHER_CLIENT">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: flowName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="FORMULA_EXPRESSION_INVALID">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: formulaExpression</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="INPUTPARAM_INCOMPATIBLE_DATATYPE">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: parameterName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="INPUTPARAM_INCOMPATIBLE_WITH_COLLECTION_VARIABLE">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: parameterName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="INPUTPARAM_INCOMPATIBLE_WITH_NONCOLLECTION_VARIABLE">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: parameterName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="INPUTPARAM_MISMATCHED_OBJECTTYPE">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: parameterName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="INVALID_FLOW">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: </xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="INVALID_SURVEY_VARIABLE_NAME_OR_TYPE">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: surveyName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="LOOP_ASSIGNNEXTVALUETO_MISMATCHED_DATATYPE">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: elementName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="LOOP_ASSIGNNEXTVALUETO_MISMATCHED_OBJECTTYPE">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: elementName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="LOOP_ASSIGNNEXTVALUETO_MISSING">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: elementName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="LOOP_ASSIGNNEXTVALUETO_MISSING_VARIABLE">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: elementName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="LOOP_ASSIGNNEXTVALUETO_REFERENCE_NOT_FOUND">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: fieldRelationshipName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="LOOP_COLLECTION_ELEMENT_NOT_FOUND">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: elementName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="LOOP_COLLECTION_NOT_FOUND">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: elementName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="LOOP_COLLECTION_NOT_SUPPORTED_FOR_FIELD">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: fieldName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="LOOP_MISSING_COLLECTION">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: </xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="OBJECTTYPE_INVALID">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: objectType</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="OBJECT_CANNOT_BE_CREATED">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: objectName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="OBJECT_CANNOT_BE_DELETED">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: objectName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="OBJECT_CANNOT_BE_QUERIED">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: objectName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="OBJECT_CANNOT_BE_UPDATED">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: objectName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="OBJECT_ENCRYPTED_FIELDS_NOT_SUPPORTED">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: fieldName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="OBJECT_NOT_FOUND">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: objectName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="OUTPUTPARAM_ASSIGNTOREFERENCE_NOTFOUND">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: parameterName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="OUTPUTPARAM_INCOMPATIBLE_DATATYPE">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: parameterName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="OUTPUTPARAM_MISMATCHED_OBJECTTYPE">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: parameterName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="OUTPUTPARAM_MISMATCHED_WITH_COLLECTION_VARIABLE">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: parameterName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="OUTPUTPARAM_MISSING_ASSIGNTOREFERENCE">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: parameterName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="OUTPUTPARAM_MISTMATCHED_WITH_NONCOLLECTION_VARIABLE">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: parameterName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="PARAM_DATATYPE_NOT_SUPPORTED">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: parameterName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="PROCESSMETADATAVALUES_NOT_SUPPORTED_FOR_PROCESSTYPE">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: processType, metadataValue</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="PROCESSMETADATAVALUE_NONEXISTENT_ELEMENT">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: metadataValue</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="PROCESSTYPE_ELEMENT_NOT_SUPPORTED">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: processType, elementType</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="PROCESSTYPE_NOT_SUPPORTED">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: processType</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="RECORDFILTER_ENCRYPTED_FIELDS_NOT_SUPPORTED">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: fieldName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="RECORDFILTER_GEOLOCATION_FIELDS_NOT_SUPPORTED">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: fieldName, objectName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="RECORDFILTER_INVALID_DATATYPE">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: fieldName, elementName, elementType, operatorName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="RECORDFILTER_INVALID_ELEMENT">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: fieldName, assignmentName, elementName, elementType</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="RECORDFILTER_INVALID_OPERATOR">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: fieldName, operatorName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="RECORDFILTER_INVALID_REFERENCE">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: fieldName, operatorName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="RECORDFILTER_MISSING_DATATYPE">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: fieldName, elementName, elementType, operatorName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="RECORDFILTER_MULTIPLE_QUERIES_SAME_FIELD">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: fieldName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="RECORDLOOKUP_IDASSIGNMENT_VARIABLE_INCOMPATIBLE_DATATYPE">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: elementName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="RECORDLOOKUP_IDASSIGNMENT_VARIABLE_NOT_FOUND">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: elementName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="RECORDUPDATE_MISSING_FILTERS">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: objectName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="REFERENCED_ELEMENT_NOT_FOUND">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: elementName, mergeFieldReference</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="RULE_MISSING_CONDITION">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: elementName, ruleName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="SCREENFIELD_BOOLEAN_ISREQUIRED_IS_FALSE">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: fieldName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="SCREENFIELD_DEFAULTVALUE_NOT_SUPPORTED">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: elementName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="SCREENFIELD_EXTENSION_DUPLICATE_INPUT_PARAM">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: elementName, extensionName, parameterName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="SCREENFIELD_EXTENSION_DUPLICATE_OUTPUT_PARAM">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: elementName, extensionName, parameterName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="SCREENFIELD_EXTENSION_NAME_INVALID">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: elementName, extensionName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="SCREENFIELD_EXTENSION_NAME_MISSING">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: elementName, fieldType</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="SCREENFIELD_EXTENSION_NAME_NOT_SUPPORTED">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: elementName, fieldType</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="SCREENFIELD_EXTENSION_REQUIRED_INPUT_MISSING">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: elementName, extensionName, parameterName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="SCREENFIELD_INPUTS_NOT_SUPPORTED">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: elementName, fieldType</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="SCREENFIELD_INVALID_DATATYPE">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: dataType, fieldType</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="SCREENFIELD_MULTISELECTCHOICE_SEMICOLON_NOT_SUPPORTED">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: choiceName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="SCREENFIELD_OUTPUTS_NOT_SUPPORTED">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: elementName, fieldType</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="SCREENFIELD_TYPE_NOT_SUPPORTED">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: elementName, fieldType</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="SCREENFIELD_USERINPUT_NOT_SUPPORTED_FOR_CHOICETYPE">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: choiceName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="SCREENFIELD_VALIDATIONRULE_NOT_SUPPORTED">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: elementName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="SCREENRULE_ACTION_INVALID_ATTRIBUTE">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: screenRuleName, attributeName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="SCREENRULE_ACTION_INVALID_ATTRIBUTE_FOR_API_VERSION">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: screenRuleName, attributeName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="SCREENRULE_ACTION_INVALID_VALUE">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: screenRuleName, acceptedValues, actionValue</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="SCREENRULE_ACTION_MISSING_ATTRIBUTE">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: screenRuleName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="SCREENRULE_ACTION_MISSING_FIELDREFERENCE">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: screenRuleName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="SCREENRULE_ACTION_MISSING_VALUE">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: screenRuleName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="SCREENRULE_ATTRIBUTE_NOT_SUPPORTED_FOR_SCREENFIELD">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: screenRuleName, attributeName, fieldName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="SCREENRULE_FIELD_NOT_FOUND_ON_SCREEN">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: screenRuleName, fieldValue</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="SCREENRULE_MISSING_ACTION">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: screenRuleName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="SCREENRULE_NOT_SUPPORTED_IN_ORG">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: </xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="SCREENRULE_SCREENFIELD_NOT_VISIBLE">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: fieldName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="SCREENRULE_VISIBILITY_NOT_SUPPORTED_IN_ORG">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: </xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="SCREEN_ALLOWBACK_ALLOWFINISH_BOTH_FALSE">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: </xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="SCREEN_MISSING_LABEL">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: characterLimit</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="SCREEN_MULTISELECTFIELD_DOESNT_SUPPORT_CHOICE_WITH_USERINPUT">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: choiceName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="SCREEN_PAUSEDTEXT_NOT_SHOWN_WHEN_ALLOWPAUSE_IS_FALSE">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: fieldName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="SETTING_FIELD_MAKES_OTHER_FIELD_REQUIRED">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: fieldName, requiredField</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="SETTING_FIELD_MAKES_OTHER_FIELD_UNSUPPORTED">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: fieldName, otherFieldName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="SOBJECT_ELEMENT_INCOMPATIBLE_DATATYPE">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: fieldName, fieldValue</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="SOBJECT_ELEMENT_MISMATCHED_OBJECTTYPE">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: objectType, sobjectName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="SORT_ENCRYPTED_FIELDS_NOT_SUPPORTED">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: fieldName, objectType</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="SORT_FIELD_MISSING">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: sortOrder</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="SORT_FIELD_NOT_SUPPORTED">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: fieldName, objectName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="SORT_GEOLOCATION_FIELDS_NOT_SUPPORTED">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: fieldName, objectName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="SORT_LIMIT_INVALID">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: maxLimit</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="SORT_ORDER_MISSING">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: fieldName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="SPECIFIC_FIELD_VALUE_MAKES_OTHER_FIELD_REQUIRED">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: fieldName, fieldType, requiedField</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="START_ELEMENT_MISSING">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: </xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="SUBFLOW_DESKTOP_DESIGNER_FLOWS_NOT_SUPPORTED">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: flowName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="SUBFLOW_INPUT_ELEMENT_INCOMPATIBLE_DATATYPES">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: subflowName, inputAssignmentNames</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="SUBFLOW_INPUT_INVALID_VALUE">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: subflowName, inputAssignmentNames</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="SUBFLOW_INPUT_MISMATCHED_COLLECTIONTYPES">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: subflowName, inputParameterNames</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="SUBFLOW_INPUT_MISMATCHED_OBJECTS">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: subflowName, inputParameterNames</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="SUBFLOW_INPUT_MISSING_NAME">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: subflowName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="SUBFLOW_INPUT_MULTIPLE_ASSIGNMENTS_TO_ONE_VARIABLE">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: inputVariableName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="SUBFLOW_INPUT_REFERENCES_FIELD_ON_SOBJECT_VARIABLE">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: inputVariableName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="SUBFLOW_INPUT_VALUE_INCOMPATIBLE_DATATYPES">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: subflowName, inputAssignmentNames</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="SUBFLOW_INPUT_VARIABLE_NOT_FOUND_IN_MASTERFLOW">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: subflowName, inputAssignmentNames</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="SUBFLOW_INPUT_VARIABLE_NOT_FOUND_IN_REFERENCEDFLOW">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: subflowName, inputAssignmentNames</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="SUBFLOW_INPUT_VARIABLE_NO_INPUT_ACCESS">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: subflowName, inputAssignmentNames</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="SUBFLOW_INVALID_NAME">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: </xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="SUBFLOW_INVALID_REFERENCE">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: flowName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="SUBFLOW_MASTER_FLOW_TYPE_NOT_AUTOLAUNCHED">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: parentFlowName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="SUBFLOW_MISSING_NAME">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: </xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="SUBFLOW_NO_ACTIVE_VERSION">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: subflowName, flowName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="SUBFLOW_OUTPUT_INCOMPATIBLE_DATATYPES">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: subflowName, flowVersion, outputParameterNames</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="SUBFLOW_OUTPUT_MISMATCHED_COLLECTIONTYPES">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: subflowName, flowVersion, outputParameterNames</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="SUBFLOW_OUTPUT_MISMATCHED_OBJECTS">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: subflowName, flowVersion, outputParameterNames</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="SUBFLOW_OUTPUT_MISSING_ASSIGNTOREFERENCE">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: outputAssignment</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="SUBFLOW_OUTPUT_MISSING_NAME">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: subflowName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="SUBFLOW_OUTPUT_MULTIPLE_ASSIGNMENTS_TO_ONE_VARIABLE">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: outputVariableName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="SUBFLOW_OUTPUT_REFERENCES_FIELD_ON_SOBJECT_VARIABLE">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: outputAssignment</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="SUBFLOW_OUTPUT_TARGET_DOES_NOT_EXIST_IN_MASTER_FLOW">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: subflowName, outputAssignmentName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="SUBFLOW_OUTPUT_VARIABLE_NOT_FOUND_IN_MASTERFLOW">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: subflowName, variableName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="SUBFLOW_OUTPUT_VARIABLE_NOT_FOUND_IN_REFERENCEDFLOW">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: subflowName, flowVersion, outputParameterNames</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="SUBFLOW_OUTPUT_VARIABLE_NO_OUTPUT_ACCESS">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: subflowName, variableName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="SUBFLOW_REFERENCES_MASTERFLOW">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: </xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="SURVEY_CHOICE_NOT_REFERENCED_BY_A_QUESTION">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: choiceName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="SURVEY_CHOICE_REFERENCED_BY_MULTIPLE_QUESTIONS">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: choiceName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="SURVEY_INACTIVE_SUBFLOWS">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: subflowName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="SURVEY_MISSING_QUESTION_OR_SUBFLOW">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: surveyName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="SURVEY_MISSING_REQUIRED_VARIABLES">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: surveyName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="SURVEY_NESTED_SUBFLOWS">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: subflowName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="SURVEY_NONSURVEY_SUBFLOWS">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: subflowName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="SURVEY_SCREENFIELD_TYPE_NOT_SUPPORTED_FOR_QUESTION">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: elementName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="SURVEY_START_ELEMENT_INVALID">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: </xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="SURVEY_VARIABLE_ACCESS_INVALID">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: surveyName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="UNEXPECTED_ERROR">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: </xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="VALUE_CHAR_LIMIT_EXCEEDED">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: elementName, characterLimit</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="VARIABLE_FIELD_NOT_SUPPORTED_FOR_DATATYPE">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: fieldName, datatype</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="VARIABLE_FIELD_NOT_SUPPORTED_FOR_DATATYPE_AND_COLLECTION">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: fieldName, datatype</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="VARIABLE_FIELD_REQUIRED_FOR_DATATYPE">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: datatype, fieldName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="VARIABLE_SCALE_EXCEEDS_LIMIT">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: elementName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="VARIABLE_SCALE_NEGATIVE_INTEGER">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: elementName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="VARIABLE_SCALE_NULL">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: elementName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="WAITEVENT_DEFAULT_CONNECTOR_MISSING_LABEL">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: waitEventName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="WAITEVENT_DUPLICATE_INPUT_PARAM">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: parameterName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="WAITEVENT_INPUT_NOT_SUPPORTED_FOR_EVENTTYPE">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: waitEventName, inputParameterName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="WAITEVENT_INPUT_REQUIRES_LITERAL_VALUE">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: waitEventName, parameterName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="WAITEVENT_INVALID_CONDITION_LOGIC">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: waitEventName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="WAITEVENT_MISSING">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: </xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="WAITEVENT_MISSING_CONNECTOR">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: waitEventName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="WAITEVENT_MISSING_EVENTTYPE">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: waitEventName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="WAITEVENT_OBJECT_NOT_SUPPORTED_FOR_EVENTTYPE">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: waitEventName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="WAITEVENT_OUTPUT_NOT_SUPPORTED_FOR_EVENTTYPE">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: waitEventName, outputParameter</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="WAITEVENT_RELATIVEALARM_INVALID_DATETIME_FIELD">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: waitEventName, eventParameterName, incompatibleValue</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="WAITEVENT_RELATIVEALARM_INVALID_FIELD">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: waitEventName, eventParameterName, incompatibleValue</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="WAITEVENT_RELATIVEALARM_INVALID_OBJECTTYPE">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: waitEventName, inputParameterName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="WAITEVENT_RELATIVEALARM_INVALID_OFFSETNUMBER">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: waitEventName, eventParameterName, incompatibleValue</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="WAITEVENT_RELATIVEALARM_INVALID_OFFSETUNIT">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: waitEventName, eventParameterName, incompatibleValue</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="WAITEVENT_REQUIRED_INPUT_MISSING">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: waitEventName, parameterName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="WAITEVENT_TYPE_INVALID_OR_NOT_SUPPORTED">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: waitEventName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="WORKFLOW_MISSING_PROCESSMETADATAVALUES">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: flowName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="WORKFLOW_OBJECTTYPE_NOT_FOUND">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: objectType</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="WORKFLOW_OBJECTTYPE_NOT_SUPPORTED">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: objectType</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="WORKFLOW_OBJECTVARIABLE_AND_OLDOBJECTVARIABLE_REFERENCE_SAME_SOBJECT_VARIABLE">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: objectVariableName, oldObjectVariableName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="WORKFLOW_OBJECTVARIABLE_DOESNT_SUPPORT_INPUT">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: objectType, objectVariableName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="WORKFLOW_OLDOBJECTVARIABLE_DOESNT_SUPPORT_INPUT">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: objectType, oldObjectVariableName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="WORKFLOW_PROCESSMETADATAVALUES_MORE_THAN_ONE_NAME">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: metadataValue</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="WORKFLOW_PROCESS_METADATAVALUES_MISSING_NAME">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: metadataValue</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="WORKFLOW_RECURSIVECOUNTVARIABLE_DOESNT_SUPPORT_INPUT">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: elementName</xsd:documentation></xsd:annotation>
                    </enumeration>
                    <enumeration value="WORKFLOW_TRIGGERTYPE_INVALID_VALUE">
                        <xsd:annotation><xsd:documentation>Errors with this extended error code have the following properties: </xsd:documentation></xsd:annotation>
                    </enumeration>
                </restriction>
            </simpleType>


            <complexType name="ExtendedErrorDetails">
                <sequence>
                    <element name="extendedErrorCode" type="tns:ExtendedErrorCode"/>
                    <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded" processContents="lax"/>
                </sequence>
            </complexType>
            <complexType name="Error">
                <sequence>
                    <element name="extendedErrorDetails" type="tns:ExtendedErrorDetails" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
                    <element name="fields"     type="xsd:string" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
                    <element name="message"    type="xsd:string"/>
                    <element name="statusCode" type="tns:StatusCode"/>
                </sequence>
            </complexType>

            <complexType name="SendEmailError">
                <sequence>
                    <element name="fields"     type="xsd:string" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
                    <element name="message"    type="xsd:string"/>
                    <element name="statusCode" type="tns:StatusCode"/>
                    <element name="targetObjectId"     type="tns:ID"  nillable="true"/>
                </sequence>
            </complexType>

            <complexType name="SaveResult">
                <sequence>
                    <element name="errors"    type="tns:Error" minOccurs="0" maxOccurs="unbounded"/>
                    <element name="id"        type="tns:ID" nillable="true"/>
                    <element name="success"   type="xsd:boolean"/>
                </sequence>
            </complexType>

            <complexType name="RenderEmailTemplateError">
                <sequence>
                    <element name="fieldName"  type="xsd:string"/>
                    <element name="message"    type="xsd:string"/>
                    <element name="offset"     type="xsd:int"/>
                    <element name="statusCode" type="tns:StatusCode"/>
                </sequence>
            </complexType>

            <complexType name="UpsertResult">
                <sequence>
                    <element name="created"  type="xsd:boolean"/>
                    <element name="errors"    type="tns:Error" minOccurs="0" maxOccurs="unbounded"/>
                    <element name="id"       type="tns:ID" nillable="true"/>
                    <element name="success"   type="xsd:boolean"/>
                </sequence>
            </complexType>


            <complexType name="PerformQuickActionResult">
                <sequence>
                    <element name="contextId" type="tns:ID" minOccurs="0" nillable="true"/>
                    <element name="created"  type="xsd:boolean"/>
                    <element name="errors"    type="tns:Error" minOccurs="0" maxOccurs="unbounded"/>
                    <element name="feedItemIds" type="tns:ID" minOccurs="0" maxOccurs="unbounded" nillable="true"/>
                    <element name="ids"       type="tns:ID" minOccurs="0" maxOccurs="unbounded" nillable="true"/>
                    <element name="success"   type="xsd:boolean"/>
                    <element name="successMessage" type="xsd:string" minOccurs="0" nillable="true"/>
                </sequence>
            </complexType>


            <complexType name="QuickActionTemplateResult">
                <sequence>
                    <element name="defaultValueFormulas"  type="ens:sObject" nillable="true"/>
                    <element name="defaultValues"         type="ens:sObject" nillable="true"/>
                    <element name="errors"                type="tns:Error" minOccurs="0" maxOccurs="unbounded"/>
                    <element name="success"               type="xsd:boolean"/>
                </sequence>
            </complexType>


            <complexType name="MergeRequest">
                <sequence>
                    <element name="additionalInformationMap" minOccurs="0" maxOccurs="unbounded" type="tns:AdditionalInformationMap"/>
                    <element name="masterRecord" type="ens:sObject"/>
                    <element name="recordToMergeIds" type="tns:ID" minOccurs="1" maxOccurs="unbounded"/>
                </sequence>
            </complexType>

            <complexType name="MergeResult">
                <sequence>
                    <element name="errors"    type="tns:Error" minOccurs="0" maxOccurs="unbounded"/>
                    <element name="id"        type="tns:ID" nillable="true"/>
                    <element name="mergedRecordIds" type="tns:ID" minOccurs="0" maxOccurs="unbounded"/>
                    <element name="success"   type="xsd:boolean"/>
                    <element name="updatedRelatedIds" type="tns:ID" minOccurs="0" maxOccurs="unbounded"/>
                </sequence>
            </complexType>

            <complexType name="ProcessRequest">
                <sequence>
                    <element name="comments"       type="xsd:string" nillable="true"/>
                    <element name="nextApproverIds" type="tns:ID" minOccurs="0" maxOccurs="unbounded" nillable="true"/>
                </sequence>
            </complexType>

            <complexType name="ProcessSubmitRequest">
                <complexContent>
                    <extension base="tns:ProcessRequest">
                        <sequence>
                            <element name="objectId"     type="tns:ID"/>
                            <element name="submitterId"    type="tns:ID" nillable="true"/>
                            <element name="processDefinitionNameOrId" type="xsd:string" nillable="true"/>
                            <element name="skipEntryCriteria" type="xsd:boolean" nillable="true"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="ProcessWorkitemRequest">
                <complexContent>
                    <extension base="tns:ProcessRequest">
                        <sequence>
                            <element name="action"         type="xsd:string"/>
                            <element name="workitemId"     type="tns:ID"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>


            <complexType name="PerformQuickActionRequest">
                <sequence>
                    <element name="contextId"      type="tns:ID" nillable="true"/>                    <element name="quickActionName"  type="xsd:string"/>
                    <element name="records"       type="ens:sObject" minOccurs="0" maxOccurs="unbounded" nillable="true"/>
                </sequence>
            </complexType>


            <complexType name="DescribeAvailableQuickActionResult">
                <sequence>
                    <element name="actionEnumOrId" type="xsd:string"/> 
                    <element name="label"          type="xsd:string"/>
                    <element name="name"           type="xsd:string"/>
                    <element name="type"           type="xsd:string"/>
                </sequence>
            </complexType>


            <complexType name="DescribeQuickActionResult">
                <sequence>
                    <element name="accessLevelRequired" type="tns:ShareAccessLevel" nillable="true"/> 
                    <element name="actionEnumOrId" type="xsd:string"/> 
                    <element name="canvasApplicationId"    type="tns:ID" nillable="true"/>
                    <element name="canvasApplicationName"    type="xsd:string" nillable="true"/>
                    <element name="colors" type="tns:DescribeColor" minOccurs="0" maxOccurs="unbounded"/> 
                    <element name="contextSobjectType"    type="xsd:string" nillable="true"/> 
                    <element name="defaultValues" type="tns:DescribeQuickActionDefaultValue" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
                    <element name="flowDevName" type="xsd:string" nillable="true"/>
                    <element name="flowRecordIdVar" type="xsd:string" nillable="true"/>
                    <element name="height"        type="xsd:int" nillable="true"/>
                    <element name="iconName"      type="xsd:string" nillable="true"/>
                    <element name="iconUrl"       type="xsd:string" nillable="true"/>
                    <element name="icons"            type="tns:DescribeIcon" minOccurs="0" maxOccurs="unbounded"/>
                    <element name="label"        type="xsd:string"/>
                    <element name="layout"          type="tns:DescribeLayoutSection" nillable="true"/>
                    <element name="lightningComponentBundleId" type="tns:ID" nillable="true"/>
                    <element name="lightningComponentBundleName" type="xsd:string" nillable="true"/>
                    <element name="lightningComponentQualifiedName" type="xsd:string" nillable="true"/>
                    <element name="miniIconUrl"      type="xsd:string" nillable="true"/>
                    <element name="name"         type="xsd:string"/>
                    <element name="showQuickActionLcHeader" type="xsd:boolean"/> 
                    <element name="showQuickActionVfHeader" type="xsd:boolean"/> 
                                        <element name="targetParentField"    type="xsd:string" nillable="true"/>
                    <element name="targetRecordTypeId"   type="tns:ID" nillable="true"/>
                    <element name="targetSobjectType"    type="xsd:string" nillable="true"/>
                    <element name="type"         type="xsd:string"/>
                    <element name="visualforcePageName"    type="xsd:string" nillable="true"/>
                    <element name="visualforcePageUrl" type="xsd:string" nillable="true"/> 
                    <element name="width"         type="xsd:int" nillable="true"/>
                </sequence>
            </complexType>

            <complexType name="DescribeQuickActionDefaultValue">
                <sequence>
                    <element name="defaultValue"	type="xsd:string" nillable="true"/>
                    <element name="field" 		type="xsd:string" nillable="false"/>
                </sequence>
            </complexType>



        <complexType name="DescribeVisualForceResult">
            <sequence>
                <element name="domain" type="xsd:string"/>
            </sequence>
        </complexType>


            <simpleType name="ShareAccessLevel">
                <restriction base="xsd:string">
                    <enumeration value="Read"/>
                    <enumeration value="Edit"/>
                    <enumeration value="All"/>
                </restriction>
            </simpleType>




            <complexType name="ProcessResult">
                <sequence>
                    <element name="actorIds"        type="tns:ID" nillable="false" minOccurs="0" maxOccurs="unbounded"/>
                    <element name="entityId"        type="tns:ID" nillable="true"/>
                    <element name="errors"          type="tns:Error" minOccurs="0" maxOccurs="unbounded"/>
                    <element name="instanceId"      type="tns:ID" nillable="true"/>
                    <element name="instanceStatus"  type="xsd:string" nillable="true"/>
                    <element name="newWorkitemIds"  type="tns:ID" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
                    <element name="success"         type="xsd:boolean"/>
                </sequence>
            </complexType>





            <complexType name="DeleteResult">
                <sequence>
                    <element name="errors"    type="tns:Error" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
                    <element name="id"        type="tns:ID" nillable="true"/>
                    <element name="success"   type="xsd:boolean"/>
                </sequence>
            </complexType>

            <complexType name="UndeleteResult">
                <sequence>
                    <element name="errors"    type="tns:Error" minOccurs="0" maxOccurs="unbounded"/>
                    <element name="id"        type="tns:ID" nillable="true"/>
                    <element name="success"   type="xsd:boolean"/>
                </sequence>
            </complexType>

            <complexType name="EmptyRecycleBinResult">
                <sequence>
                    <element name="errors"    type="tns:Error" minOccurs="0" maxOccurs="unbounded"/>
                    <element name="id"        type="tns:ID" nillable="true"/>
                    <element name="success"   type="xsd:boolean"/>
                </sequence>
            </complexType>

            <complexType name="LeadConvert">
                <sequence>
                    <element name="accountId"              type="tns:ID" nillable="true"/>
                    <element name="accountRecord" type="ens:sObject"/>
                    <element name="bypassAccountDedupeCheck" type="xsd:boolean" nillable="true"/>
                    <element name="bypassContactDedupeCheck" type="xsd:boolean" nillable="true"/> 
                    <element name="contactId"              type="tns:ID" nillable="true"/>
                    <element name="contactRecord" type="ens:sObject"/>
                    <element name="convertedStatus"        type="xsd:string"/>
                    <element name="doNotCreateOpportunity" type="xsd:boolean"/>
                    <element name="leadId"                 type="tns:ID"/>
                    <element name="opportunityId"          type="tns:ID" nillable="true"/>
                    <element name="opportunityName"        type="xsd:string" nillable="true"/>
                    <element name="opportunityRecord" type="ens:sObject"/>
                    <element name="overwriteLeadSource"    type="xsd:boolean"/>
                    <element name="ownerId"                type="tns:ID"     nillable="true"/>
                    <element name="sendNotificationEmail"  type="xsd:boolean"/>
                </sequence>
            </complexType>

            <complexType name="LeadConvertResult">
                <sequence>
                    <element name="accountId"     type="tns:ID" nillable="true"/>
                    <element name="contactId"     type="tns:ID" nillable="true"/>
                    <element name="errors"        type="tns:Error" minOccurs="0" maxOccurs="unbounded"/>
                    <element name="leadId"        type="tns:ID" nillable="true"/>
                    <element name="opportunityId" type="tns:ID" nillable="true"/>
                    <element name="success"       type="xsd:boolean"/>
                </sequence>
            </complexType>



            <complexType name="DescribeSObjectResult">
                <sequence>
                    <element name="actionOverrides"	  type="tns:ActionOverride" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
                    <element name="activateable"        type="xsd:boolean"/>
                    <element name="childRelationships"  type="tns:ChildRelationship" minOccurs="0" maxOccurs="unbounded"/>
                    <element name="compactLayoutable"   type="xsd:boolean"/>
                    <element name="createable"          type="xsd:boolean"/>
                    <element name="custom"              type="xsd:boolean"/>
                    <element name="customSetting"       type="xsd:boolean"/>
                    <element name="deletable"           type="xsd:boolean"/>
                    <element name="deprecatedAndHidden" type="xsd:boolean"/>
                    <element name="feedEnabled"         type="xsd:boolean"/>
                    <element name="fields"              type="tns:Field" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
                    <element name="hasSubtypes"         type="xsd:boolean"/>
                    <element name="idEnabled"           type="xsd:boolean"/>
                    <element name="isSubtype"           type="xsd:boolean"/>
                    <element name="keyPrefix"           type="xsd:string" nillable="true"/>
                    <element name="label"               type="xsd:string"/>
                    <element name="labelPlural"         type="xsd:string"/>
                    <element name="layoutable"          type="xsd:boolean"/>
                    <element name="mergeable"           type="xsd:boolean"/>
                    <element name="mruEnabled"          type="xsd:boolean"/>
                    <element name="name"                type="xsd:string"/>
                    <element name="namedLayoutInfos"    type="tns:NamedLayoutInfo" minOccurs="0" maxOccurs="unbounded"/>
                    <element name="networkScopeFieldName"                type="xsd:string" nillable="true"/>
                    <element name="queryable"           type="xsd:boolean"/>
                    <element name="recordTypeInfos"     type="tns:RecordTypeInfo" minOccurs="0" maxOccurs="unbounded"/>
                    <element name="replicateable"       type="xsd:boolean"/>
                    <element name="retrieveable"        type="xsd:boolean"/>
                    <element name="searchLayoutable"    type="xsd:boolean" minOccurs="0"/>
                    <element name="searchable"          type="xsd:boolean" />
                    <element name="supportedScopes"     type="tns:ScopeInfo" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
                    <element name="triggerable"         type="xsd:boolean" minOccurs="0"/>
                    <element name="undeletable"         type="xsd:boolean"/>
                    <element name="updateable"          type="xsd:boolean"/>
                    <element name="urlDetail"           type="xsd:string" nillable="true"/>
                    <element name="urlEdit"             type="xsd:string" nillable="true"/>
                    <element name="urlNew"              type="xsd:string" nillable="true"/>
                </sequence>
            </complexType>



            <!-- this is a subset of properties for each SObject that is returned by the describeGlobal call -->
            <complexType name="DescribeGlobalSObjectResult">
                <sequence>
                    <element name="activateable"        type="xsd:boolean"/>
                    <element name="createable"          type="xsd:boolean"/>
                    <element name="custom"              type="xsd:boolean"/>
                    <element name="customSetting"       type="xsd:boolean"/>
                    <element name="deletable"           type="xsd:boolean"/>
                    <element name="deprecatedAndHidden" type="xsd:boolean"/>
                    <element name="feedEnabled"         type="xsd:boolean"/>
                    <element name="hasSubtypes"         type="xsd:boolean"/>
                    <element name="idEnabled"           type="xsd:boolean"/>
                    <element name="isSubtype"           type="xsd:boolean"/>
                    <element name="keyPrefix"           type="xsd:string" nillable="true"/>
                    <element name="label"               type="xsd:string"/>
                    <element name="labelPlural"         type="xsd:string"/>
                    <element name="layoutable"          type="xsd:boolean"/>
                    <element name="mergeable"           type="xsd:boolean"/>
                    <element name="mruEnabled"           type="xsd:boolean"/>
                    <element name="name"                type="xsd:string"/>
                    <element name="queryable"           type="xsd:boolean"/>
                    <element name="replicateable"       type="xsd:boolean"/>
                    <element name="retrieveable"        type="xsd:boolean"/>
                    <element name="searchable"          type="xsd:boolean"/>
                    <element name="triggerable"         type="xsd:boolean"/>
                    <element name="undeletable"         type="xsd:boolean"/>
                    <element name="updateable"          type="xsd:boolean"/>
                </sequence>
            </complexType>

            <complexType name="ChildRelationship">
                <sequence>
                    <element name="cascadeDelete"    type="xsd:boolean"/>
                    <element name="childSObject"     type="xsd:string"/>
                    <element name="deprecatedAndHidden" type="xsd:boolean"/>
                    <element name="field"            type="xsd:string"/>
                    <element name="junctionIdListNames" type="xsd:string" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
                    <element name="junctionReferenceTo" type="xsd:string" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
                    <element name="relationshipName" type="xsd:string" minOccurs="0"/>
                    <element name="restrictedDelete" type="xsd:boolean" minOccurs="0"/>
                </sequence>
            </complexType>

            <complexType name="DescribeGlobalResult">
                <sequence>
                    <element name="encoding"       type="xsd:string" nillable="true"/>
                    <element name="maxBatchSize"   type="xsd:int"/>
                    <element name="sobjects"       type="tns:DescribeGlobalSObjectResult" minOccurs="0" maxOccurs="unbounded"/>
                </sequence>
            </complexType>


            <complexType name="DescribeGlobalTheme">
                <sequence>
                    <element name="global"       type="tns:DescribeGlobalResult"/>
                    <element name="theme"       type="tns:DescribeThemeResult"/>
                </sequence>
            </complexType>



            <complexType name="ScopeInfo">
                <sequence>
                    <element name="label"      type="xsd:string"/>
                    <element name="name"       type="xsd:string"/>
                </sequence>
            </complexType>



           


        <simpleType name="fieldType">
                <restriction base="xsd:string">
                    <enumeration value="string"/>
                    <enumeration value="picklist"/>
                    <enumeration value="multipicklist"/>
                    <enumeration value="combobox"/>
                    <enumeration value="reference"/>
                    <enumeration value="base64"/>
                    <enumeration value="boolean"/>
                    <enumeration value="currency"/>
                    <enumeration value="textarea"/>
                    <enumeration value="int"/>
                    <enumeration value="double"/>
                    <enumeration value="percent"/>
                    <enumeration value="phone"/>
                    <enumeration value="id"/>
                    <enumeration value="date"/>
                    <enumeration value="datetime"/>
                    <enumeration value="time"/>
                    <enumeration value="url"/>
                    <enumeration value="email"/>
                    <enumeration value="encryptedstring"/>
                    <enumeration value="datacategorygroupreference"/>
                    <enumeration value="location"/>
                    <enumeration value="address"/>
                    <enumeration value="anyType"/> <!-- can be string, picklist, reference, boolean, currency, int, double, percent, id, date, datetime, url, email -->


                    <enumeration value="complexvalue"/>

                </restriction>
            </simpleType>

            <simpleType name="soapType">
                <restriction base="xsd:string">
                    <enumeration value="tns:ID"/>
                    <enumeration value="xsd:base64Binary"/>
                    <enumeration value="xsd:boolean"/>
                    <enumeration value="xsd:double"/>
                    <enumeration value="xsd:int"/>
                    <enumeration value="xsd:string"/>
                    <enumeration value="xsd:date"/>
                    <enumeration value="xsd:dateTime"/>
                    <enumeration value="xsd:time"/>

                    <enumeration value="tns:location" />
                    <enumeration value="tns:address" />

                    <enumeration value="xsd:anyType"/> <!-- can be id, booolean, double, int, string, date, dateTime -->


                    <enumeration value="urn:RelationshipReferenceTo" />


                    <enumeration value="urn:JunctionIdListNames" />


                    <enumeration value="urn:SearchLayoutFieldsDisplayed" />
                    <enumeration value="urn:SearchLayoutField" />
                    <enumeration value="urn:SearchLayoutButtonsDisplayed" />
                    <enumeration value="urn:SearchLayoutButton" />


                    <enumeration value="urn:RecordTypesSupported" />






                </restriction>
            </simpleType>

            <complexType name="FilteredLookupInfo">
                        <sequence>
                            <element name="controllingFields"             type="xsd:string" minOccurs="0" maxOccurs="unbounded"/>
                            <element name="dependent"              type="xsd:boolean"/>
                            <element name="optionalFilter"              type="xsd:boolean"/>

                        </sequence>
            </complexType>

            <complexType name="Field">
                <sequence>
                    <element name="aggregatable"               type="xsd:boolean"/>
                    <element name="autoNumber"                 type="xsd:boolean"/>
                    <element name="byteLength"                 type="xsd:int"/>
                    <element name="calculated"                 type="xsd:boolean"/>
                    <element name="calculatedFormula"          type="xsd:string" minOccurs="0"/>
                    <element name="cascadeDelete"              type="xsd:boolean" minOccurs="0"/>
                    <element name="caseSensitive"              type="xsd:boolean"/>
                    <element name="compoundFieldName"          type="xsd:string" minOccurs="0"/>
                    <element name="controllerName"             type="xsd:string" minOccurs="0"/>
                    <element name="createable"                 type="xsd:boolean"/>
                    <element name="custom"                     type="xsd:boolean"/>
                    <element name="defaultValue"               type="xsd:anyType" minOccurs="0"/>
                    <element name="defaultValueFormula"        type="xsd:string" minOccurs="0"/>
                    <element name="defaultedOnCreate"          type="xsd:boolean"/>
                    <element name="dependentPicklist"          type="xsd:boolean" minOccurs="0"/>
                    <element name="deprecatedAndHidden"        type="xsd:boolean"/>
                    <element name="digits"                     type="xsd:int"/>
                    <element name="displayLocationInDecimal"   type="xsd:boolean" minOccurs="0"/>
                    <element name="encrypted"                  type="xsd:boolean" minOccurs="0"/>
                    <element name="externalId"                 type="xsd:boolean" minOccurs="0"/>
                    <element name="extraTypeInfo"              type="xsd:string"  minOccurs="0"/>
                    <element name="filterable"                 type="xsd:boolean"/>

                    <element name="filteredLookupInfo"			   type="tns:FilteredLookupInfo" nillable="true" minOccurs="0" />

                    <element name="groupable"                  type="xsd:boolean"/>
                    <element name="highScaleNumber"			   type="xsd:boolean" minOccurs="0" />
                    <element name="htmlFormatted"              type="xsd:boolean" minOccurs="0"/>
                    <element name="idLookup"                   type="xsd:boolean"/>
                    <element name="inlineHelpText"             type="xsd:string" minOccurs="0"/>
                    <element name="label"                      type="xsd:string"/>
                    <element name="length"                     type="xsd:int"/>
                    <element name="mask"                       type="xsd:string"  minOccurs="0"/>
                    <element name="maskType"                   type="xsd:string"  minOccurs="0"/>
                    <element name="name"                       type="xsd:string"/>
                    <element name="nameField"                  type="xsd:boolean"/>
                    <element name="namePointing"               type="xsd:boolean" minOccurs="0"/>
                    <element name="nillable"                   type="xsd:boolean"/>
                    <element name="permissionable"             type="xsd:boolean"/>
                    <element name="picklistValues"             type="tns:PicklistEntry" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
                 <element name="polymorphicForeignKey"        type="xsd:boolean"/>
                    <element name="precision"                  type="xsd:int"/>
                    <element name="queryByDistance"            type="xsd:boolean" />
                    <element name="referenceTargetField"       type="xsd:string" minOccurs="0"/>
                    <element name="referenceTo"                type="xsd:string" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
                    <element name="relationshipName"           type="xsd:string" minOccurs="0"/>
                    <element name="relationshipOrder"          type="xsd:int" minOccurs="0"/>
                    <element name="restrictedDelete"           type="xsd:boolean" minOccurs="0"/>
                    <element name="restrictedPicklist"         type="xsd:boolean"/>
                    <element name="scale"                      type="xsd:int"/>
                    <element name="searchPrefilterable"        type="xsd:boolean"/>
                    <element name="soapType"                   type="tns:soapType"/>
                    <element name="sortable"                   type="xsd:boolean" minOccurs="0"/>
                    <element name="type"                       type="tns:fieldType"/>
                    <element name="unique"                     type="xsd:boolean"/>
                    <element name="updateable"                 type="xsd:boolean"/>
                    <element name="writeRequiresMasterRead"    type="xsd:boolean" minOccurs="0"/>
                </sequence>
            </complexType>

            <complexType name="PicklistEntry">
                <sequence>
                    <element name="active"       type="xsd:boolean"/>
                    <element name="defaultValue" type="xsd:boolean"/>
                    <element name="label"        type="xsd:string" nillable="true"/>
                    <element name="validFor"     type="xsd:base64Binary" minOccurs="0"/>
                    <element name="value"        type="xsd:string"/>
                </sequence>
            </complexType>

            <complexType name="DescribeDataCategoryGroupResult">
                <sequence>
                    <element name="categoryCount" type="xsd:int"/>
                    <element name="description"   type="xsd:string"/>
                    <element name="label"         type="xsd:string"/>
                    <element name="name"          type="xsd:string"/>
                    <element name="sobject"       type="xsd:string"/>
                </sequence>
            </complexType>

            <complexType name="DescribeDataCategoryGroupStructureResult">
                <sequence>
                    <element name="description"   type="xsd:string"/>
                    <element name="label"         type="xsd:string"/>
                    <element name="name"          type="xsd:string"/>
                    <element name="sobject"       type="xsd:string"/>
                    <element name="topCategories" type="tns:DataCategory" minOccurs="0" maxOccurs="unbounded"/>
                </sequence>
            </complexType>

            <complexType name="DataCategoryGroupSobjectTypePair">
                <sequence>
                    <element name="dataCategoryGroupName" type="xsd:string"/>
                    <element name="sobject"               type="xsd:string"/>
                </sequence>
            </complexType>

            <complexType name="DataCategory">
                <sequence>
                    <element name="childCategories" type="tns:DataCategory" minOccurs="0" maxOccurs="unbounded"/>
                    <element name="label"           type="xsd:string"/>
                    <element name="name"            type="xsd:string"/>
                </sequence>
            </complexType>


            <complexType name="KnowledgeSettings">
                   <sequence>
                       <element name="defaultLanguage"  type="xsd:string" minOccurs="0" />
                       <element name="knowledgeEnabled" type="xsd:boolean"/>
                       <element name="languages"        type="tns:KnowledgeLanguageItem" minOccurs="0" maxOccurs="unbounded"/>
                   </sequence>
            </complexType>

            <complexType name="KnowledgeLanguageItem">
                   <sequence>
                       <element name="active" type="xsd:boolean"/>
                       <element name="name" type="xsd:string" />
                   </sequence>
            </complexType>


            <simpleType name="differenceType">
                   <restriction base="xsd:string">
                       <enumeration value="DIFFERENT"/>
                       <enumeration value="NULL"/>
                       <enumeration value="SAME"/>
                       <enumeration value="SIMILAR"/>
                   </restriction>
            </simpleType>

            <complexType name="FieldDiff">
                   <sequence>
                       <element name="difference" type="tns:differenceType" nillable="false" minOccurs="1" maxOccurs="1"/>
                       <element name="name" type="xsd:string" />
                   </sequence>
            </complexType>

            <complexType name="AdditionalInformationMap">
                   <sequence>
                       <element name="name" type="xsd:string" />
                       <element name="value" type="xsd:string" />
                   </sequence>
            </complexType>

            <complexType name="MatchRecord">
                   <sequence>
                       <element name="additionalInformation" minOccurs="0" maxOccurs="unbounded" type="tns:AdditionalInformationMap"/>
                       <element name="fieldDiffs" minOccurs="0" maxOccurs="unbounded" type="tns:FieldDiff"/>
                       <element name="matchConfidence" type="xsd:double"/>
                       <element name="record" type="ens:sObject"/>
                   </sequence>
            </complexType>

            <complexType name="MatchResult">
                   <sequence>
                       <element name="entityType" type="xsd:string" />
                       <element name="errors"    type="tns:Error" minOccurs="0" maxOccurs="unbounded"/>
                       <element name="matchEngine" type="xsd:string" />
                       <element name="matchRecords" minOccurs="0" maxOccurs="unbounded" type="tns:MatchRecord"/>
                       <element name="rule" type="xsd:string" />
                       <element name="size" type="xsd:int"/>
                       <element name="success"   type="xsd:boolean"/>
                   </sequence>
            </complexType>

            <complexType name="DuplicateResult">
                   <sequence>
                       <element name="allowSave" type="xsd:boolean"/>
                       <element name="duplicateRule" type="xsd:string"/>
                       <element name="duplicateRuleEntityType" type="xsd:string"/>
                       <element name="errorMessage" type="xsd:string" nillable="true"/>
                       <element name="matchResults" minOccurs="0" maxOccurs="unbounded" type="tns:MatchResult"/>
                   </sequence>
            </complexType>

            <complexType name="DuplicateError">
                <complexContent>
                    <extension base="tns:Error">
                        <sequence>
                          <element name="duplicateResult" type="tns:DuplicateResult"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>


            <complexType name="DescribeNounResult">
                <sequence>
                     <element name="caseValues" minOccurs="0" maxOccurs="unbounded" type="tns:NameCaseValue"/>
                       <element name="developerName" type="xsd:string"/>
                    <element name="gender" nillable="true" type="tns:Gender"/>
                       <element name="name" type="xsd:string"/>
                       <element name="pluralAlias" type="xsd:string" nillable="true"/>
                    <element name="startsWith" nillable="true" type="tns:StartsWith"/>
                </sequence>
            </complexType>

           <complexType name="NameCaseValue">
                <sequence>
                     <element name="article" nillable="true" type="tns:Article"/>
                     <element name="caseType" nillable="true"  type="tns:CaseType"/>
                     <element name="number" nillable="true" type="tns:GrammaticalNumber"/>
                     <element name="possessive" nillable="true"  type="tns:Possessive"/>
                     <element name="value" nillable="true" type="xsd:string"/>
                </sequence>
           </complexType>

            <simpleType name="Article">
                <restriction base="xsd:string">
                    <enumeration value="None"/>
                    <enumeration value="Indefinite"/>
                    <enumeration value="Definite"/>
                </restriction>
            </simpleType>
            <simpleType name="CaseType">
                <restriction base="xsd:string">
                    <enumeration value="Nominative"/>
                    <enumeration value="Accusative"/>
                    <enumeration value="Genitive"/>
                    <enumeration value="Dative"/>
                    <enumeration value="Inessive"/>
                    <enumeration value="Elative"/>
                    <enumeration value="Illative"/>
                    <enumeration value="Adessive"/>
                    <enumeration value="Ablative"/>
                    <enumeration value="Allative"/>
                    <enumeration value="Essive"/>
                    <enumeration value="Translative"/>
                    <enumeration value="Partitive"/>
                    <enumeration value="Objective"/>
                    <enumeration value="Subjective"/>
                    <enumeration value="Instrumental"/>
                    <enumeration value="Prepositional"/>
                    <enumeration value="Locative"/>
                    <enumeration value="Vocative"/>
                    <enumeration value="Sublative"/>
                    <enumeration value="Superessive"/>
                    <enumeration value="Delative"/>
                    <enumeration value="Causalfinal"/>
                    <enumeration value="Essiveformal"/>
                    <enumeration value="Termanative"/>
                    <enumeration value="Distributive"/>
                    <enumeration value="Ergative"/>
                    <enumeration value="Adverbial"/>
                    <enumeration value="Abessive"/>
                    <enumeration value="Comitative"/>
                </restriction>
            </simpleType>
            <simpleType name="Gender">
                <restriction base="xsd:string">
                    <enumeration value="Neuter"/>
                    <enumeration value="Masculine"/>
                    <enumeration value="Feminine"/>
                    <enumeration value="AnimateMasculine"/>
                </restriction>
            </simpleType>
            <simpleType name="GrammaticalNumber">
                <restriction base="xsd:string">
                    <enumeration value="Singular"/>
                    <enumeration value="Plural"/>
                </restriction>
            </simpleType>
            <simpleType name="Possessive">
                <restriction base="xsd:string">
                    <enumeration value="None"/>
                    <enumeration value="First"/>
                    <enumeration value="Second"/>
                </restriction>
            </simpleType>
            <simpleType name="StartsWith">
                <restriction base="xsd:string">
                    <enumeration value="Consonant"/>
                    <enumeration value="Vowel"/>
                    <enumeration value="Special"/>
                </restriction>
            </simpleType>





            <element name="findDuplicates">
                <complexType>
                    <sequence>
                        <element name="sObjects" type="ens:sObject" minOccurs="0" maxOccurs="unbounded"/>
                    </sequence>
                </complexType>
            </element>

            <element name="findDuplicatesByIds">
                <complexType>
                    <sequence>
                        <element name="ids" type="tns:ID" minOccurs="1" maxOccurs="unbounded"/>
                    </sequence>
                </complexType>
            </element>
            <element name="findDuplicatesByIdsResponse">
                <complexType>
                    <sequence>
                        <element name="result" type="tns:FindDuplicatesResult" minOccurs="0" maxOccurs="unbounded"/>
                    </sequence>
                </complexType>
            </element>

            <element name="findDuplicatesResponse">
                <complexType>
                    <sequence>
                        <element name="result" type="tns:FindDuplicatesResult" minOccurs="0" maxOccurs="unbounded"/>
                    </sequence>
                </complexType>
            </element>

            <complexType name="FindDuplicatesResult">
                <sequence>
                    <element name="duplicateResults" type="tns:DuplicateResult" minOccurs="0" maxOccurs="unbounded"/>
                    <element name="errors"    type="tns:Error" minOccurs="0" maxOccurs="unbounded"/>
                    <element name="success"   type="xsd:boolean"/>
                </sequence>
            </complexType>



            <complexType name="DescribeAppMenuResult">
                <sequence>
                    <element name="appMenuItems"    type="tns:DescribeAppMenuItem" minOccurs="0" maxOccurs="unbounded"/>
                </sequence>
            </complexType>

            <complexType name="DescribeAppMenuItem">
                <sequence>
                    <element name="colors"           type="tns:DescribeColor" minOccurs="0" maxOccurs="unbounded"/>
                    <element name="content"         type="xsd:string"/>
                    <element name="icons"           type="tns:DescribeIcon" minOccurs="0" maxOccurs="unbounded"/>
                    <element name="label"           type="xsd:string"/>
                    <element name="name"            type="xsd:string"/>
                    <element name="type"            type="xsd:string"/>
                    <element name="url"             type="xsd:string"/>
                </sequence>
            </complexType>



            <complexType name="DescribeThemeResult">
                <sequence>
                    <element name="themeItems"    type="tns:DescribeThemeItem" minOccurs="0" maxOccurs="unbounded"/>
                </sequence>
            </complexType>

            <complexType name="DescribeThemeItem">
                <sequence>
                    <element name="colors" type="tns:DescribeColor" minOccurs="0" maxOccurs="unbounded"/>
                    <element name="icons" type="tns:DescribeIcon" minOccurs="0" maxOccurs="unbounded"/>
                    <element name="name"            type="xsd:string"/>
                </sequence>
            </complexType>

            <complexType name="DescribeSoftphoneLayoutResult">
                <sequence>
                    <element name="callTypes" type="tns:DescribeSoftphoneLayoutCallType" minOccurs="1" maxOccurs="unbounded"/>
                    <element name="id" type="tns:ID"/>
                    <element name="name" type="xsd:string"/>
                </sequence>
            </complexType>

            <complexType name="DescribeSoftphoneLayoutCallType">
                <sequence>
                    <element name="infoFields" type="tns:DescribeSoftphoneLayoutInfoField" minOccurs="1" maxOccurs="unbounded"/>
                    <element name="name" type="xsd:string"/>
                    <element name="screenPopOptions" type="tns:DescribeSoftphoneScreenPopOption" minOccurs="0" maxOccurs="unbounded"/>
                    <element name="screenPopsOpenWithin" type="xsd:string" minOccurs="0"/>
                    <element name="sections" type="tns:DescribeSoftphoneLayoutSection" minOccurs="0" maxOccurs="unbounded"/>
                </sequence>
            </complexType>

            <complexType name="DescribeSoftphoneScreenPopOption">
                <sequence>
                    <element name="matchType" type="xsd:string"/>
                    <element name="screenPopData" type="xsd:string"/>
                    <element name="screenPopType" type="xsd:string"/>
                </sequence>
            </complexType>

            <complexType name="DescribeSoftphoneLayoutInfoField">
                <sequence>
                    <element name="name" type="xsd:string"/>
                </sequence>
            </complexType>

            <complexType name="DescribeSoftphoneLayoutSection">
                <sequence>
                    <element name="entityApiName" type="xsd:string"/>
                    <element name="items" type="tns:DescribeSoftphoneLayoutItem" minOccurs="1" maxOccurs="unbounded"/>
                </sequence>
            </complexType>

            <complexType name="DescribeSoftphoneLayoutItem">
                <sequence>
                    <element name="itemApiName" type="xsd:string"/>
                </sequence>
            </complexType>


            <complexType name="DescribeCompactLayoutsResult">
                <sequence>
                    <element name="compactLayouts" type="tns:DescribeCompactLayout" minOccurs="1" maxOccurs="unbounded"/>
                    <element name="defaultCompactLayoutId" type="tns:ID"/>
                    <element name="recordTypeCompactLayoutMappings" type="tns:RecordTypeCompactLayoutMapping" minOccurs="0" maxOccurs="unbounded"/>
                </sequence>
            </complexType>

            <complexType name="DescribeCompactLayout">
                <sequence>
                    <element name="actions" type="tns:DescribeLayoutButton" minOccurs="0" maxOccurs="unbounded"/>
                    <element name="fieldItems" type="tns:DescribeLayoutItem" minOccurs="0" maxOccurs="unbounded"/>
                    <element name="id" type="tns:ID"/>
                    <element name="imageItems" type="tns:DescribeLayoutItem" minOccurs="0" maxOccurs="unbounded"/>
                    <element name="label" type="xsd:string"/>
                    <element name="name" type="xsd:string"/>
                    <element name="objectType" type="xsd:string"/> 
                </sequence>
            </complexType>

            <complexType name="RecordTypeCompactLayoutMapping">
                <sequence>
                    <element name="available" type="xsd:boolean"/>
                    <element name="compactLayoutId" type="tns:ID" nillable="true"/>
                    <element name="compactLayoutName" type="xsd:string"/>
                    <element name="recordTypeId" type="tns:ID"/>
                    <element name="recordTypeName" type="xsd:string"/>
                </sequence>
            </complexType>


            <complexType name="DescribePathAssistantsResult">
                <sequence>
                    <element name="pathAssistants" type="tns:DescribePathAssistant" minOccurs="0" maxOccurs="unbounded"/>
                </sequence>
            </complexType>

            <complexType name="DescribePathAssistant">
                <sequence>
                    <element name="active" type="xsd:boolean"/>
                    <element name="apiName" type="xsd:string"/>
                    <element name="label" type="xsd:string"/>
                    <element name="pathPicklistField" type="xsd:string"/>
                    <element name="picklistsForRecordType" type="tns:PicklistForRecordType" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
                    <element name="recordTypeId" type="tns:ID" nillable="true"/>
                    <element name="steps" type="tns:DescribePathAssistantStep" minOccurs="0" maxOccurs="unbounded"/>
                </sequence>
            </complexType>

            <complexType name="DescribePathAssistantStep">
                <sequence>
                    <element name="closed" type="xsd:boolean"/>
                    <element name="converted" type="xsd:boolean"/>
                    <element name="fields" type="tns:DescribePathAssistantField" minOccurs="0" maxOccurs="unbounded"/>
                    <element name="info" type="xsd:string"/>
                    <element name="layoutSection" type="tns:DescribeLayoutSection"/>
                    <element name="picklistLabel" type="xsd:string"/>
                    <element name="picklistValue" type="xsd:string"/>
                    <element name="won" type="xsd:boolean"/>
                </sequence>
            </complexType>

            <complexType name="DescribePathAssistantField">
                <sequence>
                    <element name="apiName" type="xsd:string"/>
                    <element name="label" type="xsd:string"/>
                    <element name="readOnly" type="xsd:boolean"/>
                    <element name="required" type="xsd:boolean"/>
                </sequence>
            </complexType>


            <complexType name="DescribeApprovalLayoutResult">
                <sequence>
                    <element name="approvalLayouts" type="tns:DescribeApprovalLayout" minOccurs="0" maxOccurs="unbounded"/>
                </sequence>
            </complexType>

            <complexType name="DescribeApprovalLayout">
                <sequence>
                    <element name="id" type="tns:ID"/>
                    <element name="label" type="xsd:string"/>
                    <element name="layoutItems" type="tns:DescribeLayoutItem" minOccurs="1" maxOccurs="unbounded"/>
                    <element name="name" type="xsd:string"/>
                </sequence>
            </complexType>



            <complexType name="DescribeLayoutResult">
                <sequence>
                    <element name="layouts"            type="tns:DescribeLayout" minOccurs="1" maxOccurs="unbounded"/>
                    <element name="recordTypeMappings" type="tns:RecordTypeMapping" minOccurs="0" maxOccurs="unbounded"/>
                    <element name="recordTypeSelectorRequired" type="xsd:boolean" />
                </sequence>
            </complexType>

            <complexType name="DescribeLayout">
                <sequence>
                    <element name="buttonLayoutSection"  type="tns:DescribeLayoutButtonSection" minOccurs="0"/>
                    <element name="detailLayoutSections" type="tns:DescribeLayoutSection" minOccurs="0" maxOccurs="unbounded"/>
                    <element name="editLayoutSections"   type="tns:DescribeLayoutSection" minOccurs="0" maxOccurs="unbounded"/>

                    <element name="feedView"                    type="tns:DescribeLayoutFeedView" minOccurs="0" />


                    <element name="highlightsPanelLayoutSection"  type="tns:DescribeLayoutSection" minOccurs="0" />

                    <element name="id"                   type="tns:ID" nillable="true"/>



                    <element name="quickActionList"             type="tns:DescribeQuickActionListResult" minOccurs="0" />


                    <element name="relatedContent"                type="tns:RelatedContent" minOccurs="0" maxOccurs="1"/>

                    <element name="relatedLists"                type="tns:RelatedList" minOccurs="0" maxOccurs="unbounded"/>

                    <element name="saveOptions"                    type="tns:DescribeLayoutSaveOption" minOccurs="0" maxOccurs="unbounded" />

                </sequence>
            </complexType>


            <complexType name="DescribeQuickActionListResult">
                <sequence>
                    <element name="quickActionListItems"       type="tns:DescribeQuickActionListItemResult" minOccurs="0" maxOccurs="unbounded"/>
                </sequence>
            </complexType>

            <complexType name="DescribeQuickActionListItemResult">
                <sequence>
                    <element name="accessLevelRequired"    type="tns:ShareAccessLevel" nillable="true"/> 
                    <element name="colors" type="tns:DescribeColor" minOccurs="0" maxOccurs="unbounded"/> 
                    <element name="iconUrl"       type="xsd:string" nillable="true"/>
                    <element name="icons" type="tns:DescribeIcon" minOccurs="0" maxOccurs="unbounded"/>
                    <element name="label"        type="xsd:string"/>
                    <element name="miniIconUrl"      type="xsd:string" />
                    <element name="quickActionName"        type="xsd:string" />
                    <element name="targetSobjectType"    type="xsd:string" nillable="true"/>
                    <element name="type"         type="xsd:string"/>
                </sequence>
            </complexType>


            <complexType name="DescribeLayoutFeedView">
                <sequence>
                    <element name="feedFilters" type="tns:DescribeLayoutFeedFilter" minOccurs="0" maxOccurs="unbounded"/>
                </sequence>
            </complexType>

            <simpleType name="FeedLayoutFilterType">
                <restriction base="xsd:string">
                    <enumeration value="AllUpdates"/>
                    <enumeration value="FeedItemType"/>
                    <enumeration value="Custom"/>
                </restriction>
            </simpleType>

            <complexType name="DescribeLayoutFeedFilter">
                <sequence>
                    <element name="label" type="xsd:string"/>
                    <element name="name"  type="xsd:string"/>
                    <element name="type"  type="tns:FeedLayoutFilterType"/>
                </sequence>
            </complexType>


            <complexType name="DescribeLayoutSaveOption">
                <sequence>
                    <element name="defaultValue" type="xsd:boolean" />
                    <element name="isDisplayed" type="xsd:boolean" />
                    <element name="label" type="xsd:string" />
                    <element name="name" type="xsd:string" />
                    <element name="restHeaderName" type="xsd:string" />
                    <element name="soapHeaderName" type="xsd:string" />
               </sequence>
            </complexType>

            <simpleType name="TabOrderType">
                 <restriction base="xsd:string">
                    <enumeration value="LeftToRight"/>
                    <enumeration value="TopToBottom"/>
                 </restriction>
            </simpleType>

            <complexType name="DescribeLayoutSection">
                <sequence>
                    <element name="collapsed"  	    	    type="xsd:boolean"/>
                    <element name="columns"                 type="xsd:int"/>
                    <element name="heading"                 type="xsd:string" nillable="true"/>
                    <element name="layoutRows"              type="tns:DescribeLayoutRow" minOccurs="1" maxOccurs="unbounded"/>
                    <element name="layoutSectionId"         type="tns:ID" nillable="true"/>
                    <element name="parentLayoutId"          type="tns:ID"/>
                    <element name="rows"                    type="xsd:int"/>
                    <element name="tabOrder"                type="tns:TabOrderType"/>
                    <element name="useCollapsibleSection"   type="xsd:boolean"/>
                    <element name="useHeading"              type="xsd:boolean"/>
                </sequence>
            </complexType>

            <complexType name="DescribeLayoutButtonSection">
                <sequence>
                    <element name="detailButtons"         type="tns:DescribeLayoutButton" minOccurs="1" maxOccurs="unbounded"/>
                </sequence>
            </complexType>
            <complexType name="DescribeLayoutRow">
                <sequence>
                    <element name="layoutItems"      type="tns:DescribeLayoutItem" minOccurs="1" maxOccurs="unbounded"/>
                    <element name="numItems"         type="xsd:int"/>
                </sequence>
            </complexType>

            <complexType name="DescribeLayoutItem">
                <sequence>

                    <element name="editableForNew"         type="xsd:boolean"/>
                    <element name="editableForUpdate"      type="xsd:boolean"/>

                    <element name="label"            type="xsd:string" nillable="true"/>
                    <element name="layoutComponents" type="tns:DescribeLayoutComponent" minOccurs="0" maxOccurs="unbounded"/>
                    <element name="placeholder"      type="xsd:boolean"/>
                    <element name="required"         type="xsd:boolean"/>
                </sequence>
            </complexType>

            <simpleType name="WebLinkWindowType">
                <restriction base="xsd:string">
                    <enumeration value="newWindow"/>
                    <enumeration value="sidebar"/>
                    <enumeration value="noSidebar"/>
                    <enumeration value="replace"/>
                    <enumeration value="onClickJavaScript"/>
                </restriction>
            </simpleType>
            <simpleType name="WebLinkPosition">
                <restriction base="xsd:string">
                    <enumeration value="fullScreen"/>
                    <enumeration value="none"/>
                    <enumeration value="topLeft"/>
                </restriction>
            </simpleType>
            <simpleType name="WebLinkType">
                <restriction base="xsd:string">
                    <enumeration value="url"/>
                    <enumeration value="sControl"/>
                    <enumeration value="javascript"/>
                    <enumeration value="page"/>
                    <enumeration value="flow"/>
                </restriction>
            </simpleType>


            <complexType name="DescribeLayoutButton">
                <sequence>
                 
                    <element name="behavior"       type="tns:WebLinkWindowType" nillable="true" minOccurs="0"/>
                    
                    
                    <element name="colors"            type="tns:DescribeColor" minOccurs="0" maxOccurs="unbounded"/>
                    
                 
                    <element name="content"        type="xsd:string" nillable="true" minOccurs="0"/>
                    <element name="contentSource"        type="tns:WebLinkType" nillable="true" minOccurs="0"/>
                  
                    <element name="custom"           type="xsd:boolean"/>
                   
                    <element name="encoding"        type="xsd:string" nillable="true" minOccurs="0"/>
                    <element name="height"        type="xsd:int" nillable="true" minOccurs="0"/>
                   
                    
                    <element name="icons"            type="tns:DescribeIcon" minOccurs="0" maxOccurs="unbounded"/>
                    
                    <element name="label"            type="xsd:string" nillable="true"/>
                    
                    <element name="menubar"        type="xsd:boolean" nillable="true"/>
                   
                    <element name="name"             type="xsd:string" nillable="true"/>

                    
                    <element name="overridden"        type="xsd:boolean"/>
                    <element name="resizeable"        type="xsd:boolean" nillable="true"/>
                    <element name="scrollbars"        type="xsd:boolean" nillable="true"/>
                    <element name="showsLocation"        type="xsd:boolean" nillable="true"/>
                    <element name="showsStatus"        type="xsd:boolean" nillable="true"/>
                    <element name="toolbar"        type="xsd:boolean" nillable="true"/>
                    <element name="url"        type="xsd:string" nillable="true" minOccurs="0"/>
                    <element name="width"        type="xsd:int" nillable="true" minOccurs="0"/>
                    <element name="windowPosition"        type="tns:WebLinkPosition" nillable="true" minOccurs="0"/>
                    
                </sequence>
            </complexType>

            <complexType name="DescribeLayoutComponent">
                <sequence>
                    <element name="displayLines"      type="xsd:int"/>
                    <element name="tabOrder"          type="xsd:int"/>
                    <element name="type"              type="tns:layoutComponentType"/>
                    <element name="value"             type="xsd:string" nillable="true"/>
                </sequence>
            </complexType>

            <simpleType name="layoutComponentType">
                <restriction base="xsd:string">
                    <enumeration value="ReportChart"/>
                    <enumeration value="Field"/>
                    <enumeration value="Separator"/>
                    <enumeration value="SControl"/>
                    <enumeration value="EmptySpace"/>


                    <enumeration value="VisualforcePage"/>


                    <enumeration value="ExpandedLookup"/>


                    <enumeration value="AuraComponent"/>


                    <enumeration value="Canvas"/>


                    <enumeration value="CustomLink"/>


                    <enumeration value="AnalyticsCloud"/>

                </restriction>
            </simpleType>


            <complexType name="FieldComponent">
                <complexContent>
                    <extension base="tns:DescribeLayoutComponent">
                        <sequence>
                            <element name="field"              type="tns:Field"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>



            <complexType name="FieldLayoutComponent">
                <complexContent>
                    <extension base="tns:DescribeLayoutComponent">
                        <sequence>
                            <element name="components"             type="tns:DescribeLayoutComponent" minOccurs="0" maxOccurs="unbounded"/>
                            <element name="fieldType"              type="tns:fieldType"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>



            <complexType name="VisualforcePage">
                <complexContent>
                    <extension base="tns:DescribeLayoutComponent">
                        <sequence>
                            
                                <element name="showLabel"              type="xsd:boolean"/>
                            
                            <element name="showScrollbars"              type="xsd:boolean"/>
                            <element name="suggestedHeight"              type="xsd:string"/>
                            <element name="suggestedWidth"              type="xsd:string"/>
                            <element name="url"              type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>



            <complexType name="Canvas">
                <complexContent>
                    <extension base="tns:DescribeLayoutComponent">
                        <sequence>
                            <element name="displayLocation"              type="xsd:string"/>
                            <element name="referenceId"              type="xsd:string"/>
                            <element name="showLabel"              type="xsd:boolean"/>
                            <element name="showScrollbars"              type="xsd:boolean"/>
                            <element name="suggestedHeight"              type="xsd:string"/>
                            <element name="suggestedWidth"              type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>


            <complexType name="ReportChartComponent">
                <complexContent>
                    <extension base="tns:DescribeLayoutComponent">
                        <sequence>
                            <element name="cacheData"              type="xsd:boolean"/>
                            <element name="contextFilterableField" type="xsd:string"/>
                            <element name="error"                  type="xsd:string"/>
                            <element name="hideOnError"            type="xsd:boolean"/>
                            <element name="includeContext"         type="xsd:boolean"/>
                            <element name="showTitle"              type="xsd:boolean"/>
                            <element name="size"                   type="tns:ReportChartSize"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="AnalyticsCloudComponent">
                <complexContent>
                    <extension base="tns:DescribeLayoutComponent">
                        <sequence>
                            <element name="error"                  type="xsd:string"/>
                            <element name="filter"                 type="xsd:string"/>
                            <element name="height"                 type="xsd:string"/>
                            <element name="hideOnError"            type="xsd:boolean"/>
                            <element name="showSharing"       	   type="xsd:boolean"/>
                            <element name="showTitle"              type="xsd:boolean"/>
                            <element name="width"                  type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>



            <complexType name="CustomLinkComponent">
                <complexContent>
                    <extension base="tns:DescribeLayoutComponent">
                        <sequence>
                            <element name="customLink"             type="tns:DescribeLayoutButton"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>


            <simpleType name="ReportChartSize">
                <restriction base="xsd:string">
                    <enumeration value="SMALL"/>
                    <enumeration value="MEDIUM"/>
                    <enumeration value="LARGE"/>
                </restriction>
            </simpleType>

            <complexType name="NamedLayoutInfo">
                <sequence>
                    <element name="name" type="xsd:string"/>
                </sequence>
            </complexType>

            <complexType name="RecordTypeInfo">
                <sequence>

                    <element name="active"                    type="xsd:boolean"/>
                    
                    <element name="available"                 type="xsd:boolean"/>
                    <element name="defaultRecordTypeMapping"  type="xsd:boolean"/>

                    <element name="master"                    type="xsd:boolean"/>

                    <element name="name"                      type="xsd:string"/>
                    <element name="recordTypeId"              type="tns:ID" nillable="true"/>
                </sequence>
            </complexType>

            <complexType name="RecordTypeMapping">
                <sequence>

                    <element name="active"                    type="xsd:boolean"/>
     
                    <element name="available"                 type="xsd:boolean"/>
                    <element name="defaultRecordTypeMapping"  type="xsd:boolean"/>
                    <element name="layoutId"                  type="tns:ID"/>

                    <element name="master"                    type="xsd:boolean"/>

                    <element name="name"                      type="xsd:string"/>
                    <element name="picklistsForRecordType"    type="tns:PicklistForRecordType" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
                    <element name="recordTypeId"              type="tns:ID" nillable="true"/>
                </sequence>
            </complexType>

            <complexType name="PicklistForRecordType">
                <sequence>
                    <element name="picklistName"      type="xsd:string"/>
                    <element name="picklistValues"    type="tns:PicklistEntry" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
                </sequence>
            </complexType>


             <complexType name="RelatedContent">
                <sequence>
                    <element name="relatedContentItems"         type="tns:DescribeRelatedContentItem" minOccurs="1" maxOccurs="unbounded"/>
                </sequence>
            </complexType>

            <complexType name="DescribeRelatedContentItem">
                <sequence>
                    <element name="describeLayoutItem"         type="tns:DescribeLayoutItem" maxOccurs="1"/>
                </sequence>
            </complexType>


            <complexType name="RelatedList">
                <sequence>
                    <element name="accessLevelRequiredForCreate"    type="tns:ShareAccessLevel" nillable="true"/> 
 <element name="buttons"    type="tns:DescribeLayoutButton"  maxOccurs="unbounded" minOccurs="0" nillable="true"/> 
                    <element name="columns"         type="tns:RelatedListColumn" minOccurs="1" maxOccurs="unbounded"/>
                    <element name="custom"          type="xsd:boolean"/>
                    <element name="field"           type="xsd:string" nillable="true"/>
                    <element name="label"           type="xsd:string"/>
                    <element name="limitRows"       type="xsd:int"/>
                    <element name="name"            type="xsd:string"/>
                    <element name="sobject"         type="xsd:string" nillable="true"/>
                    <element name="sort"            type="tns:RelatedListSort" minOccurs="0" maxOccurs="unbounded"/>
                </sequence>
            </complexType>

            <complexType name="RelatedListColumn">
                <sequence>
                    <element name="field"           type="xsd:string" nillable="true"/>
                    <element name="fieldApiName"    type="xsd:string"/>
                    <element name="format"          type="xsd:string" nillable="true"/>
                    <element name="label"           type="xsd:string"/>
                    <element name="lookupId"        type="xsd:string"  nillable="true" minOccurs="0"/>
                    <element name="name"            type="xsd:string"/>
                </sequence>
            </complexType>

            <complexType name="RelatedListSort">
                <sequence>
                    <element name="ascending"       type="xsd:boolean"/>
                    <element name="column"          type="xsd:string"/>
                </sequence>
            </complexType>



            <complexType name="EmailFileAttachment">
                <sequence>
                    <element name="body"                nillable="true" minOccurs="0" type="xsd:base64Binary"/>
                    <element name="contentType"         nillable="true" minOccurs="0" type="xsd:string" />
                    <element name="fileName"            type="xsd:string" />
                    
                    <element name="id"                  nillable="true" minOccurs="0" type="tns:ID"/>
                    
                    <element name="inline"				type="xsd:boolean" minOccurs="0"/>
                </sequence>
            </complexType>
            <simpleType name="EmailPriority">
                <restriction base="xsd:string">
                    <enumeration value="Highest"/>
                    <enumeration value="High"/>
                    <enumeration value="Normal"/>
                    <enumeration value="Low"/>
                    <enumeration value="Lowest"/>
                </restriction>
            </simpleType>

            <simpleType name="SendEmailOptOutPolicy">
                <restriction base="xsd:string">
                    <enumeration value="SEND"/>
                    <enumeration value="FILTER"/>
                    <enumeration value="REJECT"/>
                </restriction>
            </simpleType>

            <simpleType name="AttachmentRetrievalOption">
                <restriction base="xsd:string">
                    <enumeration value="None"/>
                    <enumeration value="MetadataOnly"/>
                    <enumeration value="MetadataWithBody"/>
                </restriction>
            </simpleType>


            <complexType name="Email">
                <sequence>
                    <element name="bccSender"          type="xsd:boolean" nillable="true"/>
                    <element name="emailPriority"      type="tns:EmailPriority" nillable="true"/>
                    <element name="replyTo"            type="xsd:string" nillable="true"/>
                    <element name="saveAsActivity"     type="xsd:boolean" nillable="true"/>
                    <element name="senderDisplayName"  type="xsd:string" nillable="true"/>
                    <element name="subject"            type="xsd:string" nillable="true"/>
                    <element name="useSignature"       type="xsd:boolean" nillable="true"/>
                </sequence>
            </complexType>

            <complexType name="MassEmailMessage">
                <complexContent>
                    <extension base="tns:Email">
                        <sequence>
                            <element name="description"  type="xsd:string" nillable="true"/>
                            <element name="targetObjectIds"     minOccurs="0" maxOccurs="250" type="tns:ID" />
                            <element name="templateId"          type="tns:ID"/>
                            <element name="whatIds"             minOccurs="0" maxOccurs="250" type="tns:ID" />
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="SingleEmailMessage">
                <complexContent>
                    <extension base="tns:Email">
                        <sequence>
                            <element name="bccAddresses"        minOccurs="0" maxOccurs="25" type="xsd:string" nillable="true"/>
                            <element name="ccAddresses"         minOccurs="0" maxOccurs="25" type="xsd:string" nillable="true"/>
                            <element name="charset"             type="xsd:string" nillable="true"/>
                            <element name="documentAttachments" minOccurs="0" maxOccurs="unbounded" type="tns:ID" />
                            <element name="entityAttachments"   minOccurs="0" maxOccurs="unbounded" type="tns:ID" />
                            <element name="fileAttachments"     minOccurs="0" maxOccurs="unbounded" type="tns:EmailFileAttachment"/>
                            <element name="htmlBody"            type="xsd:string" nillable="true"/>
                            <element name="inReplyTo"           minOccurs="0" type="xsd:string" nillable="true"/>
                            <element name="optOutPolicy"        type="tns:SendEmailOptOutPolicy" nillable="true"/>
                            <element name="orgWideEmailAddressId" minOccurs="0" maxOccurs="1" type="tns:ID" nillable="true"/>
                            <element name="plainTextBody"       type="xsd:string" nillable="true"/>
                            <element name="references"          minOccurs="0" type="xsd:string" nillable="true"/>
                            <element name="targetObjectId"      type="tns:ID" nillable="true"/>
                            <element name="templateId"          type="tns:ID" nillable="true"/>
                            <element name="toAddresses"         minOccurs="0" maxOccurs="100" type="xsd:string" nillable="true"/>
                            <element name="treatBodiesAsTemplate" type="xsd:boolean" nillable="true" />
                            <element name="treatTargetObjectAsRecipient" type="xsd:boolean" nillable="true" />
                            <element name="whatId"              type="tns:ID" nillable="true"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="SendEmailResult">
                <sequence>
                    <element name="errors"              minOccurs="0" maxOccurs="unbounded" type="tns:SendEmailError" />
                    <element name="success"             type="xsd:boolean" />
                </sequence>
            </complexType>



            <complexType name="ListViewColumn">
                <sequence>
                    <element name="ascendingLabel"           type="xsd:string" nillable="true"/>
                    <element name="descendingLabel"          type="xsd:string" nillable="true"/>
                    <element name="fieldNameOrPath"          type="xsd:string"/>
                    <element name="hidden"                   type="xsd:boolean"/>
                    <element name="label"                    type="xsd:string"/>
                    <element name="selectListItem"           type="xsd:string"/>
                    <element name="sortDirection"            type="tns:orderByDirection" nillable="true"/>
                    <element name="sortIndex"                type="xsd:int" nillable="true"/>
                    <element name="sortable"                 type="xsd:boolean"/>
                    <element name="type"                     type="tns:fieldType"/>
                </sequence>
            </complexType>

            <complexType name="ListViewOrderBy">
                <sequence>
                    <element name="fieldNameOrPath"          type="xsd:string"/>
                    <element name="nullsPosition"            type="tns:orderByNullsPosition" nillable="true"/>
                    <element name="sortDirection"            type="tns:orderByDirection" nillable="true"/>
                </sequence>
            </complexType>

            <complexType name="DescribeSoqlListView">
                <sequence>
                    <element name="columns"                  type="tns:ListViewColumn" minOccurs="1" maxOccurs="unbounded"/>
                    <element name="id"                       type="tns:ID"/>
                    <element name="orderBy"                  type="tns:ListViewOrderBy" minOccurs="1" maxOccurs="unbounded"/>
                    <element name="query"                    type="xsd:string"/>
                    <element name="scope"                    type="xsd:string" nillable="true"/>
                    <element name="sobjectType"              type="xsd:string"/>
                    <element name="whereCondition"           type="tns:SoqlWhereCondition" minOccurs="0"/>
                </sequence>
            </complexType>

            <complexType name="DescribeSoqlListViewsRequest">
                <sequence>
                    <element name="listViewParams"      type="tns:DescribeSoqlListViewParams" minOccurs="1" maxOccurs="unbounded"/>
                </sequence>
            </complexType>

            <complexType name="DescribeSoqlListViewParams">
                <sequence>
                    <element name="developerNameOrId"        type="xsd:string"/>
                    <element name="sobjectType"              type="xsd:string" nillable="true"/>
                </sequence>
            </complexType>

            <complexType name="DescribeSoqlListViewResult">
                <sequence>
                    <element name="describeSoqlListViews"    type="tns:DescribeSoqlListView" minOccurs="1" maxOccurs="unbounded"/>
                </sequence>
            </complexType>

            <complexType name="ExecuteListViewRequest">
                <sequence>
                    <element name="developerNameOrId"        type="xsd:string"/>
                    <element name="limit"                    type="xsd:int" nillable="true"/>
                    <element name="offset"                   type="xsd:int" nillable="true"/>
                    <element name="orderBy"                  type="tns:ListViewOrderBy" minOccurs="1" maxOccurs="unbounded"/>
                    <element name="sobjectType"              type="xsd:string"/>
                </sequence>
            </complexType>

            <complexType name="ExecuteListViewResult">
                <sequence>
                    <element name="columns"                  type="tns:ListViewColumn" minOccurs="1" maxOccurs="unbounded"/>
                    <element name="developerName"            type="xsd:string"/>
                    <element name="done"                     type="xsd:boolean"/>
                    <element name="id"                       type="tns:ID"/>
                    <element name="label"                    type="xsd:string"/>
                    <element name="records"                  type="tns:ListViewRecord" minOccurs="1" maxOccurs="unbounded"/>
                    <element name="size"                     type="xsd:int"/>
                </sequence>
            </complexType>

            <complexType name="ListViewRecord">
                <sequence>
                    <element name="columns"                  type="tns:ListViewRecordColumn" minOccurs="1" maxOccurs="unbounded"/>
                </sequence>
            </complexType>

            <complexType name="ListViewRecordColumn">
                <sequence>
                    <element name="fieldNameOrPath"          type="xsd:string"/>
                    <element name="value"                    type="xsd:string" nillable="true"/>
                </sequence>
            </complexType>

            <simpleType name="orderByDirection">
                <restriction base="xsd:string">
                    <enumeration value="ascending"/>
                    <enumeration value="descending"/>
                </restriction>
            </simpleType>

            <simpleType name="orderByNullsPosition">
                <restriction base="xsd:string">
                    <enumeration value="first"/>
                    <enumeration value="last"/>
                </restriction>
            </simpleType>

            <simpleType name="soqlOperator">
                <restriction base="xsd:string">
                    <enumeration value="equals"/>
                    <enumeration value="excludes"/>
                    <enumeration value="greaterThan"/>
                    <enumeration value="greaterThanOrEqualTo"/>
                    <enumeration value="in"/>
                    <enumeration value="includes"/>
                    <enumeration value="lessThan"/>
                    <enumeration value="lessThanOrEqualTo"/>
                    <enumeration value="like"/>
                    <enumeration value="notEquals"/>
                    <enumeration value="notIn"/>
                    <enumeration value="within"/>
            
                    <enumeration value="notLike"/>
            
                </restriction>
            </simpleType>

            <simpleType name="soqlConjunction">
                <restriction base="xsd:string">
                    <enumeration value="and"/>
                    <enumeration value="or"/>
                </restriction>
            </simpleType>

            <complexType name="SoqlWhereCondition">
                <sequence/>
            </complexType>

            <complexType name="SoqlCondition">
                <complexContent>
                    <extension base="tns:SoqlWhereCondition">
                        <sequence>
                            <element name="field"                    type="xsd:string"/>
                            <element name="operator"                 type="tns:soqlOperator"/>
                            <element name="values"                   type="xsd:string" minOccurs="1" maxOccurs="unbounded"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="SoqlNotCondition">
                <complexContent>
                    <extension base="tns:SoqlWhereCondition">
                        <sequence>
                            <element name="condition"                type="tns:SoqlWhereCondition"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="SoqlConditionGroup">
                <complexContent>
                    <extension base="tns:SoqlWhereCondition">
                        <sequence>
                            <element name="conditions"               type="tns:SoqlWhereCondition" minOccurs="0" maxOccurs="unbounded"/>
                            <element name="conjunction"              type="tns:soqlConjunction"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="SoqlSubQueryCondition">
                <complexContent>
                    <extension base="tns:SoqlWhereCondition">
                        <sequence>
                            <element name="field"                    type="xsd:string"/>
                            <element name="operator"                 type="tns:soqlOperator"/>
                            <element name="subQuery"                 type="xsd:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>


        
            <complexType name="DescribeSearchLayoutResult">
                <sequence>
                    
                    <element name="errorMsg" type="xsd:string" nillable="true"/>
                    <element name="label" type="xsd:string" nillable="true"/>
                    <element name="limitRows" type="xsd:int" nillable="true"/>
                    <element name="objectType" type="xsd:string"/>
                    <element name="searchColumns" type="tns:DescribeColumn" minOccurs="0" maxOccurs="unbounded" nillable="true"/>
                </sequence>
            </complexType>
        

                <complexType name="DescribeColumn">
                    <sequence>
                        <element name="field" type="xsd:string" />
                        <element name="format" type="xsd:string" nillable="true"/>
                        <element name="label" type="xsd:string" />
                        <element name="name" type="xsd:string" />
                    </sequence>
                </complexType>




            <complexType name="DescribeSearchScopeOrderResult">
                <sequence>
                    <element name="keyPrefix"       type="xsd:string" />
                    <element name="name"            type="xsd:string"/>
                </sequence>
            </complexType>



            <complexType name="DescribeSearchableEntityResult">
                <sequence>
                    <element name="label"           type="xsd:string"/>
                    <element name="name"            type="xsd:string"/>
                    <element name="pluralLabel"     type="xsd:string"/>
                </sequence>
            </complexType>


            <complexType name="DescribeTabSetResult">
                <sequence>
                    <element name="description"     type="xsd:string" />
                    <element name="label"           type="xsd:string" />
                    <element name="logoUrl"         type="xsd:string" />
                    <element name="namespace"       type="xsd:string" minOccurs="0"/>
                    <element name="selected"        type="xsd:boolean" />
                    <element name="tabSetId"        type="xsd:string" />
                    <element name="tabs"            type="tns:DescribeTab" minOccurs="0" maxOccurs="unbounded"/>
                </sequence>
            </complexType>

            <complexType name="DescribeTab">
                <sequence>
                    <element name="colors"               type="tns:DescribeColor" minOccurs="0" maxOccurs="unbounded"/>
                    <element name="custom"               type="xsd:boolean" />
                    <element name="iconUrl"              type="xsd:string" />
                    <element name="icons"                type="tns:DescribeIcon" minOccurs="0" maxOccurs="unbounded"/>
                    <element name="label"                type="xsd:string" />
                    <element name="miniIconUrl"          type="xsd:string" />
                    <element name="name"                 type="xsd:string" />
                    <element name="sobjectName"          type="xsd:string" nillable="true" />
                    <element name="url"                  type="xsd:string" />
                </sequence>
            </complexType>


        <complexType name="DescribeColor">
            <sequence>
                <element name="color"            type="xsd:string" />
                <element name="context"          type="xsd:string" />
                <element name="theme"            type="xsd:string" />
            </sequence>
        </complexType>



        <complexType name="DescribeIcon">
            <sequence>
                <element name="contentType"     type="xsd:string" />
                <element name="height"          type="xsd:int" nillable="true"/>
                <element name="theme"           type="xsd:string" />
                <element name="url"             type="xsd:string" />
                <element name="width"           type="xsd:int" nillable="true" />
            </sequence>
        </complexType>

        <complexType name="ActionOverride">
            <sequence>
                <element name="formFactor" type="xsd:string"/>
                <element name="isAvailableInTouch" type="xsd:boolean"/>
                <element name="name" type="xsd:string"/>
                <element name="pageId" type="tns:ID"/>
                <element name="url" type="xsd:string" nillable="true"/>
            </sequence>
        </complexType>



            <!-- Login Message Types -->
            <element name="login">
                <complexType>
                    <sequence>
                        <element name="username" type="xsd:string"/>
                        <element name="password" type="xsd:string"/>
                    </sequence>
                </complexType>
            </element>
            <element name="loginResponse">
                <complexType>
                    <sequence>
                        <element name="result" type="tns:LoginResult"/>
                    </sequence>
                </complexType>
            </element>

            <!-- Describe Message Types -->
            <element name="describeSObject">
                <complexType>
                    <sequence>
                        <element name="sObjectType" type="xsd:string"/>
                    </sequence>
                </complexType>
            </element>
            <element name="describeSObjectResponse">
                <complexType>
                    <sequence>
                        <element name="result" type="tns:DescribeSObjectResult" nillable="true"/>
                    </sequence>
                </complexType>
            </element>



            <!-- DescibeSObjects Message Types -->
            <element name="describeSObjects">
                <complexType>
                    <sequence>
                        <element name="sObjectType" type="xsd:string" minOccurs='0' maxOccurs='100' />
                    </sequence>
                </complexType>
            </element>
            <element name="describeSObjectsResponse">
                <complexType>
                    <sequence>
                        <element name="result" type="tns:DescribeSObjectResult" nillable="true" minOccurs='0' maxOccurs='100'/>
                    </sequence>
                </complexType>
            </element>

            <!-- Describe Global Message Types -->
            <element name="describeGlobal">
                <complexType>
                    <sequence/>
                </complexType>
            </element>
            <element name="describeGlobalResponse">
                <complexType>
                    <sequence>
                        <element name="result" type="tns:DescribeGlobalResult"/>
                    </sequence>
                </complexType>
            </element>


        <!-- Describe Global Theme Types -->
        <element name="describeGlobalTheme">
            <complexType>
                <sequence/>
            </complexType>
        </element>
        <element name="describeGlobalThemeResponse">
            <complexType>
                <sequence>
                    <element name="result" type="tns:DescribeGlobalTheme"/>
                </sequence>
            </complexType>
        </element>

        <!-- Describe Theme Types -->
        <element name="describeTheme">
            <complexType>
                <sequence>
                    <element name="sobjectType" type="xsd:string" minOccurs="0" maxOccurs="unbounded"/>
                </sequence>
            </complexType>
        </element>
        <element name="describeThemeResponse">
            <complexType>
                <sequence>
                    <element name="result" type="tns:DescribeThemeResult"/>
                </sequence>
            </complexType>
        </element>


        <!-- Describe Data Category Groups Message Types -->
            <element name="describeDataCategoryGroups">
                <complexType>
                    <sequence>
                        <element name="sObjectType" type="xsd:string" minOccurs='0' maxOccurs='10' />
                    </sequence>
                </complexType>
            </element>
            <element name="describeDataCategoryGroupsResponse">
                <complexType>
                    <sequence>
                        <element name="result" type="tns:DescribeDataCategoryGroupResult" minOccurs='0' maxOccurs='100'/>
                    </sequence>
                </complexType>
            </element>
            <element name="describeDataCategoryGroupStructures">
                <complexType>
                    <sequence>
                        <element name="pairs" type="tns:DataCategoryGroupSobjectTypePair" minOccurs='0' maxOccurs='100' />
                        <element name="topCategoriesOnly" type="xsd:boolean"/>
                    </sequence>
                </complexType>
            </element>
            <element name="describeDataCategoryGroupStructuresResponse">
                <complexType>
                    <sequence>
                        <element name="result" type="tns:DescribeDataCategoryGroupStructureResult" minOccurs='0' maxOccurs='100'/>
                    </sequence>
                </complexType>
            </element>


            <!-- Describe Knowledge Settings -->
            <element name="describeKnowledgeSettings">
                <complexType>
                    <sequence/>
                </complexType>
            </element>
            <element name="describeKnowledgeSettingsResponse">
                <complexType>
                    <sequence>
                        <element name="result" type="tns:KnowledgeSettings"/>
                    </sequence>
                </complexType>
            </element>









            <simpleType name="AppMenuType">
                <restriction base="xsd:string">
                    <enumeration value="AppSwitcher"/>
                    <enumeration value="Salesforce1"/>
                    <enumeration value="NetworkTabs"/>
                </restriction>
            </simpleType>


            <element name="describeAppMenu">
                <complexType>
                    <sequence>
                        <element name="appMenuType" type="tns:AppMenuType" />

                        <element name="networkId" type="tns:ID" nillable="true"/>
                    </sequence>
                </complexType>
            </element>
            <element name="describeAppMenuResponse">
                <complexType>
                    <sequence>
                        <element name="result" type="tns:DescribeAppMenuResult" nillable="true"/>
                    </sequence>
                </complexType>
            </element>



            <element name="describeLayout">
                <complexType>
                    <sequence>
                        <element name="sObjectType" type="xsd:string"/>
                        <element name="layoutName" type="xsd:string" nillable="true"/>
                        <element name="recordTypeIds" type="tns:ID" minOccurs="0" maxOccurs="unbounded"/>
                    </sequence>
                </complexType>
            </element>
            
            
            

            <element name="describeLayoutResponse">
                <complexType>
                    <sequence>
                        <element name="result" type="tns:DescribeLayoutResult" nillable="true"/>
                    </sequence>
                </complexType>
            </element>


            <element name="describeCompactLayouts">
                <complexType>
                    <sequence>
                        <element name="sObjectType" type="xsd:string"/>
                        <element name="recordTypeIds" type="tns:ID" minOccurs="0" maxOccurs="unbounded"/>
                    </sequence>
                </complexType>
            </element>
            <element name="describeCompactLayoutsResponse">
                <complexType>
                    <sequence>
                        <element name="result" type="tns:DescribeCompactLayoutsResult" nillable="true"/>
                    </sequence>
                </complexType>
            </element>


            <element name="describePrimaryCompactLayouts">
                <complexType>
                    <sequence>
                        <element name="sObjectTypes" type="xsd:string" minOccurs="1" maxOccurs="unbounded"/>
                    </sequence>
                </complexType>
            </element>
            <element name="describePrimaryCompactLayoutsResponse">
                <complexType>
                    <sequence>
                        <element name="result" type="tns:DescribeCompactLayout" minOccurs="0" maxOccurs="unbounded"/>
                    </sequence>
                </complexType>
            </element>


            <element name="describePathAssistants">
                <complexType>
                    <sequence>
                        <element name="sObjectType" type="xsd:string"/>
                        <element name="picklistValue" type="xsd:string" nillable="true"/>
                        <element name="recordTypeIds" type="tns:ID" minOccurs="0" maxOccurs="unbounded"/>
                    </sequence>
                </complexType>
            </element>
            <element name="describePathAssistantsResponse">
                <complexType>
                    <sequence>
                        <element name="result" type="tns:DescribePathAssistantsResult" nillable="true"/>
                    </sequence>
                </complexType>
            </element>


            <element name="describeApprovalLayout">
                <complexType>
                    <sequence>
                        <element name="sObjectType" type="xsd:string"/>
                        <element name="approvalProcessNames" type="xsd:string" minOccurs="0" maxOccurs="unbounded"/>
                    </sequence>
                </complexType>
            </element>
            <element name="describeApprovalLayoutResponse">
                <complexType>
                    <sequence>
                        <element name="result" type="tns:DescribeApprovalLayoutResult" nillable="true"/>
                    </sequence>
                </complexType>
            </element>

            <element name="describeSoftphoneLayout">
                <complexType>
                    <sequence/>
                </complexType>
            </element>
            <element name="describeSoftphoneLayoutResponse">
                <complexType>
                    <sequence>
                        <element name="result" type="tns:DescribeSoftphoneLayoutResult" nillable="true"/>
                    </sequence>
                </complexType>
            </element>



            <element name="describeSoqlListViews">
                <complexType>
                    <sequence>
                        <element name="request" type="tns:DescribeSoqlListViewsRequest"/>
                    </sequence>
                </complexType>
            </element>
            <element name="describeSoqlListViewsResponse">
                <complexType>
                    <sequence>
                        <element name="result" type="tns:DescribeSoqlListViewResult"/>
                    </sequence>
                </complexType>
            </element>
            <element name="executeListView">
                <complexType>
                    <sequence>
                        <element name="request" type="tns:ExecuteListViewRequest"/>
                    </sequence>
                </complexType>
            </element>
            <element name="executeListViewResponse">
                <complexType>
                    <sequence>
                        <element name="result" type="tns:ExecuteListViewResult" minOccurs="0" maxOccurs="1"/>
                    </sequence>
                </complexType>
            </element>


            <simpleType name="listViewIsSoqlCompatible">
                <restriction base="xsd:string">
                    <enumeration value="TRUE"/>
                    <enumeration value="FALSE"/>
                    <enumeration value="ALL"/>
                </restriction>
            </simpleType>

            <element name="describeSObjectListViews">
                <complexType>
                    <sequence>
                        <element name="sObjectType" type="xsd:string"/>
                        <element name="recentsOnly" type="xsd:boolean"/>
                        <element name="isSoqlCompatible" type="tns:listViewIsSoqlCompatible"/>
                        <element name="limit" type="xsd:int"/>
                        <element name="offset" type="xsd:int"/>
                    </sequence>
                </complexType>
            </element>
            <element name="describeSObjectListViewsResponse">
                <complexType>
                    <sequence>
                        <element name="result" type="tns:DescribeSoqlListViewResult"/>
                    </sequence>
                </complexType>
            </element>


            <element name="describeSearchLayouts">
                <complexType>
                    <sequence>
                        <element name="sObjectType" type="xsd:string" minOccurs="0" maxOccurs="unbounded"/>
                    </sequence>
                </complexType>
            </element>
            <element name="describeSearchLayoutsResponse">
                <complexType>
                    <sequence>
                        <element name="result" type="tns:DescribeSearchLayoutResult" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
                    </sequence>
                </complexType>
            </element>



            <element name="describeSearchScopeOrder">
                <complexType>
                    <sequence/>
                </complexType>
            </element>
            <element name="describeSearchScopeOrderResponse">
                <complexType>
                    <sequence>
                        <element name="result" type="tns:DescribeSearchScopeOrderResult" minOccurs="0" maxOccurs="unbounded"/>
                    </sequence>
                </complexType>
            </element>



            <element name="describeSearchableEntities">
                <complexType>
                    <sequence>
                        <element name="includeOnlyEntitiesWithTabs" type="xsd:boolean"/>
                    </sequence>
                </complexType>
            </element>
            <element name="describeSearchableEntitiesResponse">
                <complexType>
                    <sequence>
                        <element name="result" type="tns:DescribeSearchableEntityResult" minOccurs="0" maxOccurs="unbounded"/>
                    </sequence>
                </complexType>
            </element>


            <element name="describeTabs">
                <complexType>
                    <sequence/>
                </complexType>
            </element>
            <element name="describeTabsResponse">
                <complexType>
                    <sequence>
                        <element name="result" type="tns:DescribeTabSetResult" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
                    </sequence>
                </complexType>
            </element>


            <element name="describeAllTabs">
                <complexType>
                    <sequence/>
                </complexType>
            </element>
            <element name="describeAllTabsResponse">
                <complexType>
                    <sequence>
                        <element name="result" type="tns:DescribeTab" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
                    </sequence>
                </complexType>
            </element>


            <element name="describeNouns">
                <complexType>
                    <sequence>
                        <element name="nouns" type="xsd:string" minOccurs='0' maxOccurs='100' />
                        <element name="onlyRenamed" type="xsd:boolean"/>
                        <element name="includeFields" type="xsd:boolean"/>
                    </sequence>
                </complexType>
            </element>
            <element name="describeNounsResponse">
                <complexType>
                    <sequence>
                        <element name="result" type="tns:DescribeNounResult" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
                    </sequence>
                </complexType>
            </element>


            <!-- Create Message Types -->
            <element name="create">
                <complexType>
                    <sequence>
                        <element name="sObjects" type="ens:sObject" minOccurs="0" maxOccurs="unbounded"/>
                    </sequence>
                </complexType>
            </element>
            <element name="createResponse">
                <complexType>
                    <sequence>
                        <element name="result" type="tns:SaveResult" minOccurs="0" maxOccurs="unbounded"/>
                    </sequence>
                </complexType>
            </element>



            <!-- Send Email Types -->
            <element name="sendEmail">
                <complexType>
                    <sequence>
                        <element name="messages" type="tns:Email" minOccurs="0" maxOccurs="10"/>
                    </sequence>
                </complexType>
            </element>
            <element name="sendEmailResponse">
                <complexType>
                    <sequence>
                        <element name="result" minOccurs="0" maxOccurs="10" type="tns:SendEmailResult"/>
                    </sequence>
                </complexType>
            </element>


            <!-- Template Merge -->
            <complexType name="RenderEmailTemplateRequest">
                    <sequence>
                        <element name="escapeHtmlInMergeFields" type="xsd:boolean" minOccurs="0" maxOccurs="1" />
                        <element name="templateBodies" type="xsd:string" minOccurs="1" maxOccurs="10" nillable="false" />
                        <element name="whatId"         type="tns:ID" minOccurs="0" maxOccurs="1" />
                        <element name="whoId"          type="tns:ID" minOccurs="0" maxOccurs="1" />
                    </sequence>
            </complexType>

            <complexType name="RenderEmailTemplateBodyResult">
                <sequence>
                    <element name="errors"              type="tns:RenderEmailTemplateError" minOccurs="0" maxOccurs="unbounded"/>
                    <element name="mergedBody"          type="xsd:string" nillable="true" />
                    <element name="success"             type="xsd:boolean" />
                </sequence>
            </complexType>

            <complexType name="RenderEmailTemplateResult">
                <sequence>
                    <element name="bodyResults"         type="tns:RenderEmailTemplateBodyResult" minOccurs="0" maxOccurs="10"/>
                    <element name="errors"    			type="tns:Error" minOccurs="0" maxOccurs="unbounded"/>
                    <element name="success"             type="xsd:boolean" />
                </sequence>
            </complexType>

            <element name="renderEmailTemplate">
                <complexType>
                    <sequence>
                        <element name="renderRequests" type="tns:RenderEmailTemplateRequest" minOccurs="0" maxOccurs="10"/>
                    </sequence>
                </complexType>
            </element>
            <element name="renderEmailTemplateResponse">
                <complexType>
                    <sequence>
                        <element name="result" minOccurs="0" maxOccurs="10" type="tns:RenderEmailTemplateResult"/>
                    </sequence>
                </complexType>
            </element>

            <!-- RenderStoredEmailTemplate -->
            <complexType name="RenderStoredEmailTemplateRequest">
                    <sequence>
                        <element name="attachmentRetrievalOption"  type="tns:AttachmentRetrievalOption" nillable="true"/>
                        <element name="templateId"  type="tns:ID" minOccurs="1" maxOccurs="1" nillable="false" />
                        <element name="whatId"      type="tns:ID" minOccurs="0" maxOccurs="1" />
                        <element name="whoId"       type="tns:ID" minOccurs="0" maxOccurs="1" />
                    </sequence>
            </complexType>

            <complexType name="RenderStoredEmailTemplateResult">
                <sequence>
                    <element name="errors"              type="tns:Error" minOccurs="0" maxOccurs="unbounded"/>
                    <element name="renderedEmail"  type="tns:SingleEmailMessage" nillable="true" />
                    <element name="success"             type="xsd:boolean" />
                </sequence>
            </complexType>

            <element name="renderStoredEmailTemplate">
                <complexType>
                    <sequence>
                        <element name="request" type="tns:RenderStoredEmailTemplateRequest" minOccurs="1" maxOccurs="1"/>
                    </sequence>
                </complexType>
            </element>
            <element name="renderStoredEmailTemplateResponse">
                <complexType>
                    <sequence>
                        <element name="result" minOccurs="1" maxOccurs="1" type="tns:RenderStoredEmailTemplateResult"/>
                    </sequence>
                </complexType>
            </element>

            <!-- Send Email Message Types -->
            <element name="sendEmailMessage">
                <complexType>
                    <sequence>
                        <element name="ids" type="tns:ID" minOccurs="0" maxOccurs="10"/>
                    </sequence>
                </complexType>
            </element>
            <element name="sendEmailMessageResponse">
                <complexType>
                    <sequence>
                        <element name="result" minOccurs="0" maxOccurs="10" type="tns:SendEmailResult"/>
                    </sequence>
                </complexType>
            </element>


            <!-- Update Message Types -->
            <element name="update">
                <complexType>
                    <sequence>
                        <element name="sObjects" type="ens:sObject" minOccurs="0" maxOccurs="unbounded"/>
                    </sequence>
                </complexType>
            </element>
            <element name="updateResponse">
                <complexType>
                    <sequence>
                        <element name="result" type="tns:SaveResult" minOccurs="0" maxOccurs="unbounded"/>
                    </sequence>
                </complexType>
            </element>

            <!-- Upsert Message Types -->
            <element name="upsert">
                <complexType>
                    <sequence>
                        <element name="externalIDFieldName" type="xsd:string"/>
                        <element name="sObjects" type="ens:sObject" minOccurs="0" maxOccurs="unbounded"/>
                    </sequence>
                </complexType>
            </element>
            <element name="upsertResponse">
                <complexType>
                    <sequence>
                        <element name="result" type="tns:UpsertResult" minOccurs="0" maxOccurs="unbounded"/>
                    </sequence>
                </complexType>
            </element>

            <!-- Merge Message Types -->
            <element name="merge">
                <complexType>
                    <sequence>
                        <element name="request" type="tns:MergeRequest" minOccurs="0" maxOccurs="unbounded"/>
                    </sequence>
                </complexType>
            </element>
            <element name="mergeResponse">
                <complexType>
                    <sequence>
                        <element name="result" type="tns:MergeResult" minOccurs="0" maxOccurs="unbounded"/>
                    </sequence>
                </complexType>
            </element>

            <!-- Delete Message Types -->
            <element name="delete">
                <complexType>
                    <sequence>
                        <element name="ids" type="tns:ID" minOccurs="0" maxOccurs="unbounded"/>
                    </sequence>
                </complexType>
            </element>
            <element name="deleteResponse">
                <complexType>
                    <sequence>
                        <element name="result" type="tns:DeleteResult" minOccurs="0" maxOccurs="unbounded"/>
                    </sequence>
                </complexType>
            </element>

            <!-- Undelete Message Types -->
            <element name="undelete">
                <complexType>
                    <sequence>
                        <element name="ids" type="tns:ID" minOccurs="1" maxOccurs="unbounded"/>
                    </sequence>
                </complexType>
            </element>
            <element name="undeleteResponse">
                <complexType>
                    <sequence>
                        <element name="result" type="tns:UndeleteResult" minOccurs="1" maxOccurs="unbounded"/>
                    </sequence>
                </complexType>
            </element>

            <!-- EmptyRecycleBin Message Types -->
            <element name="emptyRecycleBin">
                <complexType>
                    <sequence>
                        <element name="ids" type="tns:ID" minOccurs="1" maxOccurs="unbounded"/>
                    </sequence>
                </complexType>
            </element>
            <element name="emptyRecycleBinResponse">
                <complexType>
                    <sequence>
                        <element name="result" type="tns:EmptyRecycleBinResult" minOccurs="1" maxOccurs="unbounded"/>
                    </sequence>
                </complexType>
            </element>

            <!-- Process Message Types -->
            <element name="process">
                <complexType>
                    <sequence>
                        <element name="actions" type="tns:ProcessRequest" minOccurs="0" maxOccurs="unbounded"/>
                    </sequence>
                </complexType>
            </element>
            <element name="processResponse">
                <complexType>
                    <sequence>
                        <element name="result" type="tns:ProcessResult" minOccurs="0" maxOccurs="unbounded"/>
                    </sequence>
                </complexType>
            </element>


            <!-- Perform Action Message Types -->
            <element name="performQuickActions">
                <complexType>
                    <sequence>
                        <element name="quickActions" type="tns:PerformQuickActionRequest" minOccurs="0" maxOccurs="unbounded"/>
                    </sequence>
                </complexType>
            </element>
            <element name="performQuickActionsResponse">
                <complexType>
                    <sequence>
                        <element name="result" type="tns:PerformQuickActionResult" minOccurs="0" maxOccurs="unbounded"/>
                    </sequence>
                </complexType>
            </element>


            <element name="retrieveQuickActionTemplates">
                <complexType>
                    <sequence>
                        <element name="quickActionNames" type="xsd:string" minOccurs="0" maxOccurs="unbounded"/>
                        <element name="contextId" type="tns:ID" nillable="true"/>
                    </sequence>
                </complexType>
            </element>
            <element name="retrieveQuickActionTemplatesResponse">
                <complexType>
                    <sequence>
                        <element name="result" type="tns:QuickActionTemplateResult" minOccurs="0" maxOccurs="unbounded"/>
                    </sequence>
                </complexType>
            </element>

            <element name="describeQuickActions">
                <complexType>
                    <sequence>
                        <element name="quickActions"       type="xsd:string" minOccurs="0" maxOccurs="unbounded"/>
                    </sequence>
                </complexType>
            </element>
            <element name="describeQuickActionsResponse">
                <complexType>
                    <sequence>
                        <element name="result" type="tns:DescribeQuickActionResult" minOccurs="0" maxOccurs="unbounded"/>
                    </sequence>
                </complexType>
            </element>

            <element name="describeAvailableQuickActions">
                <complexType>
                    <sequence>
                        <element name="contextType"       type="xsd:string" nillable="true"/>
                    </sequence>
                </complexType>
            </element>
            <element name="describeAvailableQuickActionsResponse">
                <complexType>
                    <sequence>
                        <element name="result" type="tns:DescribeAvailableQuickActionResult" minOccurs="0" maxOccurs="unbounded"/>
                    </sequence>
                </complexType>
            </element>


            <element name="describeVisualForce">
                <complexType>
                    <sequence>
                        <element name="includeAllDetails" type="xsd:boolean"/>
                        <element name="namespacePrefix" type="xsd:string" nillable="true"/>
                    </sequence>
                </complexType>
            </element>
            <element name="describeVisualForceResponse">
                <complexType>
                    <sequence>
                        <element name="result" type="tns:DescribeVisualForceResult"/>
                    </sequence>
                </complexType>
            </element>



            <!-- Retrieve (ID List) Message Types -->
            <element name="retrieve">
                <complexType>
                    <sequence>
                        <element name="fieldList"   type="xsd:string"/>
                        <element name="sObjectType" type="xsd:string"/>
                        <element name="ids"         type="tns:ID" minOccurs="0" maxOccurs="unbounded"/>
                    </sequence>
                </complexType>
            </element>
            <element name="retrieveResponse">
                <complexType>
                    <sequence>
                        <element name="result" type="ens:sObject" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
                    </sequence>
                </complexType>
            </element>

      

            <!-- Convert Lead Message Types -->
            <element name="convertLead">
                <complexType>
                    <sequence>
                        <element name="leadConverts" type="tns:LeadConvert" minOccurs="0" maxOccurs="unbounded"/>
                    </sequence>
                </complexType>
            </element>
            <element name="convertLeadResponse">
                <complexType>
                    <sequence>
                        <element name="result" type="tns:LeadConvertResult" minOccurs="0" maxOccurs="unbounded"/>
                    </sequence>
                </complexType>
            </element>

            <!-- Get Updated Message Types -->
            <element name="getUpdated">
                <complexType>
                    <sequence>
                        <element name="sObjectType" type="xsd:string"/>
                        <element name="startDate" type="xsd:dateTime"/>
                        <element name="endDate" type="xsd:dateTime"/>
                    </sequence>
                </complexType>
            </element>
            <element name="getUpdatedResponse">
                <complexType>
                    <sequence>
                        <element name="result" type="tns:GetUpdatedResult"/>
                    </sequence>
                </complexType>
            </element>

            <!-- Get Deleted Message Types -->
            <element name="getDeleted">
                <complexType>
                    <sequence>
                        <element name="sObjectType" type="xsd:string"/>
                        <element name="startDate" type="xsd:dateTime"/>
                        <element name="endDate" type="xsd:dateTime"/>
                    </sequence>
                </complexType>
            </element>
            <element name="getDeletedResponse">
                <complexType>
                    <sequence>
                        <element name="result" type="tns:GetDeletedResult"/>
                    </sequence>
                </complexType>
            </element>


            <!-- Logout current session -->
            <element name="logout">
                <complexType>
                </complexType>
            </element>

            <element name="logoutResponse">
                <complexType>
                </complexType>
            </element>

            <!-- Invalidate a list of session ids -->
            <element name="invalidateSessions">
                <complexType>
                    <sequence>
                        <element name="sessionIds" type="xsd:string" minOccurs="0" maxOccurs="unbounded"/>
                    </sequence>
                </complexType>
            </element>

            <element name="invalidateSessionsResponse">
                <complexType>
                    <sequence>
                        <element name="result" type="tns:InvalidateSessionsResult" minOccurs="0" maxOccurs="unbounded"/>
                    </sequence>
                </complexType>
            </element>

            <!-- Create Query -->
            <element name="query">
                <complexType>
                    <sequence>
                        <element name="queryString" type="xsd:string"/>
                    </sequence>
                </complexType>
            </element>
            <element name="queryResponse">
                <complexType>
                    <sequence>
                        <element name="result" type="tns:QueryResult"/>
                    </sequence>
                </complexType>
            </element>

            <!-- Create Query All -->
            <element name="queryAll">
                <complexType>
                    <sequence>
                        <element name="queryString" type="xsd:string"/>
                    </sequence>
                </complexType>
            </element>
            <element name="queryAllResponse">
                <complexType>
                    <sequence>
                        <element name="result" type="tns:QueryResult"/>
                    </sequence>
                </complexType>
            </element>

            <!-- Next Batch of sObjects from a query -->
            <element name="queryMore">
                <complexType>
                    <sequence>
                        <element name="queryLocator" type="tns:QueryLocator"/>
                    </sequence>
                </complexType>
            </element>
            <element name="queryMoreResponse">
                <complexType>
                    <sequence>
                        <element name="result" type="tns:QueryResult"/>
                    </sequence>
                </complexType>
            </element>



            <!-- Create Search -->
            <element name="search">
                <complexType>
                    <sequence>
                        <element name="searchString" type="xsd:string"/>
                    </sequence>
                </complexType>
            </element>
            <element name="searchResponse">
                <complexType>
                    <sequence>
                        <element name="result" type="tns:SearchResult"/>
                    </sequence>
                </complexType>
            </element>



            <element name="getServerTimestamp">
                <complexType>
                    <sequence/>
                </complexType>
            </element>
            <element name="getServerTimestampResponse">
                <complexType>
                    <sequence>
                        <element name="result" type="tns:GetServerTimestampResult"/>
                    </sequence>
                </complexType>
            </element>

            <element name="setPassword">
                <complexType>
                    <sequence>
                        <element name="userId" type="tns:ID"/>
                        <element name="password" type="xsd:string"/>
                    </sequence>
                </complexType>
            </element>
            <element name="setPasswordResponse">
                <complexType>
                    <sequence>
                        <element name="result" type="tns:SetPasswordResult"/>
                    </sequence>
                </complexType>
            </element>

            <element name="changeOwnPassword">
                <complexType>
                    <sequence>
                        <element name="oldPassword" type="xsd:string"/>
                        <element name="newPassword" type="xsd:string"/>
                    </sequence>
                </complexType>
            </element>
            <element name="changeOwnPasswordResponse">
                <complexType>
                    <sequence>
                        <element name="result" type="tns:ChangeOwnPasswordResult"/>
                    </sequence>
                </complexType>
            </element>

            <element name="resetPassword">
                <complexType>
                    <sequence>
                        <element name="userId" type="tns:ID"/>
                    </sequence>
                </complexType>
            </element>
            <element name="resetPasswordResponse">
                <complexType>
                    <sequence>
                        <element name="result" type="tns:ResetPasswordResult"/>
                    </sequence>
                </complexType>
            </element>

            <element name="getUserInfo">
                <complexType>
                    <sequence/>
                </complexType>
            </element>
            <element name="getUserInfoResponse">
                <complexType>
                    <sequence>
                        <element name="result" type="tns:GetUserInfoResult"/>
                    </sequence>
                </complexType>
            </element>



            <!-- Header Elements -->
            <element name="SessionHeader">
                <complexType>
                    <sequence>
                        <element name="sessionId" type="xsd:string"/>
                    </sequence>
                </complexType>
            </element>

            <element name="LoginScopeHeader">
                <complexType>
                    <sequence>
                        <element name="organizationId" type="tns:ID"/>
                        <element name="portalId" type="tns:ID" minOccurs="0"/>
                    </sequence>
                </complexType>
            </element>



            <element name="QueryOptions">
                <complexType>
                    <sequence>
                        <element name="batchSize"       type="xsd:int" minOccurs="0"/>

                    </sequence>
                </complexType>
            </element>


            <simpleType name="DebugLevel">
                <restriction base="xsd:string">
                    <enumeration value="None"/>
                    <enumeration value="DebugOnly"/>
                    <enumeration value="Db"/>

                    <enumeration value="Profiling"/>
                    <enumeration value="Callout"/>
                    <enumeration value="Detail"/>

                </restriction>
            </simpleType>




            <element name="DebuggingHeader">
                <complexType>
                    <sequence>

                        <xsd:element name="categories" minOccurs="0" maxOccurs="unbounded" type="tns:LogInfo"/>

                        <element name="debugLevel" type="tns:DebugLevel"/>
                    </sequence>
                </complexType>
           </element>

           <xsd:complexType name="LogInfo">
               <xsd:sequence>
                   <xsd:element name="category" type="tns:LogCategory"/>
                   <xsd:element name="level" type="tns:LogCategoryLevel"/>
               </xsd:sequence>
           </xsd:complexType>
           <xsd:simpleType name="LogCategory">
              <xsd:restriction base="xsd:string">
                  <xsd:enumeration value="Db"/>
                  <xsd:enumeration value="Workflow"/>
                  <xsd:enumeration value="Validation"/>
                  <xsd:enumeration value="Callout"/>
                  <xsd:enumeration value="Apex_code"/>
                  <xsd:enumeration value="Apex_profiling"/>
                  <xsd:enumeration value="Visualforce"/>
                  <xsd:enumeration value="System"/>
                  <xsd:enumeration value="All"/>
              </xsd:restriction>
           </xsd:simpleType>
           <xsd:simpleType name="LogCategoryLevel">
                   <xsd:restriction base="xsd:string">
                    <xsd:enumeration value="None"/>
                    <xsd:enumeration value="Finest"/>
                    <xsd:enumeration value="Finer"/>
                    <xsd:enumeration value="Fine"/>
                    <xsd:enumeration value="Debug"/>
                    <xsd:enumeration value="Info"/>
                    <xsd:enumeration value="Warn"/>
                     <xsd:enumeration value="Error"/>
                </xsd:restriction>
            </xsd:simpleType>


            <element name="DebuggingInfo">
                <complexType>
                    <sequence>
                        <element name="debugLog" type="xsd:string"/>
                    </sequence>
                </complexType>
            </element>

   <xsd:complexType name="PackageVersion">
    <xsd:sequence>
     <xsd:element name="majorNumber" type="xsd:int"/>
     <xsd:element name="minorNumber" type="xsd:int"/>
     <xsd:element name="namespace" type="xsd:string"/>
    </xsd:sequence>
   </xsd:complexType>
   <xsd:element name="PackageVersionHeader">
    <xsd:complexType>
     <xsd:sequence>
      <xsd:element name="packageVersions" minOccurs="0" maxOccurs="unbounded" type="tns:PackageVersion"/>
     </xsd:sequence>
    </xsd:complexType>
   </xsd:element>

            <element name="AllowFieldTruncationHeader">
                <complexType>
                    <sequence>
                        <element name="allowFieldTruncation" type="xsd:boolean" />
                    </sequence>
                </complexType>
            </element>

   <element name="DisableFeedTrackingHeader">
       <complexType>
           <sequence>
               <element name="disableFeedTracking" type="xsd:boolean" />
           </sequence>
       </complexType>
   </element>

   <element name="StreamingEnabledHeader">
       <complexType>
           <sequence>
               <element name="streamingEnabled" type="xsd:boolean" />
           </sequence>
       </complexType>
   </element>


        <element name="AllOrNoneHeader">
            <complexType>
                <sequence>
                    <element name="allOrNone" type="xsd:boolean" />
                </sequence>
            </complexType>
        </element>



        <element name="DuplicateRuleHeader">
            <complexType>
                <sequence>
                    <element name="allowSave" type="xsd:boolean" />
                    <element name="includeRecordDetails" type="xsd:boolean" />
                    <element name="runAsCurrentUser" type="xsd:boolean" />
                </sequence>
            </complexType>
        </element>



        <complexType name="LimitInfo">
            <sequence>
                <element name="current" type="xsd:int"/>
                <element name="limit" type="xsd:int"/>
                <element name="type" type="xsd:string"/>
            </sequence>
        </complexType>

        <element name="LimitInfoHeader">
            <complexType>
                <sequence>
                    <element name="limitInfo" minOccurs="0" maxOccurs="unbounded" type="tns:LimitInfo"/>
                </sequence>
            </complexType>
        </element>







            <!-- ideally this could of just been elem name="..." type="xsd:boolean"
                 but is required to be nested within a complexType for .NET 1.1 compatibility -->
    <element name="MruHeader">
                <complexType>
                    <sequence>
                        <element name="updateMru" type="xsd:boolean" />
                    </sequence>
                </complexType>
    </element>

    <element name="EmailHeader">
                <complexType>
                    <sequence>
                        <element name="triggerAutoResponseEmail"    type="xsd:boolean"/>
                        <element name="triggerOtherEmail"           type="xsd:boolean"/>
                        <element name="triggerUserEmail"            type="xsd:boolean"/>
                    </sequence>
                </complexType>
    </element>

    <element name="AssignmentRuleHeader">
                <complexType>
                    <sequence>
                        <element name="assignmentRuleId"    type="tns:ID"  nillable="true" />
                        <element name="useDefaultRule"      type="xsd:boolean" nillable="true" />
                    </sequence>
                </complexType>
    </element>

            <element name="UserTerritoryDeleteHeader">
                <complexType>
                    <sequence>
                        <element name="transferToUserId" type="tns:ID" nillable="true"/>
                    </sequence>
                </complexType>
            </element>



            <element name="LocaleOptions">
                <complexType>
                    <sequence>
                        <element name="language"  type="xsd:string" minOccurs="0"/>

                        <element name="localizeErrors" type="xsd:boolean" minOccurs="0"/>

                    </sequence>
                </complexType>
            </element>

            <simpleType name="OwnerChangeOptionType">
                <restriction base="xsd:string">
                    <enumeration value="EnforceNewOwnerHasReadAccess"/>
                    <enumeration value="TransferOpenActivities"/>
                    <enumeration value="TransferNotesAndAttachments"/>
                    <enumeration value="TransferOthersOpenOpportunities"/>
                    <enumeration value="TransferOwnedOpenOpportunities"/>
                    <enumeration value="TransferContracts"/>
                    <enumeration value="TransferOrders"/>
                    <enumeration value="TransferContacts"/>
                </restriction>
            </simpleType>

            <complexType name="OwnerChangeOption">
                <sequence>
                      <element name="type" type="tns:OwnerChangeOptionType"/>
                      <element name="execute" type="xsd:boolean"/>
                </sequence>
            </complexType>

            <element name="OwnerChangeOptions">
                <complexType>
                     <sequence>

                         <element name="options" type="tns:OwnerChangeOption" nillable="true" minOccurs="0" maxOccurs="unbounded"/>

                   </sequence>
                </complexType>
            </element>

        </schema>

        <schema elementFormDefault="qualified" xmlns="http://www.w3.org/2001/XMLSchema" targetNamespace="urn:fault.enterprise.soap.sforce.com" xmlns:fns="urn:fault.enterprise.soap.sforce.com">

            <import namespace="urn:enterprise.soap.sforce.com"/>
            <simpleType name="ExceptionCode">
                <restriction base="xsd:string">
                    <enumeration value="APEX_REST_SERVICES_DISABLED"/>
                    <enumeration value="APEX_TRIGGER_COUPLING_LIMIT"/>
                    <enumeration value="API_CURRENTLY_DISABLED"/>
                    <enumeration value="API_DISABLED_FOR_ORG"/>
                    <enumeration value="ARGUMENT_OBJECT_PARSE_ERROR"/>
                    <enumeration value="ASYNC_OPERATION_LOCATOR"/>
                    <enumeration value="ASYNC_QUERY_UNSUPPORTED_QUERY"/>
                    <enumeration value="BATCH_PROCESSING_HALTED"/>
                    <enumeration value="BIG_OBJECT_UNSUPPORTED_OPERATION"/>
                    <enumeration value="CANNOT_DELETE_ENTITY"/>
                    <enumeration value="CANNOT_DELETE_OWNER"/>
                    <enumeration value="CANT_ADD_STANDADRD_PORTAL_USER_TO_TERRITORY"/>
                    <enumeration value="CANT_ADD_STANDARD_PORTAL_USER_TO_TERRITORY"/>
                    <enumeration value="CIRCULAR_OBJECT_GRAPH"/>
                    <enumeration value="CLIENT_NOT_ACCESSIBLE_FOR_USER"/>
                    <enumeration value="CLIENT_REQUIRE_UPDATE_FOR_USER"/>
                    <enumeration value="CONTENT_CUSTOM_DOWNLOAD_EXCEPTION"/>
                    <enumeration value="CONTENT_HUB_AUTHENTICATION_EXCEPTION"/>
                    <enumeration value="CONTENT_HUB_FILE_DOWNLOAD_EXCEPTION"/>
                    <enumeration value="CONTENT_HUB_FILE_HAS_NO_URL_EXCEPTION"/>
                    <enumeration value="CONTENT_HUB_FILE_NOT_FOUND_EXCEPTION"/>
                    <enumeration value="CONTENT_HUB_INVALID_OBJECT_TYPE_EXCEPTION"/>
                    <enumeration value="CONTENT_HUB_INVALID_PAGE_NUMBER_EXCEPTION"/>
                    <enumeration value="CONTENT_HUB_INVALID_PAYLOAD"/>
                    <enumeration value="CONTENT_HUB_INVALID_RENDITION_PAGE_NUMBER_EXCEPTION"/>
                    <enumeration value="CONTENT_HUB_ITEM_TYPE_NOT_FOUND_EXCEPTION"/>
                    <enumeration value="CONTENT_HUB_OBJECT_NOT_FOUND_EXCEPTION"/>
                    <enumeration value="CONTENT_HUB_OPERATION_NOT_SUPPORTED_EXCEPTION"/>
                    <enumeration value="CONTENT_HUB_SECURITY_EXCEPTION"/>
                    <enumeration value="CONTENT_HUB_TIMEOUT_EXCEPTION"/>
                    <enumeration value="CONTENT_HUB_UNEXPECTED_EXCEPTION"/>
                    <enumeration value="CUSTOM_METADATA_LIMIT_EXCEEDED"/>
                    <enumeration value="CUSTOM_SETTINGS_LIMIT_EXCEEDED"/>
                    <enumeration value="DATACLOUD_API_CLIENT_EXCEPTION"/>
                    <enumeration value="DATACLOUD_API_DISABLED_EXCEPTION"/>
                    <enumeration value="DATACLOUD_API_INVALID_QUERY_EXCEPTION"/>
                    <enumeration value="DATACLOUD_API_SERVER_BUSY_EXCEPTION"/>
                    <enumeration value="DATACLOUD_API_SERVER_EXCEPTION"/>
                    <enumeration value="DATACLOUD_API_TIMEOUT_EXCEPTION"/>
                    <enumeration value="DATACLOUD_API_UNAVAILABLE"/>
                    <enumeration value="DATA_INTEGRATION_INPUT_ERROR"/>
                    <enumeration value="DATA_INTEGRATION_NO_ACCESS"/>
                    <enumeration value="DATA_INTEGRATION_SERVER_ERROR"/>
                    <enumeration value="DUPLICATE_ARGUMENT_VALUE"/>
                    <enumeration value="DUPLICATE_VALUE"/>
                    <enumeration value="EMAIL_BATCH_SIZE_LIMIT_EXCEEDED"/>
                    <enumeration value="EMAIL_TO_CASE_INVALID_ROUTING"/>
                    <enumeration value="EMAIL_TO_CASE_LIMIT_EXCEEDED"/>
                    <enumeration value="EMAIL_TO_CASE_NOT_ENABLED"/>
                    <enumeration value="ENTITY_NOT_QUERYABLE"/>
                    <enumeration value="ENVIRONMENT_HUB_MEMBERSHIP_CONFLICT"/>
                    <enumeration value="EXCEEDED_ID_LIMIT"/>
                    <enumeration value="EXCEEDED_LEAD_CONVERT_LIMIT"/>
                    <enumeration value="EXCEEDED_MAX_SIZE_REQUEST"/>
                    <enumeration value="EXCEEDED_MAX_SOBJECTS"/>
                    <enumeration value="EXCEEDED_MAX_TYPES_LIMIT"/>
                    <enumeration value="EXCEEDED_QUOTA"/>
                    <enumeration value="EXTERNAL_OBJECT_AUTHENTICATION_EXCEPTION"/>
                    <enumeration value="EXTERNAL_OBJECT_CONNECTION_EXCEPTION"/>
                    <enumeration value="EXTERNAL_OBJECT_EXCEPTION"/>
                    <enumeration value="EXTERNAL_OBJECT_UNSUPPORTED_EXCEPTION"/>
                    <enumeration value="FEDERATED_SEARCH_ERROR"/>
                    <enumeration value="FEED_NOT_ENABLED_FOR_OBJECT"/>
                    <enumeration value="FUNCTIONALITY_NOT_ENABLED"/>
                    <enumeration value="FUNCTIONALITY_TEMPORARILY_UNAVAILABLE"/>
                    <enumeration value="ILLEGAL_QUERY_PARAMETER_VALUE"/>
                    <enumeration value="INACTIVE_OWNER_OR_USER"/>
                    <enumeration value="INACTIVE_PORTAL"/>
                    <enumeration value="INSERT_UPDATE_DELETE_NOT_ALLOWED_DURING_MAINTENANCE"/>
                    <enumeration value="INSUFFICIENT_ACCESS"/>
                    <enumeration value="INSUFFICIENT_ACCESS_APEX_METADATA_DEPLOY"/>
                    <enumeration value="INTERNAL_CANVAS_ERROR"/>
                    <enumeration value="INVALID_ASSIGNMENT_RULE"/>
                    <enumeration value="INVALID_BATCH_REQUEST"/>
                    <enumeration value="INVALID_BATCH_SIZE"/>
                    <enumeration value="INVALID_CLIENT"/>
                    <enumeration value="INVALID_CROSS_REFERENCE_KEY"/>
                    <enumeration value="INVALID_DATE_FORMAT"/>
                    <enumeration value="INVALID_FIELD"/>
                    <enumeration value="INVALID_FILTER_LANGUAGE"/>
                    <enumeration value="INVALID_FILTER_VALUE"/>
                    <enumeration value="INVALID_ID_FIELD"/>
                    <enumeration value="INVALID_INPUT_COMBINATION"/>
                    <enumeration value="INVALID_LOCALE_LANGUAGE"/>
                    <enumeration value="INVALID_LOCATOR"/>
                    <enumeration value="INVALID_LOGIN"/>
                    <enumeration value="INVALID_MULTIPART_REQUEST"/>
                    <enumeration value="INVALID_NEW_PASSWORD"/>
                    <enumeration value="INVALID_OLD_PASSWORD"/>
                    <enumeration value="INVALID_OPERATION"/>
                    <enumeration value="INVALID_OPERATION_WITH_EXPIRED_PASSWORD"/>
                    <enumeration value="INVALID_PACKAGE_VERSION"/>
                    <enumeration value="INVALID_PAGING_OPTION"/>
                    <enumeration value="INVALID_QUERY_FILTER_OPERATOR"/>
                    <enumeration value="INVALID_QUERY_LOCATOR"/>
                    <enumeration value="INVALID_QUERY_SCOPE"/>
                    <enumeration value="INVALID_REPLICATION_DATE"/>
                    <enumeration value="INVALID_SEARCH"/>
                    <enumeration value="INVALID_SEARCH_SCOPE"/>
                    <enumeration value="INVALID_SESSION_ID"/>
                    <enumeration value="INVALID_SOAP_HEADER"/>
                    <enumeration value="INVALID_SORT_OPTION"/>
                    <enumeration value="INVALID_SSO_GATEWAY_URL"/>
                    <enumeration value="INVALID_TYPE"/>
                    <enumeration value="INVALID_TYPE_FOR_OPERATION"/>
                    <enumeration value="JIGSAW_ACTION_DISABLED"/>
                    <enumeration value="JIGSAW_IMPORT_LIMIT_EXCEEDED"/>
                    <enumeration value="JIGSAW_REQUEST_NOT_SUPPORTED"/>
                    <enumeration value="JSON_PARSER_ERROR"/>
                    <enumeration value="KEY_HAS_BEEN_DESTROYED"/>
                    <enumeration value="LICENSING_DATA_ERROR"/>
                    <enumeration value="LICENSING_UNKNOWN_ERROR"/>
                    <enumeration value="LIMIT_EXCEEDED"/>
                    <enumeration value="LOGIN_CHALLENGE_ISSUED"/>
                    <enumeration value="LOGIN_CHALLENGE_PENDING"/>
                    <enumeration value="LOGIN_DURING_RESTRICTED_DOMAIN"/>
                    <enumeration value="LOGIN_DURING_RESTRICTED_TIME"/>
                    <enumeration value="LOGIN_MUST_USE_SECURITY_TOKEN"/>
                    <enumeration value="MALFORMED_ID"/>
                    <enumeration value="MALFORMED_QUERY"/>
                    <enumeration value="MALFORMED_SEARCH"/>
                    <enumeration value="MISSING_ARGUMENT"/>
                    <enumeration value="MISSING_RECORD"/>
                    <enumeration value="MODIFIED"/>
                    <enumeration value="MUTUAL_AUTHENTICATION_FAILED"/>
                    <enumeration value="NOT_ACCEPTABLE"/>
                    <enumeration value="NOT_MODIFIED"/>
                    <enumeration value="NO_ACTIVE_DUPLICATE_RULE"/>
                    <enumeration value="NO_RECIPIENTS"/>
                    <enumeration value="NO_SOFTPHONE_LAYOUT"/>
                    <enumeration value="NUMBER_OUTSIDE_VALID_RANGE"/>
                    <enumeration value="OPERATION_TOO_LARGE"/>
                    <enumeration value="ORG_IN_MAINTENANCE"/>
                    <enumeration value="ORG_IS_DOT_ORG"/>
                    <enumeration value="ORG_IS_SIGNING_UP"/>
                    <enumeration value="ORG_LOCKED"/>
                    <enumeration value="ORG_NOT_OWNED_BY_INSTANCE"/>
                    <enumeration value="PASSWORD_LOCKOUT"/>
                    <enumeration value="PORTAL_NO_ACCESS"/>
                    <enumeration value="POST_BODY_PARSE_ERROR"/>
                    <enumeration value="QUERY_TIMEOUT"/>
                    <enumeration value="QUERY_TOO_COMPLICATED"/>
                    <enumeration value="REALTIME_PROCESSING_TIME_EXCEEDED_LIMIT"/>
                    <enumeration value="REQUEST_LIMIT_EXCEEDED"/>
                    <enumeration value="REQUEST_RUNNING_TOO_LONG"/>
                    <enumeration value="SERVER_UNAVAILABLE"/>
                    <enumeration value="SERVICE_DESK_NOT_ENABLED"/>
                    <enumeration value="SOCIALCRM_FEEDSERVICE_API_CLIENT_EXCEPTION"/>
                    <enumeration value="SOCIALCRM_FEEDSERVICE_API_SERVER_EXCEPTION"/>
                    <enumeration value="SOCIALCRM_FEEDSERVICE_API_UNAVAILABLE"/>
                    <enumeration value="SSO_SERVICE_DOWN"/>
                    <enumeration value="SST_ADMIN_FILE_DOWNLOAD_EXCEPTION"/>
                    <enumeration value="TOO_MANY_APEX_REQUESTS"/>
                    <enumeration value="TOO_MANY_RECIPIENTS"/>
                    <enumeration value="TOO_MANY_RECORDS"/>
                    <enumeration value="TRIAL_EXPIRED"/>
                    <enumeration value="TXN_SECURITY_END_A_SESSION"/>
                    <enumeration value="TXN_SECURITY_NO_ACCESS"/>
                    <enumeration value="TXN_SECURITY_TWO_FA_REQUIRED"/>
                    <enumeration value="UNABLE_TO_LOCK_ROW"/>
                    <enumeration value="UNKNOWN_ATTACHMENT_EXCEPTION"/>
                    <enumeration value="UNKNOWN_EXCEPTION"/>
                    <enumeration value="UNKNOWN_ORG_SETTING"/>
                    <enumeration value="UNSUPPORTED_API_VERSION"/>
                    <enumeration value="UNSUPPORTED_ATTACHMENT_ENCODING"/>
                    <enumeration value="UNSUPPORTED_CLIENT"/>
                    <enumeration value="UNSUPPORTED_MEDIA_TYPE"/>
                    <enumeration value="XML_PARSER_ERROR"/>
                </restriction>
            </simpleType>
            <!-- For convenience these QNames are returned in the standard soap faultcode element -->
            <simpleType name="FaultCode">
                <restriction base="xsd:QName">
                    <enumeration value="fns:APEX_REST_SERVICES_DISABLED"/>
                    <enumeration value="fns:APEX_TRIGGER_COUPLING_LIMIT"/>
                    <enumeration value="fns:API_CURRENTLY_DISABLED"/>
                    <enumeration value="fns:API_DISABLED_FOR_ORG"/>
                    <enumeration value="fns:ARGUMENT_OBJECT_PARSE_ERROR"/>
                    <enumeration value="fns:ASYNC_OPERATION_LOCATOR"/>
                    <enumeration value="fns:ASYNC_QUERY_UNSUPPORTED_QUERY"/>
                    <enumeration value="fns:BATCH_PROCESSING_HALTED"/>
                    <enumeration value="fns:BIG_OBJECT_UNSUPPORTED_OPERATION"/>
                    <enumeration value="fns:CANNOT_DELETE_ENTITY"/>
                    <enumeration value="fns:CANNOT_DELETE_OWNER"/>
                    <enumeration value="fns:CANT_ADD_STANDADRD_PORTAL_USER_TO_TERRITORY"/>
                    <enumeration value="fns:CANT_ADD_STANDARD_PORTAL_USER_TO_TERRITORY"/>
                    <enumeration value="fns:CIRCULAR_OBJECT_GRAPH"/>
                    <enumeration value="fns:CLIENT_NOT_ACCESSIBLE_FOR_USER"/>
                    <enumeration value="fns:CLIENT_REQUIRE_UPDATE_FOR_USER"/>
                    <enumeration value="fns:CONTENT_CUSTOM_DOWNLOAD_EXCEPTION"/>
                    <enumeration value="fns:CONTENT_HUB_AUTHENTICATION_EXCEPTION"/>
                    <enumeration value="fns:CONTENT_HUB_FILE_DOWNLOAD_EXCEPTION"/>
                    <enumeration value="fns:CONTENT_HUB_FILE_HAS_NO_URL_EXCEPTION"/>
                    <enumeration value="fns:CONTENT_HUB_FILE_NOT_FOUND_EXCEPTION"/>
                    <enumeration value="fns:CONTENT_HUB_INVALID_OBJECT_TYPE_EXCEPTION"/>
                    <enumeration value="fns:CONTENT_HUB_INVALID_PAGE_NUMBER_EXCEPTION"/>
                    <enumeration value="fns:CONTENT_HUB_INVALID_PAYLOAD"/>
                    <enumeration value="fns:CONTENT_HUB_INVALID_RENDITION_PAGE_NUMBER_EXCEPTION"/>
                    <enumeration value="fns:CONTENT_HUB_ITEM_TYPE_NOT_FOUND_EXCEPTION"/>
                    <enumeration value="fns:CONTENT_HUB_OBJECT_NOT_FOUND_EXCEPTION"/>
                    <enumeration value="fns:CONTENT_HUB_OPERATION_NOT_SUPPORTED_EXCEPTION"/>
                    <enumeration value="fns:CONTENT_HUB_SECURITY_EXCEPTION"/>
                    <enumeration value="fns:CONTENT_HUB_TIMEOUT_EXCEPTION"/>
                    <enumeration value="fns:CONTENT_HUB_UNEXPECTED_EXCEPTION"/>
                    <enumeration value="fns:CUSTOM_METADATA_LIMIT_EXCEEDED"/>
                    <enumeration value="fns:CUSTOM_SETTINGS_LIMIT_EXCEEDED"/>
                    <enumeration value="fns:DATACLOUD_API_CLIENT_EXCEPTION"/>
                    <enumeration value="fns:DATACLOUD_API_DISABLED_EXCEPTION"/>
                    <enumeration value="fns:DATACLOUD_API_INVALID_QUERY_EXCEPTION"/>
                    <enumeration value="fns:DATACLOUD_API_SERVER_BUSY_EXCEPTION"/>
                    <enumeration value="fns:DATACLOUD_API_SERVER_EXCEPTION"/>
                    <enumeration value="fns:DATACLOUD_API_TIMEOUT_EXCEPTION"/>
                    <enumeration value="fns:DATACLOUD_API_UNAVAILABLE"/>
                    <enumeration value="fns:DATA_INTEGRATION_INPUT_ERROR"/>
                    <enumeration value="fns:DATA_INTEGRATION_NO_ACCESS"/>
                    <enumeration value="fns:DATA_INTEGRATION_SERVER_ERROR"/>
                    <enumeration value="fns:DUPLICATE_ARGUMENT_VALUE"/>
                    <enumeration value="fns:DUPLICATE_VALUE"/>
                    <enumeration value="fns:EMAIL_BATCH_SIZE_LIMIT_EXCEEDED"/>
                    <enumeration value="fns:EMAIL_TO_CASE_INVALID_ROUTING"/>
                    <enumeration value="fns:EMAIL_TO_CASE_LIMIT_EXCEEDED"/>
                    <enumeration value="fns:EMAIL_TO_CASE_NOT_ENABLED"/>
                    <enumeration value="fns:ENTITY_NOT_QUERYABLE"/>
                    <enumeration value="fns:ENVIRONMENT_HUB_MEMBERSHIP_CONFLICT"/>
                    <enumeration value="fns:EXCEEDED_ID_LIMIT"/>
                    <enumeration value="fns:EXCEEDED_LEAD_CONVERT_LIMIT"/>
                    <enumeration value="fns:EXCEEDED_MAX_SIZE_REQUEST"/>
                    <enumeration value="fns:EXCEEDED_MAX_SOBJECTS"/>
                    <enumeration value="fns:EXCEEDED_MAX_TYPES_LIMIT"/>
                    <enumeration value="fns:EXCEEDED_QUOTA"/>
                    <enumeration value="fns:EXTERNAL_OBJECT_AUTHENTICATION_EXCEPTION"/>
                    <enumeration value="fns:EXTERNAL_OBJECT_CONNECTION_EXCEPTION"/>
                    <enumeration value="fns:EXTERNAL_OBJECT_EXCEPTION"/>
                    <enumeration value="fns:EXTERNAL_OBJECT_UNSUPPORTED_EXCEPTION"/>
                    <enumeration value="fns:FEDERATED_SEARCH_ERROR"/>
                    <enumeration value="fns:FEED_NOT_ENABLED_FOR_OBJECT"/>
                    <enumeration value="fns:FUNCTIONALITY_NOT_ENABLED"/>
                    <enumeration value="fns:FUNCTIONALITY_TEMPORARILY_UNAVAILABLE"/>
                    <enumeration value="fns:ILLEGAL_QUERY_PARAMETER_VALUE"/>
                    <enumeration value="fns:INACTIVE_OWNER_OR_USER"/>
                    <enumeration value="fns:INACTIVE_PORTAL"/>
                    <enumeration value="fns:INSERT_UPDATE_DELETE_NOT_ALLOWED_DURING_MAINTENANCE"/>
                    <enumeration value="fns:INSUFFICIENT_ACCESS"/>
                    <enumeration value="fns:INSUFFICIENT_ACCESS_APEX_METADATA_DEPLOY"/>
                    <enumeration value="fns:INTERNAL_CANVAS_ERROR"/>
                    <enumeration value="fns:INVALID_ASSIGNMENT_RULE"/>
                    <enumeration value="fns:INVALID_BATCH_REQUEST"/>
                    <enumeration value="fns:INVALID_BATCH_SIZE"/>
                    <enumeration value="fns:INVALID_CLIENT"/>
                    <enumeration value="fns:INVALID_CROSS_REFERENCE_KEY"/>
                    <enumeration value="fns:INVALID_DATE_FORMAT"/>
                    <enumeration value="fns:INVALID_FIELD"/>
                    <enumeration value="fns:INVALID_FILTER_LANGUAGE"/>
                    <enumeration value="fns:INVALID_FILTER_VALUE"/>
                    <enumeration value="fns:INVALID_ID_FIELD"/>
                    <enumeration value="fns:INVALID_INPUT_COMBINATION"/>
                    <enumeration value="fns:INVALID_LOCALE_LANGUAGE"/>
                    <enumeration value="fns:INVALID_LOCATOR"/>
                    <enumeration value="fns:INVALID_LOGIN"/>
                    <enumeration value="fns:INVALID_MULTIPART_REQUEST"/>
                    <enumeration value="fns:INVALID_NEW_PASSWORD"/>
                    <enumeration value="fns:INVALID_OLD_PASSWORD"/>
                    <enumeration value="fns:INVALID_OPERATION"/>
                    <enumeration value="fns:INVALID_OPERATION_WITH_EXPIRED_PASSWORD"/>
                    <enumeration value="fns:INVALID_PACKAGE_VERSION"/>
                    <enumeration value="fns:INVALID_PAGING_OPTION"/>
                    <enumeration value="fns:INVALID_QUERY_FILTER_OPERATOR"/>
                    <enumeration value="fns:INVALID_QUERY_LOCATOR"/>
                    <enumeration value="fns:INVALID_QUERY_SCOPE"/>
                    <enumeration value="fns:INVALID_REPLICATION_DATE"/>
                    <enumeration value="fns:INVALID_SEARCH"/>
                    <enumeration value="fns:INVALID_SEARCH_SCOPE"/>
                    <enumeration value="fns:INVALID_SESSION_ID"/>
                    <enumeration value="fns:INVALID_SOAP_HEADER"/>
                    <enumeration value="fns:INVALID_SORT_OPTION"/>
                    <enumeration value="fns:INVALID_SSO_GATEWAY_URL"/>
                    <enumeration value="fns:INVALID_TYPE"/>
                    <enumeration value="fns:INVALID_TYPE_FOR_OPERATION"/>
                    <enumeration value="fns:JIGSAW_ACTION_DISABLED"/>
                    <enumeration value="fns:JIGSAW_IMPORT_LIMIT_EXCEEDED"/>
                    <enumeration value="fns:JIGSAW_REQUEST_NOT_SUPPORTED"/>
                    <enumeration value="fns:JSON_PARSER_ERROR"/>
                    <enumeration value="fns:KEY_HAS_BEEN_DESTROYED"/>
                    <enumeration value="fns:LICENSING_DATA_ERROR"/>
                    <enumeration value="fns:LICENSING_UNKNOWN_ERROR"/>
                    <enumeration value="fns:LIMIT_EXCEEDED"/>
                    <enumeration value="fns:LOGIN_CHALLENGE_ISSUED"/>
                    <enumeration value="fns:LOGIN_CHALLENGE_PENDING"/>
                    <enumeration value="fns:LOGIN_DURING_RESTRICTED_DOMAIN"/>
                    <enumeration value="fns:LOGIN_DURING_RESTRICTED_TIME"/>
                    <enumeration value="fns:LOGIN_MUST_USE_SECURITY_TOKEN"/>
                    <enumeration value="fns:MALFORMED_ID"/>
                    <enumeration value="fns:MALFORMED_QUERY"/>
                    <enumeration value="fns:MALFORMED_SEARCH"/>
                    <enumeration value="fns:MISSING_ARGUMENT"/>
                    <enumeration value="fns:MISSING_RECORD"/>
                    <enumeration value="fns:MODIFIED"/>
                    <enumeration value="fns:MUTUAL_AUTHENTICATION_FAILED"/>
                    <enumeration value="fns:NOT_ACCEPTABLE"/>
                    <enumeration value="fns:NOT_MODIFIED"/>
                    <enumeration value="fns:NO_ACTIVE_DUPLICATE_RULE"/>
                    <enumeration value="fns:NO_RECIPIENTS"/>
                    <enumeration value="fns:NO_SOFTPHONE_LAYOUT"/>
                    <enumeration value="fns:NUMBER_OUTSIDE_VALID_RANGE"/>
                    <enumeration value="fns:OPERATION_TOO_LARGE"/>
                    <enumeration value="fns:ORG_IN_MAINTENANCE"/>
                    <enumeration value="fns:ORG_IS_DOT_ORG"/>
                    <enumeration value="fns:ORG_IS_SIGNING_UP"/>
                    <enumeration value="fns:ORG_LOCKED"/>
                    <enumeration value="fns:ORG_NOT_OWNED_BY_INSTANCE"/>
                    <enumeration value="fns:PASSWORD_LOCKOUT"/>
                    <enumeration value="fns:PORTAL_NO_ACCESS"/>
                    <enumeration value="fns:POST_BODY_PARSE_ERROR"/>
                    <enumeration value="fns:QUERY_TIMEOUT"/>
                    <enumeration value="fns:QUERY_TOO_COMPLICATED"/>
                    <enumeration value="fns:REALTIME_PROCESSING_TIME_EXCEEDED_LIMIT"/>
                    <enumeration value="fns:REQUEST_LIMIT_EXCEEDED"/>
                    <enumeration value="fns:REQUEST_RUNNING_TOO_LONG"/>
                    <enumeration value="fns:SERVER_UNAVAILABLE"/>
                    <enumeration value="fns:SERVICE_DESK_NOT_ENABLED"/>
                    <enumeration value="fns:SOCIALCRM_FEEDSERVICE_API_CLIENT_EXCEPTION"/>
                    <enumeration value="fns:SOCIALCRM_FEEDSERVICE_API_SERVER_EXCEPTION"/>
                    <enumeration value="fns:SOCIALCRM_FEEDSERVICE_API_UNAVAILABLE"/>
                    <enumeration value="fns:SSO_SERVICE_DOWN"/>
                    <enumeration value="fns:SST_ADMIN_FILE_DOWNLOAD_EXCEPTION"/>
                    <enumeration value="fns:TOO_MANY_APEX_REQUESTS"/>
                    <enumeration value="fns:TOO_MANY_RECIPIENTS"/>
                    <enumeration value="fns:TOO_MANY_RECORDS"/>
                    <enumeration value="fns:TRIAL_EXPIRED"/>
                    <enumeration value="fns:TXN_SECURITY_END_A_SESSION"/>
                    <enumeration value="fns:TXN_SECURITY_NO_ACCESS"/>
                    <enumeration value="fns:TXN_SECURITY_TWO_FA_REQUIRED"/>
                    <enumeration value="fns:UNABLE_TO_LOCK_ROW"/>
                    <enumeration value="fns:UNKNOWN_ATTACHMENT_EXCEPTION"/>
                    <enumeration value="fns:UNKNOWN_EXCEPTION"/>
                    <enumeration value="fns:UNKNOWN_ORG_SETTING"/>
                    <enumeration value="fns:UNSUPPORTED_API_VERSION"/>
                    <enumeration value="fns:UNSUPPORTED_ATTACHMENT_ENCODING"/>
                    <enumeration value="fns:UNSUPPORTED_CLIENT"/>
                    <enumeration value="fns:UNSUPPORTED_MEDIA_TYPE"/>
                    <enumeration value="fns:XML_PARSER_ERROR"/>
                </restriction>
            </simpleType>


            <!-- Fault -->
            <complexType name="ApiFault">
                <sequence>
                    <element name="exceptionCode"    type="fns:ExceptionCode"/>
                    <element name="exceptionMessage" type="xsd:string"/>

                    <element name="extendedErrorDetails" type="tns:ExtendedErrorDetails" nillable="true" minOccurs="0" maxOccurs="unbounded"/>


                </sequence>
            </complexType>

            <element name="fault" type="fns:ApiFault" />

            <complexType name="ApiQueryFault">
                <complexContent>
                    <extension base="fns:ApiFault">
                        <sequence>
                        <element name="row" type="xsd:int"/>
                        <element name="column" type="xsd:int"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>

            <complexType name="LoginFault">
                <complexContent>
                    <extension base="fns:ApiFault"/>
                </complexContent>
            </complexType>
            <element name="LoginFault" type="fns:LoginFault"/>

            <complexType name="InvalidQueryLocatorFault">
                <complexContent>
                    <extension base="fns:ApiFault"/>
                </complexContent>
            </complexType>
            <element name="InvalidQueryLocatorFault" type="fns:InvalidQueryLocatorFault"/>

            <complexType name="InvalidNewPasswordFault">
                <complexContent>
                    <extension base="fns:ApiFault"/>
                </complexContent>
            </complexType>
            <element name="InvalidNewPasswordFault" type="fns:InvalidNewPasswordFault"/>

            <complexType name="InvalidOldPasswordFault">
                <complexContent>
                    <extension base="fns:ApiFault"/>
                </complexContent>
            </complexType>
            <element name="InvalidOldPasswordFault" type="fns:InvalidOldPasswordFault"/>

            <complexType name="InvalidIdFault">
                <complexContent>
                    <extension base="fns:ApiFault"/>
                </complexContent>
            </complexType>
            <element name="InvalidIdFault" type="fns:InvalidIdFault"/>

            <complexType name="UnexpectedErrorFault">
                <complexContent>
                    <extension base="fns:ApiFault"/>
                </complexContent>
            </complexType>
            <element name="UnexpectedErrorFault" type="fns:UnexpectedErrorFault"/>

            <complexType name="InvalidFieldFault">
                <complexContent>
                    <extension base="fns:ApiQueryFault"/>
                </complexContent>
            </complexType>
            <element name="InvalidFieldFault" type="fns:InvalidFieldFault"/>

            <complexType name="InvalidSObjectFault">
                <complexContent>
                    <extension base="fns:ApiQueryFault"/>
                </complexContent>
            </complexType>
            <element name="InvalidSObjectFault" type="fns:InvalidSObjectFault"/>

            <complexType name="MalformedQueryFault">
                <complexContent>
                    <extension base="fns:ApiQueryFault"/>
                </complexContent>
            </complexType>
            <element name="MalformedQueryFault" type="fns:MalformedQueryFault"/>

            <complexType name="MalformedSearchFault">
                <complexContent>
                    <extension base="fns:ApiQueryFault"/>
                </complexContent>
            </complexType>
            <element name="MalformedSearchFault" type="fns:MalformedSearchFault"/>


        </schema>
    </types>

    <!-- Header Message -->
    <message name="Header">
        <part element="tns:LoginScopeHeader"             name="LoginScopeHeader"/>
        <part element="tns:SessionHeader"                name="SessionHeader"/>


        <part element="tns:QueryOptions"                 name="QueryOptions"/>
        <part element="tns:AssignmentRuleHeader"         name="AssignmentRuleHeader"/>
        <part element="tns:AllowFieldTruncationHeader"   name="AllowFieldTruncationHeader"/>

        <part element="tns:AllOrNoneHeader"              name="AllOrNoneHeader"/>




        <part element="tns:DuplicateRuleHeader"          name="DuplicateRuleHeader"/>


        <part element="tns:DisableFeedTrackingHeader"    name="DisableFeedTrackingHeader"/>
        <part element="tns:StreamingEnabledHeader"       name="StreamingEnabledHeader"/>
        <part element="tns:MruHeader"                    name="MruHeader"/>
        <part element="tns:EmailHeader"                  name="EmailHeader"/>

        <part element="tns:UserTerritoryDeleteHeader"    name="UserTerritoryDeleteHeader"/>

        <part element="tns:DebuggingHeader"              name="DebuggingHeader"/>
        <part element="tns:PackageVersionHeader"         name="PackageVersionHeader"/>


        <part element="tns:DebuggingInfo"                name="DebuggingInfo"/>

        <part element="tns:LimitInfoHeader"              name="LimitInfoHeader"/>

        <part element="tns:LocaleOptions"                name="LocaleOptions"/>

        <part element="tns:OwnerChangeOptions"           name="OwnerChangeOptions"/>

    </message>

    <!-- Fault Messages -->

    <message name="ApiFault">
        <part name="fault" element="fns:fault"/>
    </message>

    <message name="LoginFault">
        <part name="fault" element="fns:LoginFault"/>
    </message>
    <message name="InvalidQueryLocatorFault">
        <part name="fault" element="fns:InvalidQueryLocatorFault"/>
    </message>
    <message name="InvalidNewPasswordFault">
        <part name="fault" element="fns:InvalidNewPasswordFault"/>
    </message>
    <message name="InvalidOldPasswordFault">
        <part name="fault" element="fns:InvalidOldPasswordFault"/>
    </message>
    <message name="InvalidIdFault">
        <part name="fault" element="fns:InvalidIdFault"/>
    </message>
    <message name="UnexpectedErrorFault">
        <part name="fault" element="fns:UnexpectedErrorFault"/>
    </message>
    <message name="InvalidFieldFault">
        <part name="fault" element="fns:InvalidFieldFault"/>
    </message>
    <message name="InvalidSObjectFault">
        <part name="fault" element="fns:InvalidSObjectFault"/>
    </message>
    <message name="MalformedQueryFault">
        <part name="fault" element="fns:MalformedQueryFault"/>
    </message>
    <message name="MalformedSearchFault">
        <part name="fault" element="fns:MalformedSearchFault"/>
    </message>


    <!-- Method Messages -->
    <message name="loginRequest">
        <part element="tns:login" name="parameters"/>
    </message>
    <message name="loginResponse">
        <part element="tns:loginResponse" name="parameters"/>
    </message>

    <message name="describeSObjectRequest">
        <part element="tns:describeSObject" name="parameters"/>
    </message>
    <message name="describeSObjectResponse">
        <part element="tns:describeSObjectResponse" name="parameters"/>
    </message>

    <message name="describeSObjectsRequest">
        <part element="tns:describeSObjects" name="parameters"/>
    </message>
    <message name="describeSObjectsResponse">
        <part element="tns:describeSObjectsResponse" name="parameters"/>
    </message>

    <message name="describeGlobalRequest">
        <part element="tns:describeGlobal" name="parameters"/>
    </message>
    <message name="describeGlobalResponse">
        <part element="tns:describeGlobalResponse" name="parameters"/>
    </message>

    <message name="describeDataCategoryGroupsRequest">
        <part element="tns:describeDataCategoryGroups" name="parameters"/>
    </message>
    <message name="describeDataCategoryGroupsResponse">
        <part element="tns:describeDataCategoryGroupsResponse" name="parameters"/>
    </message>

    <message name="describeDataCategoryGroupStructuresRequest">
        <part element="tns:describeDataCategoryGroupStructures" name="parameters"/>
    </message>
    <message name="describeDataCategoryGroupStructuresResponse">
        <part element="tns:describeDataCategoryGroupStructuresResponse" name="parameters"/>
    </message>

    <message name="describeKnowledgeSettingsRequest">
        <part element="tns:describeKnowledgeSettings" name="parameters"/>
    </message>
    <message name="describeKnowledgeSettingsResponse">
        <part element="tns:describeKnowledgeSettingsResponse" name="parameters"/>
    </message>

    <message name="describeAppMenuRequest">
        <part element="tns:describeAppMenu" name="parameters"/>
    </message>
    <message name="describeAppMenuResponse">
        <part element="tns:describeAppMenuResponse" name="parameters"/>
    </message>

    <message name="describeGlobalThemeRequest">
        <part element="tns:describeGlobalTheme" name="parameters"/>
    </message>
    <message name="describeGlobalThemeResponse">
        <part element="tns:describeGlobalThemeResponse" name="parameters"/>
    </message>

    <message name="describeThemeRequest">
        <part element="tns:describeTheme" name="parameters"/>
    </message>
    <message name="describeThemeResponse">
        <part element="tns:describeThemeResponse" name="parameters"/>
    </message>

    <message name="describeLayoutRequest">
        <part element="tns:describeLayout" name="parameters"/>
    </message>
    <message name="describeLayoutResponse">
        <part element="tns:describeLayoutResponse" name="parameters"/>
    </message>

    <message name="describeSoftphoneLayoutRequest">
        <part element="tns:describeSoftphoneLayout" name="parameters"/>
    </message>
    <message name="describeSoftphoneLayoutResponse">
        <part element="tns:describeSoftphoneLayoutResponse" name="parameters"/>
    </message>

    <message name="describeSearchLayoutsRequest">
        <part element="tns:describeSearchLayouts" name="parameters"/>
    </message>
    <message name="describeSearchLayoutsResponse">
        <part element="tns:describeSearchLayoutsResponse" name="parameters"/>
    </message>

    <message name="describeSearchableEntitiesRequest">
        <part element="tns:describeSearchableEntities" name="parameters"/>
    </message>
    <message name="describeSearchableEntitiesResponse">
        <part element="tns:describeSearchableEntitiesResponse" name="parameters"/>
    </message>

    <message name="describeSearchScopeOrderRequest">
        <part element="tns:describeSearchScopeOrder" name="parameters"/>
    </message>
    <message name="describeSearchScopeOrderResponse">
        <part element="tns:describeSearchScopeOrderResponse" name="parameters"/>
    </message>

    <message name="describeCompactLayoutsRequest">
        <part element="tns:describeCompactLayouts" name="parameters"/>
    </message>
    <message name="describeCompactLayoutsResponse">
        <part element="tns:describeCompactLayoutsResponse" name="parameters"/>
    </message>

    <message name="describePathAssistantsRequest">
        <part element="tns:describePathAssistants" name="parameters"/>
    </message>
    <message name="describePathAssistantsResponse">
        <part element="tns:describePathAssistantsResponse" name="parameters"/>
    </message>

    <message name="describeApprovalLayoutRequest">
        <part element="tns:describeApprovalLayout" name="parameters"/>
    </message>
    <message name="describeApprovalLayoutResponse">
        <part element="tns:describeApprovalLayoutResponse" name="parameters"/>
    </message>

    <message name="describeSoqlListViewsRequest">
        <part element="tns:describeSoqlListViews" name="parameters"/>
    </message>
    <message name="describeSoqlListViewsResponse">
        <part element="tns:describeSoqlListViewsResponse" name="parameters"/>
    </message>

    <message name="executeListViewRequest">
        <part element="tns:executeListView" name="parameters"/>
    </message>
    <message name="executeListViewResponse">
        <part element="tns:executeListViewResponse" name="parameters"/>
    </message>

    <message name="describeSObjectListViewsRequest">
        <part element="tns:describeSObjectListViews" name="parameters"/>
    </message>
    <message name="describeSObjectListViewsResponse">
        <part element="tns:describeSObjectListViewsResponse" name="parameters"/>
    </message>

    <message name="describeTabsRequest">
        <part element="tns:describeTabs" name="parameters"/>
    </message>
    <message name="describeTabsResponse">
        <part element="tns:describeTabsResponse" name="parameters"/>
    </message>

    <message name="describeAllTabsRequest">
        <part element="tns:describeAllTabs" name="parameters"/>
    </message>
    <message name="describeAllTabsResponse">
        <part element="tns:describeAllTabsResponse" name="parameters"/>
    </message>

    <message name="describePrimaryCompactLayoutsRequest">
        <part element="tns:describePrimaryCompactLayouts" name="parameters"/>
    </message>
    <message name="describePrimaryCompactLayoutsResponse">
        <part element="tns:describePrimaryCompactLayoutsResponse" name="parameters"/>
    </message>

    <message name="createRequest">
        <part element="tns:create" name="parameters"/>
    </message>
    <message name="createResponse">
        <part element="tns:createResponse" name="parameters"/>
    </message>

    <message name="updateRequest">
        <part element="tns:update" name="parameters"/>
    </message>
    <message name="updateResponse">
        <part element="tns:updateResponse" name="parameters"/>
    </message>

    <message name="upsertRequest">
        <part element="tns:upsert" name="parameters"/>
    </message>
    <message name="upsertResponse">
        <part element="tns:upsertResponse" name="parameters"/>
    </message>

    <message name="mergeRequest">
        <part element="tns:merge" name="parameters"/>
    </message>
    <message name="mergeResponse">
        <part element="tns:mergeResponse" name="parameters"/>
    </message>

    <message name="deleteRequest">
        <part element="tns:delete" name="parameters"/>
    </message>
    <message name="deleteResponse">
        <part element="tns:deleteResponse" name="parameters"/>
    </message>

    <message name="undeleteRequest">
        <part element="tns:undelete" name="parameters"/>
    </message>
    <message name="undeleteResponse">
        <part element="tns:undeleteResponse" name="parameters"/>
    </message>

    <message name="emptyRecycleBinRequest">
        <part element="tns:emptyRecycleBin" name="parameters"/>
    </message>
    <message name="emptyRecycleBinResponse">
        <part element="tns:emptyRecycleBinResponse" name="parameters"/>
    </message>

    <message name="retrieveRequest">
        <part element="tns:retrieve" name="parameters"/>
    </message>
    <message name="retrieveResponse">
        <part element="tns:retrieveResponse" name="parameters"/>
    </message>

    <message name="processRequest">
        <part element="tns:process" name="parameters"/>
    </message>
    <message name="processResponse">
        <part element="tns:processResponse" name="parameters"/>
    </message>

    <message name="convertLeadRequest">
        <part element="tns:convertLead" name="parameters"/>
    </message>
    <message name="convertLeadResponse">
        <part element="tns:convertLeadResponse" name="parameters"/>
    </message>

    <message name="logoutRequest">
        <part element="tns:logout" name="parameters"/>
    </message>
    <message name="logoutResponse">
        <part element="tns:logoutResponse" name="parameters"/>
    </message>

    <message name="invalidateSessionsRequest">
        <part element="tns:invalidateSessions" name="parameters"/>
    </message>
    <message name="invalidateSessionsResponse">
        <part element="tns:invalidateSessionsResponse" name="parameters"/>
    </message>

    <message name="getDeletedRequest">
        <part element="tns:getDeleted" name="parameters"/>
    </message>
    <message name="getDeletedResponse">
        <part element="tns:getDeletedResponse" name="parameters"/>
    </message>

    <message name="getUpdatedRequest">
        <part element="tns:getUpdated" name="parameters"/>
    </message>
    <message name="getUpdatedResponse">
        <part element="tns:getUpdatedResponse" name="parameters"/>
    </message>

    <message name="queryRequest">
        <part element="tns:query" name="parameters"/>
    </message>
    <message name="queryResponse">
        <part element="tns:queryResponse" name="parameters"/>
    </message>

    <message name="queryAllRequest">
        <part element="tns:queryAll" name="parameters"/>
    </message>
    <message name="queryAllResponse">
        <part element="tns:queryAllResponse" name="parameters"/>
    </message>

    <message name="queryMoreRequest">
        <part element="tns:queryMore" name="parameters"/>
    </message>
    <message name="queryMoreResponse">
        <part element="tns:queryMoreResponse" name="parameters"/>
    </message>

    <message name="searchRequest">
        <part element="tns:search" name="parameters"/>
    </message>
    <message name="searchResponse">
        <part element="tns:searchResponse" name="parameters"/>
    </message>

    <message name="getServerTimestampRequest">
        <part element="tns:getServerTimestamp" name="parameters"/>
    </message>
    <message name="getServerTimestampResponse">
        <part element="tns:getServerTimestampResponse" name="parameters"/>
    </message>

    <message name="setPasswordRequest">
        <part element="tns:setPassword" name="parameters"/>
    </message>
    <message name="setPasswordResponse">
        <part element="tns:setPasswordResponse" name="parameters"/>
    </message>

    <message name="changeOwnPasswordRequest">
        <part element="tns:changeOwnPassword" name="parameters"/>
    </message>
    <message name="changeOwnPasswordResponse">
        <part element="tns:changeOwnPasswordResponse" name="parameters"/>
    </message>

    <message name="resetPasswordRequest">
        <part element="tns:resetPassword" name="parameters"/>
    </message>
    <message name="resetPasswordResponse">
        <part element="tns:resetPasswordResponse" name="parameters"/>
    </message>

    <message name="getUserInfoRequest">
        <part element="tns:getUserInfo" name="parameters"/>
    </message>
    <message name="getUserInfoResponse">
        <part element="tns:getUserInfoResponse" name="parameters"/>
    </message>

    <message name="sendEmailMessageRequest">
        <part element="tns:sendEmailMessage" name="parameters"/>
    </message>
    <message name="sendEmailMessageResponse">
        <part element="tns:sendEmailMessageResponse" name="parameters"/>
    </message>

    <message name="sendEmailRequest">
        <part element="tns:sendEmail" name="parameters"/>
    </message>
    <message name="sendEmailResponse">
        <part element="tns:sendEmailResponse" name="parameters"/>
    </message>

    <message name="renderEmailTemplateRequest">
        <part element="tns:renderEmailTemplate" name="parameters"/>
    </message>
    <message name="renderEmailTemplateResponse">
        <part element="tns:renderEmailTemplateResponse" name="parameters"/>
    </message>

    <message name="renderStoredEmailTemplateRequest">
        <part element="tns:renderStoredEmailTemplate" name="parameters"/>
    </message>
    <message name="renderStoredEmailTemplateResponse">
        <part element="tns:renderStoredEmailTemplateResponse" name="parameters"/>
    </message>

    <message name="performQuickActionsRequest">
        <part element="tns:performQuickActions" name="parameters"/>
    </message>
    <message name="performQuickActionsResponse">
        <part element="tns:performQuickActionsResponse" name="parameters"/>
    </message>

    <message name="describeQuickActionsRequest">
        <part element="tns:describeQuickActions" name="parameters"/>
    </message>
    <message name="describeQuickActionsResponse">
        <part element="tns:describeQuickActionsResponse" name="parameters"/>
    </message>

    <message name="describeAvailableQuickActionsRequest">
        <part element="tns:describeAvailableQuickActions" name="parameters"/>
    </message>
    <message name="describeAvailableQuickActionsResponse">
        <part element="tns:describeAvailableQuickActionsResponse" name="parameters"/>
    </message>

    <message name="retrieveQuickActionTemplatesRequest">
        <part element="tns:retrieveQuickActionTemplates" name="parameters"/>
    </message>
    <message name="retrieveQuickActionTemplatesResponse">
        <part element="tns:retrieveQuickActionTemplatesResponse" name="parameters"/>
    </message>

    <message name="describeVisualForceRequest">
        <part element="tns:describeVisualForce" name="parameters"/>
    </message>
    <message name="describeVisualForceResponse">
        <part element="tns:describeVisualForceResponse" name="parameters"/>
    </message>

    <message name="findDuplicatesRequest">
        <part element="tns:findDuplicates" name="parameters"/>
    </message>
    <message name="findDuplicatesResponse">
        <part element="tns:findDuplicatesResponse" name="parameters"/>
    </message>

    <message name="findDuplicatesByIdsRequest">
        <part element="tns:findDuplicatesByIds" name="parameters"/>
    </message>
    <message name="findDuplicatesByIdsResponse">
        <part element="tns:findDuplicatesByIdsResponse" name="parameters"/>
    </message>

    <message name="describeNounsRequest">
        <part element="tns:describeNouns" name="parameters"/>
    </message>
    <message name="describeNounsResponse">
        <part element="tns:describeNounsResponse" name="parameters"/>
    </message>



    <!-- Soap PortType -->
    <portType name="Soap">
        <operation name="login">
            <documentation>Login to the Salesforce.com SOAP Api</documentation>
            <input  message="tns:loginRequest"/>
            <output message="tns:loginResponse"/>
            <fault  message="tns:LoginFault" name="LoginFault"/>
            <fault  message="tns:UnexpectedErrorFault" name="UnexpectedErrorFault"/>
            <fault  message="tns:InvalidIdFault" name="InvalidIdFault"/>
        </operation>

        <operation name="describeSObject">
            <documentation>Describe an sObject</documentation>
            <input  message="tns:describeSObjectRequest"/>
            <output message="tns:describeSObjectResponse"/>
            <fault  message="tns:InvalidSObjectFault" name="InvalidSObjectFault"/>
            <fault  message="tns:UnexpectedErrorFault" name="UnexpectedErrorFault"/>
        </operation>

        <operation name="describeSObjects">
            <documentation>Describe multiple sObjects (upto 100)</documentation>
            <input  message="tns:describeSObjectsRequest"/>
            <output message="tns:describeSObjectsResponse"/>
            <fault  message="tns:InvalidSObjectFault" name="InvalidSObjectFault"/>
            <fault  message="tns:UnexpectedErrorFault" name="UnexpectedErrorFault"/>
        </operation>

        <operation name="describeGlobal">
            <documentation>Describe the Global state</documentation>
            <input  message="tns:describeGlobalRequest"/>
            <output message="tns:describeGlobalResponse"/>
            <fault  message="tns:UnexpectedErrorFault" name="UnexpectedErrorFault"/>
        </operation>

        <operation name="describeDataCategoryGroups">
            <documentation>Describe all the data category groups available for a given set of types</documentation>
            <input  message="tns:describeDataCategoryGroupsRequest"/>
            <output message="tns:describeDataCategoryGroupsResponse"/>
            <fault  message="tns:InvalidSObjectFault" name="InvalidSObjectFault"/>
            <fault  message="tns:UnexpectedErrorFault" name="UnexpectedErrorFault"/>
        </operation>

        <operation name="describeDataCategoryGroupStructures">
            <documentation>Describe the data category group structures for a given set of pair of types and data category group name</documentation>
            <input  message="tns:describeDataCategoryGroupStructuresRequest"/>
            <output message="tns:describeDataCategoryGroupStructuresResponse"/>
            <fault  message="tns:InvalidSObjectFault" name="InvalidSObjectFault"/>
            <fault  message="tns:UnexpectedErrorFault" name="UnexpectedErrorFault"/>
        </operation>

        <operation name="describeKnowledgeSettings">
            <documentation>Describes your Knowledge settings, such as if knowledgeEnabled is on or off, its default language and supported languages</documentation>
            <input  message="tns:describeKnowledgeSettingsRequest"/>
            <output message="tns:describeKnowledgeSettingsResponse"/>
            <fault  message="tns:UnexpectedErrorFault" name="UnexpectedErrorFault"/>
        </operation>

        <operation name="describeAppMenu">
            <documentation>Describe the items in an AppMenu</documentation>
            <input  message="tns:describeAppMenuRequest"/>
            <output message="tns:describeAppMenuResponse"/>
            <fault  message="tns:UnexpectedErrorFault" name="UnexpectedErrorFault"/>
        </operation>

        <operation name="describeGlobalTheme">
            <documentation>Describe Gloal and Themes</documentation>
            <input  message="tns:describeGlobalThemeRequest"/>
            <output message="tns:describeGlobalThemeResponse"/>
            <fault  message="tns:UnexpectedErrorFault" name="UnexpectedErrorFault"/>
        </operation>

        <operation name="describeTheme">
            <documentation>Describe Themes</documentation>
            <input  message="tns:describeThemeRequest"/>
            <output message="tns:describeThemeResponse"/>
            <fault  message="tns:UnexpectedErrorFault" name="UnexpectedErrorFault"/>
        </operation>

        <operation name="describeLayout">
            <documentation>Describe the layout of the given sObject or the given actionable global page.</documentation>
            <input  message="tns:describeLayoutRequest"/>
            <output message="tns:describeLayoutResponse"/>
            <fault  message="tns:InvalidSObjectFault" name="InvalidSObjectFault"/>
            <fault  message="tns:UnexpectedErrorFault" name="UnexpectedErrorFault"/>
            <fault  message="tns:InvalidIdFault" name="InvalidIdFault"/>
        </operation>

        <operation name="describeSoftphoneLayout">
            <documentation>Describe the layout of the SoftPhone</documentation>
            <input  message="tns:describeSoftphoneLayoutRequest"/>
            <output message="tns:describeSoftphoneLayoutResponse"/>
            <fault  message="tns:UnexpectedErrorFault" name="UnexpectedErrorFault"/>
        </operation>

        <operation name="describeSearchLayouts">
            <documentation>Describe the search view of an sObject</documentation>
            <input  message="tns:describeSearchLayoutsRequest"/>
            <output message="tns:describeSearchLayoutsResponse"/>
            <fault  message="tns:InvalidSObjectFault" name="InvalidSObjectFault"/>
            <fault  message="tns:UnexpectedErrorFault" name="UnexpectedErrorFault"/>
        </operation>

        <operation name="describeSearchableEntities">
            <documentation>Describe a list of entity names that reflects the current user's searchable entities</documentation>
            <input  message="tns:describeSearchableEntitiesRequest"/>
            <output message="tns:describeSearchableEntitiesResponse"/>
        </operation>

        <operation name="describeSearchScopeOrder">
            <documentation>Describe a list of objects representing the order and scope of objects on a users search result page</documentation>
            <input  message="tns:describeSearchScopeOrderRequest"/>
            <output message="tns:describeSearchScopeOrderResponse"/>
        </operation>

        <operation name="describeCompactLayouts">
            <documentation>Describe the compact layouts of the given sObject</documentation>
            <input  message="tns:describeCompactLayoutsRequest"/>
            <output message="tns:describeCompactLayoutsResponse"/>
        </operation>

        <operation name="describePathAssistants">
            <documentation>Describe the Path Assistants for the given sObject and optionally RecordTypes</documentation>
            <input  message="tns:describePathAssistantsRequest"/>
            <output message="tns:describePathAssistantsResponse"/>
        </operation>

        <operation name="describeApprovalLayout">
            <documentation>Describe the approval layouts of the given sObject</documentation>
            <input  message="tns:describeApprovalLayoutRequest"/>
            <output message="tns:describeApprovalLayoutResponse"/>
        </operation>

        <operation name="describeSoqlListViews">
            <documentation>Describe the ListViews as SOQL metadata for the generation of SOQL.</documentation>
            <input  message="tns:describeSoqlListViewsRequest"/>
            <output message="tns:describeSoqlListViewsResponse"/>
            <fault  message="tns:InvalidSObjectFault" name="InvalidSObjectFault"/>
            <fault  message="tns:UnexpectedErrorFault" name="UnexpectedErrorFault"/>
        </operation>

        <operation name="executeListView">
            <documentation>Execute the specified list view and return the presentation-ready results.</documentation>
            <input  message="tns:executeListViewRequest"/>
            <output message="tns:executeListViewResponse"/>
        </operation>

        <operation name="describeSObjectListViews">
            <documentation>Describe the ListViews of a SObject as SOQL metadata for the generation of SOQL.</documentation>
            <input  message="tns:describeSObjectListViewsRequest"/>
            <output message="tns:describeSObjectListViewsResponse"/>
            <fault  message="tns:InvalidSObjectFault" name="InvalidSObjectFault"/>
            <fault  message="tns:UnexpectedErrorFault" name="UnexpectedErrorFault"/>
        </operation>

        <operation name="describeTabs">
            <documentation>Describe the tabs that appear on a users page</documentation>
            <input  message="tns:describeTabsRequest"/>
            <output message="tns:describeTabsResponse"/>
            <fault  message="tns:UnexpectedErrorFault" name="UnexpectedErrorFault"/>
        </operation>

        <operation name="describeAllTabs">
            <documentation>Describe all tabs available to a user</documentation>
            <input  message="tns:describeAllTabsRequest"/>
            <output message="tns:describeAllTabsResponse"/>
            <fault  message="tns:UnexpectedErrorFault" name="UnexpectedErrorFault"/>
        </operation>

        <operation name="describePrimaryCompactLayouts">
            <documentation>Describe the primary compact layouts for the sObjects requested</documentation>
            <input  message="tns:describePrimaryCompactLayoutsRequest"/>
            <output message="tns:describePrimaryCompactLayoutsResponse"/>
        </operation>

        <operation name="create">
            <documentation>Create a set of new sObjects</documentation>
            <input  message="tns:createRequest"/>
            <output message="tns:createResponse"/>
            <fault  message="tns:InvalidSObjectFault" name="InvalidSObjectFault"/>
            <fault  message="tns:UnexpectedErrorFault" name="UnexpectedErrorFault"/>
            <fault  message="tns:InvalidIdFault" name="InvalidIdFault"/>
            <fault  message="tns:InvalidFieldFault" name="InvalidFieldFault"/>
        </operation>

        <operation name="update">
            <documentation>Update a set of sObjects</documentation>
            <input  message="tns:updateRequest"/>
            <output message="tns:updateResponse"/>
            <fault  message="tns:InvalidSObjectFault" name="InvalidSObjectFault"/>
            <fault  message="tns:UnexpectedErrorFault" name="UnexpectedErrorFault"/>
            <fault  message="tns:InvalidIdFault" name="InvalidIdFault"/>
            <fault  message="tns:InvalidFieldFault" name="InvalidFieldFault"/>
        </operation>

        <operation name="upsert">
            <documentation>Update or insert a set of sObjects based on object id</documentation>
            <input  message="tns:upsertRequest"/>
            <output message="tns:upsertResponse"/>
            <fault  message="tns:InvalidSObjectFault" name="InvalidSObjectFault"/>
            <fault  message="tns:UnexpectedErrorFault" name="UnexpectedErrorFault"/>
            <fault  message="tns:InvalidIdFault" name="InvalidIdFault"/>
            <fault  message="tns:InvalidFieldFault" name="InvalidFieldFault"/>
        </operation>

        <operation name="merge">
            <documentation>Merge and update a set of sObjects based on object id</documentation>
            <input  message="tns:mergeRequest"/>
            <output message="tns:mergeResponse"/>
            <fault  message="tns:InvalidSObjectFault" name="InvalidSObjectFault"/>
            <fault  message="tns:UnexpectedErrorFault" name="UnexpectedErrorFault"/>
            <fault  message="tns:InvalidIdFault" name="InvalidIdFault"/>
            <fault  message="tns:InvalidFieldFault" name="InvalidFieldFault"/>
        </operation>

        <operation name="delete">
            <documentation>Delete a set of sObjects</documentation>
            <input  message="tns:deleteRequest"/>
            <output message="tns:deleteResponse"/>
            <fault  message="tns:UnexpectedErrorFault" name="UnexpectedErrorFault"/>
        </operation>

        <operation name="undelete">
            <documentation>Undelete a set of sObjects</documentation>
            <input  message="tns:undeleteRequest"/>
            <output message="tns:undeleteResponse"/>
            <fault  message="tns:UnexpectedErrorFault" name="UnexpectedErrorFault"/>
        </operation>

        <operation name="emptyRecycleBin">
            <documentation>Empty a set of sObjects from the recycle bin</documentation>
            <input  message="tns:emptyRecycleBinRequest"/>
            <output message="tns:emptyRecycleBinResponse"/>
            <fault  message="tns:UnexpectedErrorFault" name="UnexpectedErrorFault"/>
        </operation>

        <operation name="retrieve">
            <documentation>Get a set of sObjects</documentation>
            <input  message="tns:retrieveRequest"/>
            <output message="tns:retrieveResponse"/>
            <fault  message="tns:InvalidSObjectFault" name="InvalidSObjectFault"/>
            <fault  message="tns:InvalidFieldFault" name="InvalidFieldFault"/>
            <fault  message="tns:MalformedQueryFault" name="MalformedQueryFault"/>
            <fault  message="tns:UnexpectedErrorFault" name="UnexpectedErrorFault"/>
            <fault  message="tns:InvalidIdFault" name="InvalidIdFault"/>
        </operation>

        <operation name="process">
            <documentation>Submit an entity to a workflow process or process a workitem</documentation>
            <input  message="tns:processRequest"/>
            <output message="tns:processResponse"/>
            <fault  message="tns:UnexpectedErrorFault" name="UnexpectedErrorFault"/>
            <fault  message="tns:InvalidIdFault" name="InvalidIdFault"/>
        </operation>

        <operation name="convertLead">
            <documentation>convert a set of leads</documentation>
            <input  message="tns:convertLeadRequest"/>
            <output message="tns:convertLeadResponse"/>
            <fault  message="tns:UnexpectedErrorFault" name="UnexpectedErrorFault"/>
        </operation>

        <operation name="logout">
            <documentation>Logout the current user, invalidating the current session.</documentation>
            <input  message="tns:logoutRequest"/>
            <output message="tns:logoutResponse"/>
            <fault  message="tns:UnexpectedErrorFault" name="UnexpectedErrorFault"/>
        </operation>

        <operation name="invalidateSessions">
            <documentation>Logs out and invalidates session ids</documentation>
            <input  message="tns:invalidateSessionsRequest"/>
            <output message="tns:invalidateSessionsResponse"/>
            <fault  message="tns:UnexpectedErrorFault" name="UnexpectedErrorFault"/>
        </operation>

        <operation name="getDeleted">
            <documentation>Get the IDs for deleted sObjects</documentation>
            <input  message="tns:getDeletedRequest"/>
            <output message="tns:getDeletedResponse"/>
            <fault  message="tns:InvalidSObjectFault" name="InvalidSObjectFault"/>
            <fault  message="tns:UnexpectedErrorFault" name="UnexpectedErrorFault"/>
        </operation>

        <operation name="getUpdated">
            <documentation>Get the IDs for updated sObjects</documentation>
            <input  message="tns:getUpdatedRequest"/>
            <output message="tns:getUpdatedResponse"/>
            <fault  message="tns:InvalidSObjectFault" name="InvalidSObjectFault"/>
            <fault  message="tns:UnexpectedErrorFault" name="UnexpectedErrorFault"/>
        </operation>

        <operation name="query">
            <documentation>Create a Query Cursor</documentation>
            <input  message="tns:queryRequest"/>
            <output message="tns:queryResponse"/>
            <fault  message="tns:InvalidSObjectFault" name="InvalidSObjectFault"/>
            <fault  message="tns:InvalidFieldFault" name="InvalidFieldFault"/>
            <fault  message="tns:MalformedQueryFault" name="MalformedQueryFault"/>
            <fault  message="tns:InvalidIdFault" name="InvalidIdFault"/>
            <fault  message="tns:UnexpectedErrorFault" name="UnexpectedErrorFault"/>
            <fault  message="tns:InvalidQueryLocatorFault" name="InvalidQueryLocatorFault"/>
        </operation>

        <operation name="queryAll">
            <documentation>Create a Query Cursor, including deleted sObjects</documentation>
            <input  message="tns:queryAllRequest"/>
            <output message="tns:queryAllResponse"/>
            <fault  message="tns:InvalidSObjectFault" name="InvalidSObjectFault"/>
            <fault  message="tns:InvalidFieldFault" name="InvalidFieldFault"/>
            <fault  message="tns:MalformedQueryFault" name="MalformedQueryFault"/>
            <fault  message="tns:InvalidIdFault" name="InvalidIdFault"/>
            <fault  message="tns:UnexpectedErrorFault" name="UnexpectedErrorFault"/>
            <fault  message="tns:InvalidQueryLocatorFault" name="InvalidQueryLocatorFault"/>
        </operation>

        <operation name="queryMore">
            <documentation>Gets the next batch of sObjects from a query</documentation>
            <input  message="tns:queryMoreRequest"/>
            <output message="tns:queryMoreResponse"/>
            <fault  message="tns:InvalidQueryLocatorFault" name="InvalidQueryLocatorFault"/>
            <fault  message="tns:UnexpectedErrorFault" name="UnexpectedErrorFault"/>
            <fault  message="tns:InvalidFieldFault" name="InvalidFieldFault"/>
            <fault  message="tns:MalformedQueryFault" name="MalformedQueryFault"/>
        </operation>

        <operation name="search">
            <documentation>Search for sObjects</documentation>
            <input  message="tns:searchRequest"/>
            <output message="tns:searchResponse"/>
            <fault  message="tns:InvalidSObjectFault" name="InvalidSObjectFault"/>
            <fault  message="tns:InvalidFieldFault" name="InvalidFieldFault"/>
            <fault  message="tns:MalformedSearchFault" name="MalformedSearchFault"/>
            <fault  message="tns:UnexpectedErrorFault" name="UnexpectedErrorFault"/>
        </operation>

        <operation name="getServerTimestamp">
            <documentation>Gets server timestamp</documentation>
            <input  message="tns:getServerTimestampRequest"/>
            <output message="tns:getServerTimestampResponse"/>
            <fault  message="tns:UnexpectedErrorFault" name="UnexpectedErrorFault"/>
        </operation>

        <operation name="setPassword">
            <documentation>Set a user's password</documentation>
            <input  message="tns:setPasswordRequest"/>
            <output message="tns:setPasswordResponse"/>
            <fault  message="tns:InvalidIdFault" name="InvalidIdFault"/>
            <fault  message="tns:InvalidNewPasswordFault" name="InvalidNewPasswordFault"/>
            <fault  message="tns:UnexpectedErrorFault" name="UnexpectedErrorFault"/>
        </operation>

        <operation name="changeOwnPassword">
            <documentation>Change the current user's password</documentation>
            <input  message="tns:changeOwnPasswordRequest"/>
            <output message="tns:changeOwnPasswordResponse"/>
            <fault  message="tns:InvalidNewPasswordFault" name="InvalidNewPasswordFault"/>
            <fault  message="tns:InvalidOldPasswordFault" name="InvalidOldPasswordFault"/>
            <fault  message="tns:UnexpectedErrorFault" name="UnexpectedErrorFault"/>
        </operation>

        <operation name="resetPassword">
            <documentation>Reset a user's password</documentation>
            <input  message="tns:resetPasswordRequest"/>
            <output message="tns:resetPasswordResponse"/>
            <fault  message="tns:InvalidIdFault" name="InvalidIdFault"/>
            <fault  message="tns:UnexpectedErrorFault" name="UnexpectedErrorFault"/>
        </operation>

        <operation name="getUserInfo">
            <documentation>Returns standard information relevant to the current user</documentation>
            <input  message="tns:getUserInfoRequest"/>
            <output message="tns:getUserInfoResponse"/>
            <fault  message="tns:UnexpectedErrorFault" name="UnexpectedErrorFault"/>
        </operation>

        <operation name="sendEmailMessage">
            <documentation>Send existing draft EmailMessage</documentation>
            <input  message="tns:sendEmailMessageRequest"/>
            <output message="tns:sendEmailMessageResponse"/>
            <fault  message="tns:UnexpectedErrorFault" name="UnexpectedErrorFault"/>
        </operation>

        <operation name="sendEmail">
            <documentation>Send outbound email</documentation>
            <input  message="tns:sendEmailRequest"/>
            <output message="tns:sendEmailResponse"/>
            <fault  message="tns:UnexpectedErrorFault" name="UnexpectedErrorFault"/>
        </operation>

        <operation name="renderEmailTemplate">
            <documentation>Perform a template merge on one or more blocks of text.</documentation>
            <input  message="tns:renderEmailTemplateRequest"/>
            <output message="tns:renderEmailTemplateResponse"/>
            <fault  message="tns:UnexpectedErrorFault" name="UnexpectedErrorFault"/>
        </operation>

        <operation name="renderStoredEmailTemplate">
            <documentation>Perform a template merge using an email template stored in the database.</documentation>
            <input  message="tns:renderStoredEmailTemplateRequest"/>
            <output message="tns:renderStoredEmailTemplateResponse"/>
            <fault  message="tns:UnexpectedErrorFault" name="UnexpectedErrorFault"/>
        </operation>

        <operation name="performQuickActions">
            <documentation>Perform a series of predefined actions such as quick create or log a task</documentation>
            <input  message="tns:performQuickActionsRequest"/>
            <output message="tns:performQuickActionsResponse"/>
        </operation>

        <operation name="describeQuickActions">
            <documentation>Describe the details of a series of quick actions</documentation>
            <input  message="tns:describeQuickActionsRequest"/>
            <output message="tns:describeQuickActionsResponse"/>
        </operation>

        <operation name="describeAvailableQuickActions">
            <documentation>Describe the details of a series of quick actions available for the given contextType</documentation>
            <input  message="tns:describeAvailableQuickActionsRequest"/>
            <output message="tns:describeAvailableQuickActionsResponse"/>
        </operation>

        <operation name="retrieveQuickActionTemplates">
            <documentation>Retreive the template sobjects, if appropriate, for the given quick action names in a given context</documentation>
            <input  message="tns:retrieveQuickActionTemplatesRequest"/>
            <output message="tns:retrieveQuickActionTemplatesResponse"/>
        </operation>

        <operation name="describeVisualForce">
            <documentation>Describe visualforce for an org</documentation>
            <input  message="tns:describeVisualForceRequest"/>
            <output message="tns:describeVisualForceResponse"/>
        </operation>

        <operation name="findDuplicates">
            <documentation>Find duplicates for a set of sObjects</documentation>
            <input  message="tns:findDuplicatesRequest"/>
            <output message="tns:findDuplicatesResponse"/>
            <fault  message="tns:InvalidSObjectFault" name="InvalidSObjectFault"/>
            <fault  message="tns:UnexpectedErrorFault" name="UnexpectedErrorFault"/>
            <fault  message="tns:InvalidFieldFault" name="InvalidFieldFault"/>
        </operation>

        <operation name="findDuplicatesByIds">
            <documentation>Find duplicates for a set of ids</documentation>
            <input  message="tns:findDuplicatesByIdsRequest"/>
            <output message="tns:findDuplicatesByIdsResponse"/>
            <fault  message="tns:InvalidIdFault" name="InvalidIdFault"/>
            <fault  message="tns:UnexpectedErrorFault" name="UnexpectedErrorFault"/>
        </operation>

        <operation name="describeNouns">
            <documentation>Return the renameable nouns from the server for use in presentation using the salesforce grammar engine</documentation>
            <input  message="tns:describeNounsRequest"/>
            <output message="tns:describeNounsResponse"/>
        </operation>

    </portType>

    <!-- Soap Binding -->
    <binding name="SoapBinding" type="tns:Soap">
        <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
        <operation name="login">
            <soap:operation soapAction=""/>
            <input>
                <soap:header use="literal" message="tns:Header" part="LoginScopeHeader"/>
                <soap:body parts="parameters" use="literal"/>
            </input>
            <output>
                <soap:body use="literal"/>
            </output>
            <fault name="LoginFault">
                <soap:fault name="LoginFault" use="literal"/>
            </fault>
            <fault name="UnexpectedErrorFault">
                <soap:fault name="UnexpectedErrorFault" use="literal"/>
            </fault>
            <fault name="InvalidIdFault">
                <soap:fault name="InvalidIdFault" use="literal"/>
            </fault>
        </operation>
        <operation name="describeSObject">
            <soap:operation soapAction=""/>
            <input>
                <soap:header use="literal" message="tns:Header" part="SessionHeader"/>
                <soap:header use="literal" message="tns:Header" part="PackageVersionHeader"/>
                <soap:header use="literal" message="tns:Header" part="LocaleOptions"/>
                <soap:body parts="parameters" use="literal"/>
            </input>
            <output>
                <soap:header use="literal" message="tns:Header" part="LimitInfoHeader"/>
                <soap:body use="literal"/>
            </output>
            <fault name="InvalidSObjectFault">
                <soap:fault name="InvalidSObjectFault" use="literal"/>
            </fault>
            <fault name="UnexpectedErrorFault">
                <soap:fault name="UnexpectedErrorFault" use="literal"/>
            </fault>
        </operation>
        <operation name="describeSObjects">
            <soap:operation soapAction=""/>
            <input>
                <soap:header use="literal" message="tns:Header" part="SessionHeader"/>
                <soap:header use="literal" message="tns:Header" part="PackageVersionHeader"/>
                <soap:header use="literal" message="tns:Header" part="LocaleOptions"/>
                <soap:body parts="parameters" use="literal"/>
            </input>
            <output>
                <soap:header use="literal" message="tns:Header" part="LimitInfoHeader"/>
                <soap:body use="literal"/>
            </output>
            <fault name="InvalidSObjectFault">
                <soap:fault name="InvalidSObjectFault" use="literal"/>
            </fault>
            <fault name="UnexpectedErrorFault">
                <soap:fault name="UnexpectedErrorFault" use="literal"/>
            </fault>
        </operation>
        <operation name="describeGlobal">
            <soap:operation soapAction=""/>
            <input>
                <soap:header use="literal" message="tns:Header" part="SessionHeader"/>
                <soap:header use="literal" message="tns:Header" part="PackageVersionHeader"/>
                <soap:body parts="parameters" use="literal"/>
            </input>
            <output>
                <soap:header use="literal" message="tns:Header" part="LimitInfoHeader"/>
                <soap:body use="literal"/>
            </output>
            <fault name="UnexpectedErrorFault">
                <soap:fault name="UnexpectedErrorFault" use="literal"/>
            </fault>
        </operation>
        <operation name="describeDataCategoryGroups">
            <soap:operation soapAction=""/>
            <input>
                <soap:header use="literal" message="tns:Header" part="SessionHeader"/>
                <soap:header use="literal" message="tns:Header" part="PackageVersionHeader"/>
                <soap:header use="literal" message="tns:Header" part="LocaleOptions"/>
                <soap:body parts="parameters" use="literal"/>
            </input>
            <output>
                <soap:header use="literal" message="tns:Header" part="LimitInfoHeader"/>
                <soap:body use="literal"/>
            </output>
            <fault name="InvalidSObjectFault">
                <soap:fault name="InvalidSObjectFault" use="literal"/>
            </fault>
            <fault name="UnexpectedErrorFault">
                <soap:fault name="UnexpectedErrorFault" use="literal"/>
            </fault>
        </operation>
        <operation name="describeDataCategoryGroupStructures">
            <soap:operation soapAction=""/>
            <input>
                <soap:header use="literal" message="tns:Header" part="SessionHeader"/>
                <soap:header use="literal" message="tns:Header" part="PackageVersionHeader"/>
                <soap:header use="literal" message="tns:Header" part="LocaleOptions"/>
                <soap:body parts="parameters" use="literal"/>
            </input>
            <output>
                <soap:header use="literal" message="tns:Header" part="LimitInfoHeader"/>
                <soap:body use="literal"/>
            </output>
            <fault name="InvalidSObjectFault">
                <soap:fault name="InvalidSObjectFault" use="literal"/>
            </fault>
            <fault name="UnexpectedErrorFault">
                <soap:fault name="UnexpectedErrorFault" use="literal"/>
            </fault>
        </operation>
        <operation name="describeKnowledgeSettings">
            <soap:operation soapAction=""/>
            <input>
                <soap:header use="literal" message="tns:Header" part="SessionHeader"/>
                <soap:header use="literal" message="tns:Header" part="PackageVersionHeader"/>
                <soap:header use="literal" message="tns:Header" part="LocaleOptions"/>
                <soap:body parts="parameters" use="literal"/>
            </input>
            <output>
                <soap:header use="literal" message="tns:Header" part="LimitInfoHeader"/>
                <soap:body use="literal"/>
            </output>
            <fault name="UnexpectedErrorFault">
                <soap:fault name="UnexpectedErrorFault" use="literal"/>
            </fault>
        </operation>
        <operation name="describeAppMenu">
            <soap:operation soapAction=""/>
            <input>
                <soap:header use="literal" message="tns:Header" part="SessionHeader"/>
                <soap:header use="literal" message="tns:Header" part="PackageVersionHeader"/>
                <soap:body parts="parameters" use="literal"/>
            </input>
            <output>
                <soap:header use="literal" message="tns:Header" part="LimitInfoHeader"/>
                <soap:body use="literal"/>
            </output>
            <fault name="UnexpectedErrorFault">
                <soap:fault name="UnexpectedErrorFault" use="literal"/>
            </fault>
        </operation>
        <operation name="describeGlobalTheme">
            <soap:operation soapAction=""/>
            <input>
                <soap:header use="literal" message="tns:Header" part="SessionHeader"/>
                <soap:header use="literal" message="tns:Header" part="PackageVersionHeader"/>
                <soap:body parts="parameters" use="literal"/>
            </input>
            <output>
                <soap:header use="literal" message="tns:Header" part="LimitInfoHeader"/>
                <soap:body use="literal"/>
            </output>
            <fault name="UnexpectedErrorFault">
                <soap:fault name="UnexpectedErrorFault" use="literal"/>
            </fault>
        </operation>
        <operation name="describeTheme">
            <soap:operation soapAction=""/>
            <input>
                <soap:header use="literal" message="tns:Header" part="SessionHeader"/>
                <soap:header use="literal" message="tns:Header" part="PackageVersionHeader"/>
                <soap:body parts="parameters" use="literal"/>
            </input>
            <output>
                <soap:header use="literal" message="tns:Header" part="LimitInfoHeader"/>
                <soap:body use="literal"/>
            </output>
            <fault name="UnexpectedErrorFault">
                <soap:fault name="UnexpectedErrorFault" use="literal"/>
            </fault>
        </operation>
        <operation name="describeLayout">
            <soap:operation soapAction=""/>
            <input>
                <soap:header use="literal" message="tns:Header" part="SessionHeader"/>
                <soap:header use="literal" message="tns:Header" part="PackageVersionHeader"/>
                <soap:body parts="parameters" use="literal"/>
            </input>
            <output>
                <soap:header use="literal" message="tns:Header" part="LimitInfoHeader"/>
                <soap:body use="literal"/>
            </output>
            <fault name="InvalidSObjectFault">
                <soap:fault name="InvalidSObjectFault" use="literal"/>
            </fault>
            <fault name="UnexpectedErrorFault">
                <soap:fault name="UnexpectedErrorFault" use="literal"/>
            </fault>
            <fault name="InvalidIdFault">
                <soap:fault name="InvalidIdFault" use="literal"/>
            </fault>
        </operation>
        <operation name="describeSoftphoneLayout">
            <soap:operation soapAction=""/>
            <input>
                <soap:header use="literal" message="tns:Header" part="SessionHeader"/>
                <soap:header use="literal" message="tns:Header" part="PackageVersionHeader"/>
                <soap:body parts="parameters" use="literal"/>
            </input>
            <output>
                <soap:header use="literal" message="tns:Header" part="LimitInfoHeader"/>
                <soap:body use="literal"/>
            </output>
            <fault name="UnexpectedErrorFault">
                <soap:fault name="UnexpectedErrorFault" use="literal"/>
            </fault>
        </operation>
        <operation name="describeSearchLayouts">
            <soap:operation soapAction=""/>
            <input>
                <soap:header use="literal" message="tns:Header" part="SessionHeader"/>
                <soap:header use="literal" message="tns:Header" part="PackageVersionHeader"/>
                <soap:body parts="parameters" use="literal"/>
            </input>
            <output>
                <soap:header use="literal" message="tns:Header" part="LimitInfoHeader"/>
                <soap:body use="literal"/>
            </output>
            <fault name="InvalidSObjectFault">
                <soap:fault name="InvalidSObjectFault" use="literal"/>
            </fault>
            <fault name="UnexpectedErrorFault">
                <soap:fault name="UnexpectedErrorFault" use="literal"/>
            </fault>
        </operation>
        <operation name="describeSearchableEntities">
            <soap:operation soapAction=""/>
            <input>
                <soap:header use="literal" message="tns:Header" part="SessionHeader"/>
                <soap:header use="literal" message="tns:Header" part="PackageVersionHeader"/>
                <soap:body parts="parameters" use="literal"/>
            </input>
            <output>
                <soap:header use="literal" message="tns:Header" part="LimitInfoHeader"/>
                <soap:body use="literal"/>
            </output>
        </operation>
        <operation name="describeSearchScopeOrder">
            <soap:operation soapAction=""/>
            <input>
                <soap:header use="literal" message="tns:Header" part="SessionHeader"/>
                <soap:header use="literal" message="tns:Header" part="PackageVersionHeader"/>
                <soap:body parts="parameters" use="literal"/>
            </input>
            <output>
                <soap:header use="literal" message="tns:Header" part="LimitInfoHeader"/>
                <soap:body use="literal"/>
            </output>
        </operation>
        <operation name="describeCompactLayouts">
            <soap:operation soapAction=""/>
            <input>
                <soap:header use="literal" message="tns:Header" part="SessionHeader"/>
                <soap:header use="literal" message="tns:Header" part="PackageVersionHeader"/>
                <soap:body parts="parameters" use="literal"/>
            </input>
            <output>
                <soap:header use="literal" message="tns:Header" part="LimitInfoHeader"/>
                <soap:body use="literal"/>
            </output>
        </operation>
        <operation name="describePathAssistants">
            <soap:operation soapAction=""/>
            <input>
                <soap:header use="literal" message="tns:Header" part="SessionHeader"/>
                <soap:header use="literal" message="tns:Header" part="PackageVersionHeader"/>
                <soap:body parts="parameters" use="literal"/>
            </input>
            <output>
                <soap:header use="literal" message="tns:Header" part="LimitInfoHeader"/>
                <soap:body use="literal"/>
            </output>
        </operation>
        <operation name="describeApprovalLayout">
            <soap:operation soapAction=""/>
            <input>
                <soap:header use="literal" message="tns:Header" part="SessionHeader"/>
                <soap:header use="literal" message="tns:Header" part="PackageVersionHeader"/>
                <soap:body parts="parameters" use="literal"/>
            </input>
            <output>
                <soap:header use="literal" message="tns:Header" part="LimitInfoHeader"/>
                <soap:body use="literal"/>
            </output>
        </operation>
        <operation name="describeSoqlListViews">
            <soap:operation soapAction=""/>
            <input>
                <soap:header use="literal" message="tns:Header" part="SessionHeader"/>
                <soap:header use="literal" message="tns:Header" part="PackageVersionHeader"/>
                <soap:body parts="parameters" use="literal"/>
            </input>
            <output>
                <soap:header use="literal" message="tns:Header" part="LimitInfoHeader"/>
                <soap:body use="literal"/>
            </output>
            <fault name="InvalidSObjectFault">
                <soap:fault name="InvalidSObjectFault" use="literal"/>
            </fault>
            <fault name="UnexpectedErrorFault">
                <soap:fault name="UnexpectedErrorFault" use="literal"/>
            </fault>
        </operation>
        <operation name="executeListView">
            <soap:operation soapAction=""/>
            <input>
                <soap:header use="literal" message="tns:Header" part="SessionHeader"/>
                <soap:header use="literal" message="tns:Header" part="MruHeader"/>
                <soap:body parts="parameters" use="literal"/>
            </input>
            <output>
                <soap:header use="literal" message="tns:Header" part="LimitInfoHeader"/>
                <soap:body use="literal"/>
            </output>
        </operation>
        <operation name="describeSObjectListViews">
            <soap:operation soapAction=""/>
            <input>
                <soap:header use="literal" message="tns:Header" part="SessionHeader"/>
                <soap:header use="literal" message="tns:Header" part="PackageVersionHeader"/>
                <soap:body parts="parameters" use="literal"/>
            </input>
            <output>
                <soap:header use="literal" message="tns:Header" part="LimitInfoHeader"/>
                <soap:body use="literal"/>
            </output>
            <fault name="InvalidSObjectFault">
                <soap:fault name="InvalidSObjectFault" use="literal"/>
            </fault>
            <fault name="UnexpectedErrorFault">
                <soap:fault name="UnexpectedErrorFault" use="literal"/>
            </fault>
        </operation>
        <operation name="describeTabs">
            <soap:operation soapAction=""/>
            <input>
                <soap:header use="literal" message="tns:Header" part="SessionHeader"/>
                <soap:header use="literal" message="tns:Header" part="PackageVersionHeader"/>
                <soap:body parts="parameters" use="literal"/>
            </input>
            <output>
                <soap:header use="literal" message="tns:Header" part="LimitInfoHeader"/>
                <soap:body use="literal"/>
            </output>
            <fault name="UnexpectedErrorFault">
                <soap:fault name="UnexpectedErrorFault" use="literal"/>
            </fault>
        </operation>
        <operation name="describeAllTabs">
            <soap:operation soapAction=""/>
            <input>
                <soap:header use="literal" message="tns:Header" part="SessionHeader"/>
                <soap:header use="literal" message="tns:Header" part="PackageVersionHeader"/>
                <soap:body parts="parameters" use="literal"/>
            </input>
            <output>
                <soap:header use="literal" message="tns:Header" part="LimitInfoHeader"/>
                <soap:body use="literal"/>
            </output>
            <fault name="UnexpectedErrorFault">
                <soap:fault name="UnexpectedErrorFault" use="literal"/>
            </fault>
        </operation>
        <operation name="describePrimaryCompactLayouts">
            <soap:operation soapAction=""/>
            <input>
                <soap:header use="literal" message="tns:Header" part="SessionHeader"/>
                <soap:header use="literal" message="tns:Header" part="PackageVersionHeader"/>
                <soap:body parts="parameters" use="literal"/>
            </input>
            <output>
                <soap:header use="literal" message="tns:Header" part="LimitInfoHeader"/>
                <soap:body use="literal"/>
            </output>
        </operation>
        <operation name="create">
            <soap:operation soapAction=""/>
            <input>
                <soap:header use="literal" message="tns:Header" part="SessionHeader"/>
                <soap:header use="literal" message="tns:Header" part="AssignmentRuleHeader"/>
                <soap:header use="literal" message="tns:Header" part="MruHeader"/>
                <soap:header use="literal" message="tns:Header" part="AllowFieldTruncationHeader"/>
                <soap:header use="literal" message="tns:Header" part="DisableFeedTrackingHeader"/>
                <soap:header use="literal" message="tns:Header" part="StreamingEnabledHeader"/>
                <soap:header use="literal" message="tns:Header" part="AllOrNoneHeader"/>
                <soap:header use="literal" message="tns:Header" part="DuplicateRuleHeader"/>
                <soap:header use="literal" message="tns:Header" part="LocaleOptions"/>
                <soap:header use="literal" message="tns:Header" part="DebuggingHeader"/>
                <soap:header use="literal" message="tns:Header" part="PackageVersionHeader"/>
                <soap:header use="literal" message="tns:Header" part="EmailHeader"/>
                <soap:body parts="parameters" use="literal"/>
            </input>
            <output>
                <soap:header use="literal" message="tns:Header" part="DebuggingInfo"/>
                <soap:header use="literal" message="tns:Header" part="LimitInfoHeader"/>
                <soap:body use="literal"/>
            </output>
            <fault name="InvalidSObjectFault">
                <soap:fault name="InvalidSObjectFault" use="literal"/>
            </fault>
            <fault name="UnexpectedErrorFault">
                <soap:fault name="UnexpectedErrorFault" use="literal"/>
            </fault>
            <fault name="InvalidIdFault">
                <soap:fault name="InvalidIdFault" use="literal"/>
            </fault>
            <fault name="InvalidFieldFault">
                <soap:fault name="InvalidFieldFault" use="literal"/>
            </fault>
        </operation>
        <operation name="update">
            <soap:operation soapAction=""/>
            <input>
                <soap:header use="literal" message="tns:Header" part="SessionHeader"/>
                <soap:header use="literal" message="tns:Header" part="AssignmentRuleHeader"/>
                <soap:header use="literal" message="tns:Header" part="MruHeader"/>
                <soap:header use="literal" message="tns:Header" part="AllowFieldTruncationHeader"/>
                <soap:header use="literal" message="tns:Header" part="DisableFeedTrackingHeader"/>
                <soap:header use="literal" message="tns:Header" part="StreamingEnabledHeader"/>
                <soap:header use="literal" message="tns:Header" part="AllOrNoneHeader"/>
                <soap:header use="literal" message="tns:Header" part="DuplicateRuleHeader"/>
                <soap:header use="literal" message="tns:Header" part="LocaleOptions"/>
                <soap:header use="literal" message="tns:Header" part="DebuggingHeader"/>
                <soap:header use="literal" message="tns:Header" part="PackageVersionHeader"/>
                <soap:header use="literal" message="tns:Header" part="EmailHeader"/>
                <soap:header use="literal" message="tns:Header" part="OwnerChangeOptions"/>
                <soap:body parts="parameters" use="literal"/>
            </input>
            <output>
                <soap:header use="literal" message="tns:Header" part="DebuggingInfo"/>
                <soap:header use="literal" message="tns:Header" part="LimitInfoHeader"/>
                <soap:body use="literal"/>
            </output>
            <fault name="InvalidSObjectFault">
                <soap:fault name="InvalidSObjectFault" use="literal"/>
            </fault>
            <fault name="UnexpectedErrorFault">
                <soap:fault name="UnexpectedErrorFault" use="literal"/>
            </fault>
            <fault name="InvalidIdFault">
                <soap:fault name="InvalidIdFault" use="literal"/>
            </fault>
            <fault name="InvalidFieldFault">
                <soap:fault name="InvalidFieldFault" use="literal"/>
            </fault>
        </operation>
        <operation name="upsert">
            <soap:operation soapAction=""/>
            <input>
                <soap:header use="literal" message="tns:Header" part="SessionHeader"/>
                <soap:header use="literal" message="tns:Header" part="AssignmentRuleHeader"/>
                <soap:header use="literal" message="tns:Header" part="MruHeader"/>
                <soap:header use="literal" message="tns:Header" part="AllowFieldTruncationHeader"/>
                <soap:header use="literal" message="tns:Header" part="DisableFeedTrackingHeader"/>
                <soap:header use="literal" message="tns:Header" part="StreamingEnabledHeader"/>
                <soap:header use="literal" message="tns:Header" part="AllOrNoneHeader"/>
                <soap:header use="literal" message="tns:Header" part="DuplicateRuleHeader"/>
                <soap:header use="literal" message="tns:Header" part="LocaleOptions"/>
                <soap:header use="literal" message="tns:Header" part="DebuggingHeader"/>
                <soap:header use="literal" message="tns:Header" part="PackageVersionHeader"/>
                <soap:header use="literal" message="tns:Header" part="EmailHeader"/>
                <soap:header use="literal" message="tns:Header" part="OwnerChangeOptions"/>
                <soap:body parts="parameters" use="literal"/>
            </input>
            <output>
                <soap:header use="literal" message="tns:Header" part="DebuggingInfo"/>
                <soap:header use="literal" message="tns:Header" part="LimitInfoHeader"/>
                <soap:body use="literal"/>
            </output>
            <fault name="InvalidSObjectFault">
                <soap:fault name="InvalidSObjectFault" use="literal"/>
            </fault>
            <fault name="UnexpectedErrorFault">
                <soap:fault name="UnexpectedErrorFault" use="literal"/>
            </fault>
            <fault name="InvalidIdFault">
                <soap:fault name="InvalidIdFault" use="literal"/>
            </fault>
            <fault name="InvalidFieldFault">
                <soap:fault name="InvalidFieldFault" use="literal"/>
            </fault>
        </operation>
        <operation name="merge">
            <soap:operation soapAction=""/>
            <input>
                <soap:header use="literal" message="tns:Header" part="SessionHeader"/>
                <soap:header use="literal" message="tns:Header" part="AssignmentRuleHeader"/>
                <soap:header use="literal" message="tns:Header" part="MruHeader"/>
                <soap:header use="literal" message="tns:Header" part="AllowFieldTruncationHeader"/>
                <soap:header use="literal" message="tns:Header" part="DisableFeedTrackingHeader"/>
                <soap:header use="literal" message="tns:Header" part="StreamingEnabledHeader"/>
                <soap:header use="literal" message="tns:Header" part="DuplicateRuleHeader"/>
                <soap:header use="literal" message="tns:Header" part="LocaleOptions"/>
                <soap:header use="literal" message="tns:Header" part="DebuggingHeader"/>
                <soap:header use="literal" message="tns:Header" part="PackageVersionHeader"/>
                <soap:header use="literal" message="tns:Header" part="EmailHeader"/>
                <soap:body parts="parameters" use="literal"/>
            </input>
            <output>
                <soap:header use="literal" message="tns:Header" part="DebuggingInfo"/>
                <soap:header use="literal" message="tns:Header" part="LimitInfoHeader"/>
                <soap:body use="literal"/>
            </output>
            <fault name="InvalidSObjectFault">
                <soap:fault name="InvalidSObjectFault" use="literal"/>
            </fault>
            <fault name="UnexpectedErrorFault">
                <soap:fault name="UnexpectedErrorFault" use="literal"/>
            </fault>
            <fault name="InvalidIdFault">
                <soap:fault name="InvalidIdFault" use="literal"/>
            </fault>
            <fault name="InvalidFieldFault">
                <soap:fault name="InvalidFieldFault" use="literal"/>
            </fault>
        </operation>
        <operation name="delete">
            <soap:operation soapAction=""/>
            <input>
                <soap:header use="literal" message="tns:Header" part="SessionHeader"/>
                <soap:header use="literal" message="tns:Header" part="PackageVersionHeader"/>
                <soap:header use="literal" message="tns:Header" part="UserTerritoryDeleteHeader"/>
                <soap:header use="literal" message="tns:Header" part="EmailHeader"/>
                <soap:header use="literal" message="tns:Header" part="AllowFieldTruncationHeader"/>
                <soap:header use="literal" message="tns:Header" part="DisableFeedTrackingHeader"/>
                <soap:header use="literal" message="tns:Header" part="StreamingEnabledHeader"/>
                <soap:header use="literal" message="tns:Header" part="AllOrNoneHeader"/>
                <soap:header use="literal" message="tns:Header" part="DuplicateRuleHeader"/>
                <soap:header use="literal" message="tns:Header" part="LocaleOptions"/>
                <soap:header use="literal" message="tns:Header" part="DebuggingHeader"/>
                <soap:body parts="parameters" use="literal"/>
            </input>
            <output>
                <soap:header use="literal" message="tns:Header" part="DebuggingInfo"/>
                <soap:header use="literal" message="tns:Header" part="LimitInfoHeader"/>
                <soap:body use="literal"/>
            </output>
            <fault name="UnexpectedErrorFault">
                <soap:fault name="UnexpectedErrorFault" use="literal"/>
            </fault>
        </operation>
        <operation name="undelete">
            <soap:operation soapAction=""/>
            <input>
                <soap:header use="literal" message="tns:Header" part="SessionHeader"/>
                <soap:header use="literal" message="tns:Header" part="AllowFieldTruncationHeader"/>
                <soap:header use="literal" message="tns:Header" part="DisableFeedTrackingHeader"/>
                <soap:header use="literal" message="tns:Header" part="StreamingEnabledHeader"/>
                <soap:header use="literal" message="tns:Header" part="AllOrNoneHeader"/>
                <soap:header use="literal" message="tns:Header" part="DuplicateRuleHeader"/>
                <soap:header use="literal" message="tns:Header" part="LocaleOptions"/>
                <soap:header use="literal" message="tns:Header" part="DebuggingHeader"/>
                <soap:header use="literal" message="tns:Header" part="PackageVersionHeader"/>
                <soap:body parts="parameters" use="literal"/>
            </input>
            <output>
                <soap:header use="literal" message="tns:Header" part="DebuggingInfo"/>
                <soap:header use="literal" message="tns:Header" part="LimitInfoHeader"/>
                <soap:body use="literal"/>
            </output>
            <fault name="UnexpectedErrorFault">
                <soap:fault name="UnexpectedErrorFault" use="literal"/>
            </fault>
        </operation>
        <operation name="emptyRecycleBin">
            <soap:operation soapAction=""/>
            <input>
                <soap:header use="literal" message="tns:Header" part="SessionHeader"/>
                <soap:body parts="parameters" use="literal"/>
            </input>
            <output>
                <soap:header use="literal" message="tns:Header" part="LimitInfoHeader"/>
                <soap:body use="literal"/>
            </output>
            <fault name="UnexpectedErrorFault">
                <soap:fault name="UnexpectedErrorFault" use="literal"/>
            </fault>
        </operation>
        <operation name="retrieve">
            <soap:operation soapAction=""/>
            <input>
                <soap:header use="literal" message="tns:Header" part="SessionHeader"/>
                <soap:header use="literal" message="tns:Header" part="QueryOptions"/>
                <soap:header use="literal" message="tns:Header" part="MruHeader"/>
                <soap:header use="literal" message="tns:Header" part="PackageVersionHeader"/>
                <soap:body parts="parameters" use="literal"/>
            </input>
            <output>
                <soap:header use="literal" message="tns:Header" part="LimitInfoHeader"/>
                <soap:body use="literal"/>
            </output>
            <fault name="InvalidSObjectFault">
                <soap:fault name="InvalidSObjectFault" use="literal"/>
            </fault>
            <fault name="InvalidFieldFault">
                <soap:fault name="InvalidFieldFault" use="literal"/>
            </fault>
            <fault name="MalformedQueryFault">
                <soap:fault name="MalformedQueryFault" use="literal"/>
            </fault>
            <fault name="UnexpectedErrorFault">
                <soap:fault name="UnexpectedErrorFault" use="literal"/>
            </fault>
            <fault name="InvalidIdFault">
                <soap:fault name="InvalidIdFault" use="literal"/>
            </fault>
        </operation>
        <operation name="process">
            <soap:operation soapAction=""/>
            <input>
                <soap:header use="literal" message="tns:Header" part="SessionHeader"/>
                <soap:header use="literal" message="tns:Header" part="AllowFieldTruncationHeader"/>
                <soap:header use="literal" message="tns:Header" part="DisableFeedTrackingHeader"/>
                <soap:header use="literal" message="tns:Header" part="StreamingEnabledHeader"/>
                <soap:header use="literal" message="tns:Header" part="DuplicateRuleHeader"/>
                <soap:header use="literal" message="tns:Header" part="LocaleOptions"/>
                <soap:header use="literal" message="tns:Header" part="DebuggingHeader"/>
                <soap:header use="literal" message="tns:Header" part="PackageVersionHeader"/>
                <soap:body parts="parameters" use="literal"/>
            </input>
            <output>
                <soap:header use="literal" message="tns:Header" part="DebuggingInfo"/>
                <soap:header use="literal" message="tns:Header" part="LimitInfoHeader"/>
                <soap:body use="literal"/>
            </output>
            <fault name="UnexpectedErrorFault">
                <soap:fault name="UnexpectedErrorFault" use="literal"/>
            </fault>
            <fault name="InvalidIdFault">
                <soap:fault name="InvalidIdFault" use="literal"/>
            </fault>
        </operation>
        <operation name="convertLead">
            <soap:operation soapAction=""/>
            <input>
                <soap:header use="literal" message="tns:Header" part="SessionHeader"/>
                <soap:header use="literal" message="tns:Header" part="AllowFieldTruncationHeader"/>
                <soap:header use="literal" message="tns:Header" part="DisableFeedTrackingHeader"/>
                <soap:header use="literal" message="tns:Header" part="StreamingEnabledHeader"/>
                <soap:header use="literal" message="tns:Header" part="DuplicateRuleHeader"/>
                <soap:header use="literal" message="tns:Header" part="LocaleOptions"/>
                <soap:header use="literal" message="tns:Header" part="DebuggingHeader"/>
                <soap:header use="literal" message="tns:Header" part="PackageVersionHeader"/>
                <soap:body parts="parameters" use="literal"/>
            </input>
            <output>
                <soap:header use="literal" message="tns:Header" part="DebuggingInfo"/>
                <soap:header use="literal" message="tns:Header" part="LimitInfoHeader"/>
                <soap:body use="literal"/>
            </output>
            <fault name="UnexpectedErrorFault">
                <soap:fault name="UnexpectedErrorFault" use="literal"/>
            </fault>
        </operation>
        <operation name="logout">
            <soap:operation soapAction=""/>
            <input>
                <soap:header use="literal" message="tns:Header" part="SessionHeader"/>
                <soap:body parts="parameters" use="literal"/>
            </input>
            <output>
                <soap:header use="literal" message="tns:Header" part="LimitInfoHeader"/>
                <soap:body use="literal"/>
            </output>
            <fault name="UnexpectedErrorFault">
                <soap:fault name="UnexpectedErrorFault" use="literal"/>
            </fault>
        </operation>
        <operation name="invalidateSessions">
            <soap:operation soapAction=""/>
            <input>
                <soap:header use="literal" message="tns:Header" part="SessionHeader"/>
                <soap:body parts="parameters" use="literal"/>
            </input>
            <output>
                <soap:header use="literal" message="tns:Header" part="LimitInfoHeader"/>
                <soap:body use="literal"/>
            </output>
            <fault name="UnexpectedErrorFault">
                <soap:fault name="UnexpectedErrorFault" use="literal"/>
            </fault>
        </operation>
        <operation name="getDeleted">
            <soap:operation soapAction=""/>
            <input>
                <soap:header use="literal" message="tns:Header" part="SessionHeader"/>
                <soap:body parts="parameters" use="literal"/>
            </input>
            <output>
                <soap:header use="literal" message="tns:Header" part="LimitInfoHeader"/>
                <soap:body use="literal"/>
            </output>
            <fault name="InvalidSObjectFault">
                <soap:fault name="InvalidSObjectFault" use="literal"/>
            </fault>
            <fault name="UnexpectedErrorFault">
                <soap:fault name="UnexpectedErrorFault" use="literal"/>
            </fault>
        </operation>
        <operation name="getUpdated">
            <soap:operation soapAction=""/>
            <input>
                <soap:header use="literal" message="tns:Header" part="SessionHeader"/>
                <soap:body parts="parameters" use="literal"/>
            </input>
            <output>
                <soap:header use="literal" message="tns:Header" part="LimitInfoHeader"/>
                <soap:body use="literal"/>
            </output>
            <fault name="InvalidSObjectFault">
                <soap:fault name="InvalidSObjectFault" use="literal"/>
            </fault>
            <fault name="UnexpectedErrorFault">
                <soap:fault name="UnexpectedErrorFault" use="literal"/>
            </fault>
        </operation>
        <operation name="query">
            <soap:operation soapAction=""/>
            <input>
                <soap:header use="literal" message="tns:Header" part="SessionHeader"/>
                <soap:header use="literal" message="tns:Header" part="QueryOptions"/>
                <soap:header use="literal" message="tns:Header" part="MruHeader"/>
                <soap:header use="literal" message="tns:Header" part="PackageVersionHeader"/>
                <soap:body parts="parameters" use="literal"/>
            </input>
            <output>
                <soap:header use="literal" message="tns:Header" part="LimitInfoHeader"/>
                <soap:body use="literal"/>
            </output>
            <fault name="InvalidSObjectFault">
                <soap:fault name="InvalidSObjectFault" use="literal"/>
            </fault>
            <fault name="InvalidFieldFault">
                <soap:fault name="InvalidFieldFault" use="literal"/>
            </fault>
            <fault name="MalformedQueryFault">
                <soap:fault name="MalformedQueryFault" use="literal"/>
            </fault>
            <fault name="InvalidIdFault">
                <soap:fault name="InvalidIdFault" use="literal"/>
            </fault>
            <fault name="UnexpectedErrorFault">
                <soap:fault name="UnexpectedErrorFault" use="literal"/>
            </fault>
            <fault name="InvalidQueryLocatorFault">
                <soap:fault name="InvalidQueryLocatorFault" use="literal"/>
            </fault>
        </operation>
        <operation name="queryAll">
            <soap:operation soapAction=""/>
            <input>
                <soap:header use="literal" message="tns:Header" part="SessionHeader"/>
                <soap:header use="literal" message="tns:Header" part="QueryOptions"/>
                <soap:body parts="parameters" use="literal"/>
            </input>
            <output>
                <soap:header use="literal" message="tns:Header" part="LimitInfoHeader"/>
                <soap:body use="literal"/>
            </output>
            <fault name="InvalidSObjectFault">
                <soap:fault name="InvalidSObjectFault" use="literal"/>
            </fault>
            <fault name="InvalidFieldFault">
                <soap:fault name="InvalidFieldFault" use="literal"/>
            </fault>
            <fault name="MalformedQueryFault">
                <soap:fault name="MalformedQueryFault" use="literal"/>
            </fault>
            <fault name="InvalidIdFault">
                <soap:fault name="InvalidIdFault" use="literal"/>
            </fault>
            <fault name="UnexpectedErrorFault">
                <soap:fault name="UnexpectedErrorFault" use="literal"/>
            </fault>
            <fault name="InvalidQueryLocatorFault">
                <soap:fault name="InvalidQueryLocatorFault" use="literal"/>
            </fault>
        </operation>
        <operation name="queryMore">
            <soap:operation soapAction=""/>
            <input>
                <soap:header use="literal" message="tns:Header" part="SessionHeader"/>
                <soap:header use="literal" message="tns:Header" part="QueryOptions"/>
                <soap:body parts="parameters" use="literal"/>
            </input>
            <output>
                <soap:header use="literal" message="tns:Header" part="LimitInfoHeader"/>
                <soap:body use="literal"/>
            </output>
            <fault name="InvalidQueryLocatorFault">
                <soap:fault name="InvalidQueryLocatorFault" use="literal"/>
            </fault>
            <fault name="UnexpectedErrorFault">
                <soap:fault name="UnexpectedErrorFault" use="literal"/>
            </fault>
            <fault name="InvalidFieldFault">
                <soap:fault name="InvalidFieldFault" use="literal"/>
            </fault>
            <fault name="MalformedQueryFault">
                <soap:fault name="MalformedQueryFault" use="literal"/>
            </fault>
        </operation>
        <operation name="search">
            <soap:operation soapAction=""/>
            <input>
                <soap:header use="literal" message="tns:Header" part="SessionHeader"/>
                <soap:header use="literal" message="tns:Header" part="PackageVersionHeader"/>
                <soap:body parts="parameters" use="literal"/>
            </input>
            <output>
                <soap:header use="literal" message="tns:Header" part="LimitInfoHeader"/>
                <soap:body use="literal"/>
            </output>
            <fault name="InvalidSObjectFault">
                <soap:fault name="InvalidSObjectFault" use="literal"/>
            </fault>
            <fault name="InvalidFieldFault">
                <soap:fault name="InvalidFieldFault" use="literal"/>
            </fault>
            <fault name="MalformedSearchFault">
                <soap:fault name="MalformedSearchFault" use="literal"/>
            </fault>
            <fault name="UnexpectedErrorFault">
                <soap:fault name="UnexpectedErrorFault" use="literal"/>
            </fault>
        </operation>
        <operation name="getServerTimestamp">
            <soap:operation soapAction=""/>
            <input>
                <soap:header use="literal" message="tns:Header" part="SessionHeader"/>
                <soap:body parts="parameters" use="literal"/>
            </input>
            <output>
                <soap:header use="literal" message="tns:Header" part="LimitInfoHeader"/>
                <soap:body use="literal"/>
            </output>
            <fault name="UnexpectedErrorFault">
                <soap:fault name="UnexpectedErrorFault" use="literal"/>
            </fault>
        </operation>
        <operation name="setPassword">
            <soap:operation soapAction=""/>
            <input>
                <soap:header use="literal" message="tns:Header" part="SessionHeader"/>
                <soap:body parts="parameters" use="literal"/>
            </input>
            <output>
                <soap:header use="literal" message="tns:Header" part="LimitInfoHeader"/>
                <soap:body use="literal"/>
            </output>
            <fault name="InvalidIdFault">
                <soap:fault name="InvalidIdFault" use="literal"/>
            </fault>
            <fault name="InvalidNewPasswordFault">
                <soap:fault name="InvalidNewPasswordFault" use="literal"/>
            </fault>
            <fault name="UnexpectedErrorFault">
                <soap:fault name="UnexpectedErrorFault" use="literal"/>
            </fault>
        </operation>
        <operation name="changeOwnPassword">
            <soap:operation soapAction=""/>
            <input>
                <soap:header use="literal" message="tns:Header" part="SessionHeader"/>
                <soap:body parts="parameters" use="literal"/>
            </input>
            <output>
                <soap:header use="literal" message="tns:Header" part="LimitInfoHeader"/>
                <soap:body use="literal"/>
            </output>
            <fault name="InvalidNewPasswordFault">
                <soap:fault name="InvalidNewPasswordFault" use="literal"/>
            </fault>
            <fault name="InvalidOldPasswordFault">
                <soap:fault name="InvalidOldPasswordFault" use="literal"/>
            </fault>
            <fault name="UnexpectedErrorFault">
                <soap:fault name="UnexpectedErrorFault" use="literal"/>
            </fault>
        </operation>
        <operation name="resetPassword">
            <soap:operation soapAction=""/>
            <input>
                <soap:header use="literal" message="tns:Header" part="SessionHeader"/>
                <soap:header use="literal" message="tns:Header" part="EmailHeader"/>
                <soap:body parts="parameters" use="literal"/>
            </input>
            <output>
                <soap:header use="literal" message="tns:Header" part="LimitInfoHeader"/>
                <soap:body use="literal"/>
            </output>
            <fault name="InvalidIdFault">
                <soap:fault name="InvalidIdFault" use="literal"/>
            </fault>
            <fault name="UnexpectedErrorFault">
                <soap:fault name="UnexpectedErrorFault" use="literal"/>
            </fault>
        </operation>
        <operation name="getUserInfo">
            <soap:operation soapAction=""/>
            <input>
                <soap:header use="literal" message="tns:Header" part="SessionHeader"/>
                <soap:body parts="parameters" use="literal"/>
            </input>
            <output>
                <soap:header use="literal" message="tns:Header" part="LimitInfoHeader"/>
                <soap:body use="literal"/>
            </output>
            <fault name="UnexpectedErrorFault">
                <soap:fault name="UnexpectedErrorFault" use="literal"/>
            </fault>
        </operation>
        <operation name="sendEmailMessage">
            <soap:operation soapAction=""/>
            <input>
                <soap:header use="literal" message="tns:Header" part="SessionHeader"/>
                <soap:body parts="parameters" use="literal"/>
            </input>
            <output>
                <soap:header use="literal" message="tns:Header" part="LimitInfoHeader"/>
                <soap:body use="literal"/>
            </output>
            <fault name="UnexpectedErrorFault">
                <soap:fault name="UnexpectedErrorFault" use="literal"/>
            </fault>
        </operation>
        <operation name="sendEmail">
            <soap:operation soapAction=""/>
            <input>
                <soap:header use="literal" message="tns:Header" part="SessionHeader"/>
                <soap:body parts="parameters" use="literal"/>
            </input>
            <output>
                <soap:header use="literal" message="tns:Header" part="LimitInfoHeader"/>
                <soap:body use="literal"/>
            </output>
            <fault name="UnexpectedErrorFault">
                <soap:fault name="UnexpectedErrorFault" use="literal"/>
            </fault>
        </operation>
        <operation name="renderEmailTemplate">
            <soap:operation soapAction=""/>
            <input>
                <soap:header use="literal" message="tns:Header" part="SessionHeader"/>
                <soap:body parts="parameters" use="literal"/>
            </input>
            <output>
                <soap:header use="literal" message="tns:Header" part="LimitInfoHeader"/>
                <soap:body use="literal"/>
            </output>
            <fault name="UnexpectedErrorFault">
                <soap:fault name="UnexpectedErrorFault" use="literal"/>
            </fault>
        </operation>
        <operation name="renderStoredEmailTemplate">
            <soap:operation soapAction=""/>
            <input>
                <soap:header use="literal" message="tns:Header" part="SessionHeader"/>
                <soap:body parts="parameters" use="literal"/>
            </input>
            <output>
                <soap:header use="literal" message="tns:Header" part="LimitInfoHeader"/>
                <soap:body use="literal"/>
            </output>
            <fault name="UnexpectedErrorFault">
                <soap:fault name="UnexpectedErrorFault" use="literal"/>
            </fault>
        </operation>
        <operation name="performQuickActions">
            <soap:operation soapAction=""/>
            <input>
                <soap:header use="literal" message="tns:Header" part="SessionHeader"/>
                <soap:header use="literal" message="tns:Header" part="AssignmentRuleHeader"/>
                <soap:header use="literal" message="tns:Header" part="MruHeader"/>
                <soap:header use="literal" message="tns:Header" part="AllowFieldTruncationHeader"/>
                <soap:header use="literal" message="tns:Header" part="DisableFeedTrackingHeader"/>
                <soap:header use="literal" message="tns:Header" part="StreamingEnabledHeader"/>
                <soap:header use="literal" message="tns:Header" part="AllOrNoneHeader"/>
                <soap:header use="literal" message="tns:Header" part="DuplicateRuleHeader"/>
                <soap:header use="literal" message="tns:Header" part="LocaleOptions"/>
                <soap:header use="literal" message="tns:Header" part="DebuggingHeader"/>
                <soap:header use="literal" message="tns:Header" part="PackageVersionHeader"/>
                <soap:header use="literal" message="tns:Header" part="EmailHeader"/>
                <soap:header use="literal" message="tns:Header" part="OwnerChangeOptions"/>
                <soap:body parts="parameters" use="literal"/>
            </input>
            <output>
                <soap:header use="literal" message="tns:Header" part="LimitInfoHeader"/>
                <soap:body use="literal"/>
            </output>
        </operation>
        <operation name="describeQuickActions">
            <soap:operation soapAction=""/>
            <input>
                <soap:header use="literal" message="tns:Header" part="SessionHeader"/>
                <soap:header use="literal" message="tns:Header" part="PackageVersionHeader"/>
                <soap:header use="literal" message="tns:Header" part="LocaleOptions"/>
                <soap:body parts="parameters" use="literal"/>
            </input>
            <output>
                <soap:header use="literal" message="tns:Header" part="LimitInfoHeader"/>
                <soap:body use="literal"/>
            </output>
        </operation>
        <operation name="describeAvailableQuickActions">
            <soap:operation soapAction=""/>
            <input>
                <soap:header use="literal" message="tns:Header" part="SessionHeader"/>
                <soap:header use="literal" message="tns:Header" part="PackageVersionHeader"/>
                <soap:header use="literal" message="tns:Header" part="LocaleOptions"/>
                <soap:body parts="parameters" use="literal"/>
            </input>
            <output>
                <soap:header use="literal" message="tns:Header" part="LimitInfoHeader"/>
                <soap:body use="literal"/>
            </output>
        </operation>
        <operation name="retrieveQuickActionTemplates">
            <soap:operation soapAction=""/>
            <input>
                <soap:header use="literal" message="tns:Header" part="SessionHeader"/>
                <soap:header use="literal" message="tns:Header" part="PackageVersionHeader"/>
                <soap:header use="literal" message="tns:Header" part="LocaleOptions"/>
                <soap:body parts="parameters" use="literal"/>
            </input>
            <output>
                <soap:header use="literal" message="tns:Header" part="LimitInfoHeader"/>
                <soap:body use="literal"/>
            </output>
        </operation>
        <operation name="describeVisualForce">
            <soap:operation soapAction=""/>
            <input>
                <soap:header use="literal" message="tns:Header" part="SessionHeader"/>
                <soap:header use="literal" message="tns:Header" part="PackageVersionHeader"/>
                <soap:body parts="parameters" use="literal"/>
            </input>
            <output>
                <soap:header use="literal" message="tns:Header" part="LimitInfoHeader"/>
                <soap:body use="literal"/>
            </output>
        </operation>
        <operation name="findDuplicates">
            <soap:operation soapAction=""/>
            <input>
                <soap:header use="literal" message="tns:Header" part="SessionHeader"/>
                <soap:header use="literal" message="tns:Header" part="PackageVersionHeader"/>
                <soap:header use="literal" message="tns:Header" part="DuplicateRuleHeader"/>
                <soap:body parts="parameters" use="literal"/>
            </input>
            <output>
                <soap:header use="literal" message="tns:Header" part="LimitInfoHeader"/>
                <soap:body use="literal"/>
            </output>
            <fault name="InvalidSObjectFault">
                <soap:fault name="InvalidSObjectFault" use="literal"/>
            </fault>
            <fault name="UnexpectedErrorFault">
                <soap:fault name="UnexpectedErrorFault" use="literal"/>
            </fault>
            <fault name="InvalidFieldFault">
                <soap:fault name="InvalidFieldFault" use="literal"/>
            </fault>
        </operation>
        <operation name="findDuplicatesByIds">
            <soap:operation soapAction=""/>
            <input>
                <soap:header use="literal" message="tns:Header" part="SessionHeader"/>
                <soap:header use="literal" message="tns:Header" part="PackageVersionHeader"/>
                <soap:header use="literal" message="tns:Header" part="DuplicateRuleHeader"/>
                <soap:body parts="parameters" use="literal"/>
            </input>
            <output>
                <soap:header use="literal" message="tns:Header" part="LimitInfoHeader"/>
                <soap:body use="literal"/>
            </output>
            <fault name="InvalidIdFault">
                <soap:fault name="InvalidIdFault" use="literal"/>
            </fault>
            <fault name="UnexpectedErrorFault">
                <soap:fault name="UnexpectedErrorFault" use="literal"/>
            </fault>
        </operation>
        <operation name="describeNouns">
            <soap:operation soapAction=""/>
            <input>
                <soap:header use="literal" message="tns:Header" part="SessionHeader"/>
                <soap:header use="literal" message="tns:Header" part="PackageVersionHeader"/>
                <soap:header use="literal" message="tns:Header" part="LocaleOptions"/>
                <soap:body parts="parameters" use="literal"/>
            </input>
            <output>
                <soap:header use="literal" message="tns:Header" part="LimitInfoHeader"/>
                <soap:body use="literal"/>
            </output>
        </operation>

    </binding>

    <!-- Soap Service Endpoint -->
    <service name="SforceService">
        <documentation>Sforce SOAP API</documentation>
        <port binding="tns:SoapBinding" name="Soap">
            <soap:address location="https://login.salesforce.com/services/Soap/c/41.0"/>
        </port>
    </service>
</definitions>
",
        "signature": "8e07e3dce7a5bead1f9aa2a6e8adb787cf79935370405130d13bdd62d888ef71"
      },
      "displayName": "Enterprise WSDL Location",
      "hasAttachment": true,
      "hiddenFlag": false,
      "propertyGroup": "CONNECTION_PROPS",
      "propertyName": "targetWSDLURL",
      "propertyType": "URL_OR_FILE",
      "propertyValue": "cri_newContactExtId_salesforce_enterprise_wsdl.wsdl",
      "requiredFlag": true
    }
  ],
  "securityPolicy": "CUSTOM",
  "securityProperties": [
    {
      "displayName": "Username",
      "hasAttachment": false,
      "hiddenFlag": false,
      "propertyGroup": "CREDENTIALS",
      "propertyName": "username",
      "propertyType": "STRING",
      "propertyValue": "@ICS_CONNECTOR_SF_USERNAME@",
      "requiredFlag": true
    },
    {
      "displayName": "Password",
      "hasAttachment": false,
      "hiddenFlag": false,
      "propertyGroup": "CREDENTIALS",
      "propertyName": "password",
      "propertyType": "PASSWORD",
      "propertyValue": "@ICS_CONNECTOR_SF_PASSWORD@",
      "requiredFlag": true
    }
  ]
}